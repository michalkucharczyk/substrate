warning: unused import: `Encode`
  --> client/transaction-pool/src/graph/pool.rs:20:13
   |
20 | use codec::{Encode};
   |             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `sc-transaction-pool` (lib) generated 1 warning
warning: unused import: `TransactionValidityError`
   --> test-utils/runtime/src/system2.rs:267:63
    |
267 |         InvalidTransaction, TransactionSource, TransactionValidity, TransactionValidityError, ValidTransaction }
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `offchain::KeyTypeId`
  --> test-utils/runtime/src/lib.rs:31:15
   |
31 | use sp_core::{offchain::KeyTypeId, OpaqueMetadata, RuntimeDebug};
   |               ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `KeyOwnerProofSystem`, `RuntimeDbWeight`, `Weight`
  --> test-utils/runtime/src/lib.rs:41:31
   |
41 |     traits::{ConstU32, ConstU64, KeyOwnerProofSystem},
   |                                  ^^^^^^^^^^^^^^^^^^^
42 |     weights::{RuntimeDbWeight, Weight},
   |               ^^^^^^^^^^^^^^^  ^^^^^^

warning: unused imports: `BlockLength`, `BlockWeights`
  --> test-utils/runtime/src/lib.rs:44:28
   |
44 | use frame_system::limits::{BlockLength, BlockWeights};
   |                            ^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused imports: `AccountIdLookup`, `Perbill`
  --> test-utils/runtime/src/lib.rs:52:3
   |
52 |         AccountIdLookup, BlakeTwo256, Block as BlockT, DispatchInfoOf, Verify,
   |         ^^^^^^^^^^^^^^^
...
57 |     ApplyExtrinsicResult, Perbill,
   |                           ^^^^^^^

warning: unused variable: `n`
  --> test-utils/runtime/src/system2.rs:88:18
   |
88 |         fn on_finalize(n: T::BlockNumber) {
   |                        ^ help: if this is intentional, prefix it with an underscore: `_n`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `signature`
   --> test-utils/runtime/src/system2.rs:119:61
    |
119 | ...r<T>, transfer: Transfer, signature: AccountSignature, exhaust_resources_when_not_first: bool) -> DispatchResult {
    |                              ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_signature`

warning: unused variable: `exhaust_resources_when_not_first`
   --> test-utils/runtime/src/system2.rs:119:90
    |
119 | ...e, exhaust_resources_when_not_first: bool) -> DispatchResult {
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exhaust_resources_when_not_first`

warning: unused variable: `origin`
   --> test-utils/runtime/src/system2.rs:156:34
    |
156 |         pub fn storage_change_unsigned(origin: OriginFor<T>, key: Vec<u8>, value: Option<Vec<u8>>) -> DispatchResult {
    |                                        ^^^^^^ help: if this is intentional, prefix it with an underscore: `_origin`

warning: unused variable: `origin`
   --> test-utils/runtime/src/system2.rs:203:34
    |
203 |         pub fn deposit_log_digest_item(origin: OriginFor<T>, log: sp_runtime::generic::DigestItem) -> DispatchResult {
    |                                        ^^^^^^ help: if this is intentional, prefix it with an underscore: `_origin`

warning: unused variable: `exhaust_resources_when_not_first`
   --> test-utils/runtime/src/lib.rs:165:97
    |
165 | ...ref signature, ref exhaust_resources_when_not_first}) = uxt.function  {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try ignoring the field: `exhaust_resources_when_not_first: _`

warning: unused variable: `who`
   --> test-utils/runtime/src/lib.rs:347:3
    |
347 |         who: &Self::AccountId,
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_who`

warning: unused variable: `version`
   --> test-utils/runtime/src/lib.rs:830:26
    |
830 |         fn metadata_at_version(version: u32) -> Option<OpaqueMetadata> {
    |                                ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_version`

warning: `substrate-test-runtime` (lib) generated 13 warnings
warning: unused import: `frame_system::CheckNonce`
  --> test-utils/runtime/client/src/block_builder_ext.rs:25:5
   |
25 | use frame_system::CheckNonce;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: missing documentation for an associated function
  --> test-utils/runtime/client/src/block_builder_ext.rs:52:2
   |
52 |     fn push_deposit_log_digest_item(&mut self, log: sp_runtime::generic::DigestItem)  -> Result<(), sp_blockchain::Error>;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> test-utils/runtime/client/src/lib.rs:20:9
   |
20 | #![warn(missing_docs)]
   |         ^^^^^^^^^^^^

warning: `substrate-test-runtime-client` (lib) generated 2 warnings
warning: `sc-transaction-pool` (lib) generated 1 warning (1 duplicate)
   Compiling sc-network v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network)
   Compiling sc-consensus-beefy-rpc v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/beefy/rpc)
   Compiling sc-transaction-pool v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/transaction-pool)
   Compiling sc-consensus-manual-seal v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/manual-seal)
   Compiling node-cli v3.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/bin/node/cli)
   Compiling sc-network-sync v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/sync)
   Compiling sc-authority-discovery v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/authority-discovery)
   Compiling sc-network-gossip v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network-gossip)
   Compiling sc-client-db v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/db)
   Compiling sc-consensus-grandpa v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/grandpa)
   Compiling sc-consensus-beefy v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/beefy)
   Compiling sc-consensus-babe v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/babe)
   Compiling sc-consensus-aura v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/aura)
   Compiling sc-rpc v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc)
warning: unused import: `UncheckedExtrinsic`
   --> client/transaction-pool/src/graph/pool.rs:470:60
    |
470 |     use substrate_test_runtime::{AccountId, create_extrinsic, UncheckedExtrinsic, system2, Transfer, H256};
    |                                                               ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: variable does not need to be mutable
   --> client/consensus/beefy/src/tests.rs:179:9
    |
179 |                 let mut block = builder.build().unwrap().block;
    |                     ----^^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: function `add_mmr_digest` is never used
   --> client/consensus/beefy/src/tests.rs:328:4
    |
328 | fn add_mmr_digest(header: &mut Header, mmr_hash: MmrRootHash) {
    |    ^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `add_auth_change_digest` is never used
   --> client/consensus/beefy/src/tests.rs:345:4
    |
345 | fn add_auth_change_digest(header: &mut Header, new_auth_set: BeefyValidatorSet) {
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `sp_runtime::traits::Header`
   --> client/consensus/grandpa/src/warp_proof.rs:329:6
    |
329 |     use sp_runtime::traits::Header as _;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `peers_c`
   --> client/consensus/grandpa/src/tests.rs:773:6
    |
773 |     let peers_c = &[Ed25519Keyring::Dave, Ed25519Keyring::Alice, Ed25519Keyring::Bob];
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_peers_c`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> client/consensus/grandpa/src/tests.rs:798:7
    |
798 |         let mut block = builder.build().unwrap().block;
    |             ----^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> client/consensus/grandpa/src/tests.rs:808:7
    |
808 |         let mut block = builder.build().unwrap().block;
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> client/consensus/grandpa/src/tests.rs:949:6
    |
949 |     let mut block = builder.build().unwrap().block;
    |         ----^^^^^
    |         |
    |         help: remove this `mut`

warning: function `add_scheduled_change` is never used
   --> client/consensus/grandpa/src/tests.rs:412:4
    |
412 | fn add_scheduled_change(block: &mut Block, change: ScheduledChange<BlockNumber>) {
    |    ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `add_forced_change` is never used
   --> client/consensus/grandpa/src/tests.rs:432:4
    |
432 | fn add_forced_change(
    |    ^^^^^^^^^^^^^^^^^

warning: unused variable: `this_slot`
   --> client/consensus/babe/src/tests.rs:133:7
    |
133 |         let this_slot = crate::find_pre_digest::<TestBlock>(block.header())
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_this_slot`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: field `config` is never read
  --> client/consensus/babe/src/tests.rs:81:2
   |
78 | struct DummyFactory {
   |        ------------ field in this struct
...
81 |     config: BabeConfiguration,
   |     ^^^^^^
   |
   = note: `DummyFactory` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: fields `parent_number` and `parent_slot` are never read
  --> client/consensus/babe/src/tests.rs:88:2
   |
85 | struct DummyProposer {
   |        ------------- fields in this struct
...
88 |     parent_number: u64,
   |     ^^^^^^^^^^^^^
89 |     parent_slot: Slot,
   |     ^^^^^^^^^^^

   Compiling sc-basic-authorship v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/basic-authorship)
   Compiling sc-consensus-babe-rpc v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/babe/rpc)
   Compiling sc-consensus-grandpa-rpc v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/grandpa/rpc)
warning: `sc-transaction-pool` (lib test) generated 1 warning
   Compiling sp-api-test v2.0.1 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/api/test)
   Compiling sc-rpc-spec-v2 v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc-spec-v2)
   Compiling sc-network-bitswap v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/bitswap)
warning: unused variable: `invalid_hash`
   --> client/rpc-spec-v2/src/chain_head/tests.rs:373:6
    |
373 |     let invalid_hash = format!("0x{:?}", HexDisplay::from(&INVALID_HASH));
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_invalid_hash`
    |
    = note: `#[warn(unused_variables)]` on by default

   Compiling mmr-gadget v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/merkle-mountain-range)
   Compiling sc-offchain v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/offchain)
   Compiling sc-consensus-slots v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/slots)
warning: `sc-consensus-beefy` (lib test) generated 3 warnings
   Compiling frame-system v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/frame/system)
warning: `sc-consensus-grandpa` (lib test) generated 7 warnings
   Compiling sc-block-builder v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/block-builder)
   Compiling sc-network-test v0.8.0 (/home/miszka/parity/09-test-runtime/substrate-2/client/network/test)
   Compiling sc-service-test v2.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/client/service/test)
   Compiling substrate-test-runtime v2.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/test-utils/runtime)
   Compiling sc-service v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/service)
   Compiling substrate-frame-rpc-system v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/utils/frame/rpc/system)
   Compiling sp-runtime v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/runtime)
warning: unused import: `sp_runtime::traits::BlindCheckable`
   --> client/service/src/lib.rs:588:6
    |
588 |     use sp_runtime::traits::BlindCheckable;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused `Result` that must be used
    --> test-utils/runtime/src/lib.rs:1206:3
     |
1206 |         client.runtime_api().do_trace_log(best_hash);
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: this `Result` may be an `Err` variant, which should be handled
     = note: `#[warn(unused_must_use)]` on by default

   Compiling sp-application-crypto-test v2.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/application-crypto/test)
   Compiling substrate-test-runtime-transaction-pool v2.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/test-utils/runtime/transaction-pool)
warning: `sc-consensus-babe` (lib test) generated 3 warnings
warning: `substrate-test-runtime-client` (lib test) generated 1 warning (1 duplicate)
warning: `sc-rpc-spec-v2` (lib test) generated 1 warning
   Compiling chain-spec-builder v2.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/bin/utils/chain-spec-builder)
warning: `substrate-test-runtime` (lib test) generated 14 warnings (13 duplicates)
warning: `sc-service` (lib test) generated 1 warning
    Finished test [unoptimized + debuginfo] target(s) in 8m 23s
     Running unittests src/lib.rs (target/debug/deps/binary_merkle_tree-8ad3c23b3358099e)

running 10 tests
test tests::should_generate_empty_root ... ok
test tests::should_generate_single_root ... ok
test tests::should_generate_root_pow_2 ... ok
test tests::should_generate_and_verify_proof_simple ... ok
test tests::should_generate_root_complex ... ok
test tests::should_panic_on_invalid_leaf_index - should panic ... ok
test tests::should_generate_and_verify_proof_complex ... ok
test tests::should_generate_and_verify_proof_on_test_data ... ok
test tests::should_generate_and_verify_proof_large ... ok
test tests::should_generate_and_verify_proof_large_tree ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 44.11s

     Running unittests src/main.rs (target/debug/deps/chain_spec_builder-152f1ce5a5995cac)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/fork_tree-502d1718c36868c1)

running 20 tests
test test::find_node_backtracks_after_finding_highest_descending_node ... ok
test test::find_node_index_with_predicate_works ... ok
test test::finalize_with_descendent_works ... ok
test test::iter_iterates_in_preorder ... ok
test test::rebalance_works ... ok
test test::import_doesnt_revert ... ok
test test::minimizes_calls_to_is_descendent_of ... ok
test test::import_doesnt_add_duplicates ... ok
test test::prune_works_for_not_direct_ancestor ... ok
test test::prune_works_for_out_of_tree_hashes ... ok
test test::finalize_with_ancestor_works ... ok
test test::finalize_works ... ok
test test::find_node_works ... ok
test test::drain_filter_works ... ok
test test::prune_works_for_in_tree_hashes ... ok
test test::find_node_index_works ... ok
test test::finalize_root_works ... ok
test test::prune_works_for_far_away_ancestor ... ok
test test::map_works ... ok
test test::post_order_traversal_requirement ... ok

test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_benchmarking-6469dc580698db9f)

running 25 tests
test tests::benchmarks::benchmarks_macro_works_for_non_dispatchable ... ok
test analysis::tests::analysis_median_slopes_should_work ... ok
test analysis::tests::intercept_of_a_little_under_zero_is_rounded_up_to_zero ... ok
test analysis::tests::analysis_min_squares_iqr_uses_multiple_samples_for_same_parameters ... ok
test analysis::tests::test_linear_regression ... ok
test analysis::tests::analysis_median_min_squares_should_work ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests_instance::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test baseline::mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::benchmarks::benchmarks_macro_rename_works ... ok
test tests::benchmarks::benchmark_override_works ... ok
test tests::benchmarks::benchmarks_macro_works ... ok
test tests::benchmarks::benchmark_error_wipes_storage ... ok
test tests::benchmarks::benchmarks_macro_verify_works ... ok
test tests_instance::benchmarks::bench_other_name ... ok
test tests_instance::benchmarks::bench_set_value ... ok
test tests_instance::benchmarks::bench_sort_vector ... ok
test tests::benchmarks::benchmarks_generate_unit_tests ... ok
test tests::benchmarks::test_values_per_component ... ok
test baseline::bench_hashing ... ok
test baseline::bench_addition ... ok
test baseline::bench_multiplication ... ok
test baseline::bench_division ... ok
test baseline::bench_subtraction ... ok
test baseline::bench_sr25519_verification ... ok

test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 10.22s

     Running unittests src/lib.rs (target/debug/deps/frame_benchmarking_cli-28cbe38e5238547c)

running 14 tests
test pallet::writer::test::easy_log_16_works ... ok
test shared::weight_params::test_weight_params::calc_weight_works ... ok
test shared::weight_params::test_weight_params::calc_weight_detects_negative_mul ... ok
test machine::hardware::tests::json_static_data ... ok
test shared::stats::test_stats::no_panic_short_lengths ... ok
test shared::stats::test_stats::stats_correct ... ok
test pallet::writer::test::pov_mode_ignored_linear_works ... ok
test pallet::writer::test::pov_mode_measured_const_works ... ok
test pallet::writer::test::pov_mode_mel_constant_works ... ok
test pallet::writer::test::pov_mode_mel_linear_works ... ok
test pallet::writer::test::pov_mode_measured_linear_works ... ok
test pallet::writer::test::additional_trie_layers_work ... ok
test pallet::writer::test::map_results_works ... ok
test pallet::writer::test::template_works ... ok

test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/frame_benchmarking_pallet_pov-904d6a97bcc76fe4)

running 47 tests
test tests::additional_layers_do_not_matter ... ok
test tests::emit_event_is_free ... ok
test tests::killing_is_free ... ok
test tests::linear_measured_size_works ... ok
test tests::linear_mel_size_works ... ok
test benchmarking::mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::noop_is_free ... ok
test tests::reading_twice_is_the_same_as_once ... ok
test tests::partial_unbounded_read_best_effort ... ok
test tests::storage_1m_map_multiple_entry_repeated_read_single_linear ... ok
test benchmarking::bench_storage_single_value_write ... ok
test benchmarking::bench_storage_value_unbounded_read ... ok
test benchmarking::bench_storage_value_bounded_read ... ok
test benchmarking::bench_storage_single_value_read_twice ... ok
test benchmarking::bench_storage_single_value_read ... ok
test tests::storage_1m_map_one_entry_repeated_read_const ... ok
test benchmarking::bench_storage_value_unbounded_ignored_read ... ok
test benchmarking::bench_storage_single_value_ignored_read ... ok
test tests::storage_map_read_per_component_double_linear ... ok
test benchmarking::bench_storage_value_bounded_and_unbounded_read ... ok
test benchmarking::bench_storage_single_value_kill ... ok
test benchmarking::bench_noop ... ok
test benchmarking::bench_emit_event ... ok
test tests::storage_single_value_ignored_read_no_pov ... ok
test tests::storage_single_value_ignored_some_read_has_pov ... ok
test benchmarking::bench_storage_single_value_ignored_some_read ... ok
test tests::unbounded_read_best_effort ... ok
test benchmarking::bench_storage_map_partial_unbounded_ignored_read ... ok
test benchmarking::bench_storage_map_partial_unbounded_read ... ok
test benchmarking::bench_storage_map_unbounded_both_measured_read ... ok
test benchmarking::bench_storage_1m_map_one_entry_repeated_read ... ok
test tests::writing_is_free ... ok
test benchmarking::bench_storage_1m_map_multiple_entry_repeated_read ... ok
test benchmarking::bench_storage_1m_map_read_one_value_two_additional_layers ... ok
test benchmarking::bench_storage_1m_map_read_one_value_three_additional_layers ... ok
test benchmarking::bench_measured_storage_value_read_linear_size ... ok
test benchmarking::bench_mel_storage_value_read_linear_size ... ok
test benchmarking::bench_storage_1m_map_read_one_value_four_additional_layers ... ok
test benchmarking::bench_mel_mixed_storage_double_value_read_linear_size ... ok
test benchmarking::bench_mel_storage_double_value_read_linear_size ... ok
test benchmarking::bench_measured_mixed_storage_double_value_read_linear_size ... ok
test benchmarking::bench_measured_storage_double_value_read_linear_size ... ok
test benchmarking::bench_storage_1m_double_map_read_per_component ... ok
test benchmarking::bench_storage_map_read_per_component_one_ignored ... ok
test benchmarking::bench_storage_map_read_per_component ... ok
test benchmarking::bench_storage_iteration ... ok

test result: ok. 47 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.79s

     Running unittests src/lib.rs (target/debug/deps/frame_election_provider_solution_type-cc38138711f99b03)

running 1 test
test tests::ui_fail ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_election_provider_support-d1d8efbcecdb65df)

running 17 tests
test tests::solution_type::solution_into_assignment_must_report_overflow ... ok
test tests::solution_type::remove_voter_works ... ok
test tests::solution_type::zero_target_count_is_ignored ... ok
test tests::solution_type::target_count_overflow_is_detected ... ok
test tests::solution_type::max_encoded_len_exact ... ok
test tests::solution_type::max_encoded_len_upper_bound ... ok
test tests::solution_type::max_encoded_len_too_small ... ok
test tests::solution_type::solution_struct_works_with_and_without_compact ... ok
test tests::solution_type::unique_targets_len_edge_count_works ... ok
test tests::solution_type::solution_struct_is_codec ... ok
test tests::solution_type::from_and_into_assignment_works ... ok
test tests::solution_type::from_assignment_fail_too_many_voters ... ok
test onchain::tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test onchain::tests::too_many_winners_when_desired_targets_exceed_max_winners ... ok
test onchain::tests::onchain_phragmms_works ... ok
test onchain::tests::onchain_seq_phragmen_works ... ok
test tests::index_assignments_generate_same_solution_as_plain_assignments ... ok

test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

     Running unittests src/compact.rs (target/debug/deps/compact-e1e94295671f9f00)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_executive-0e39e5e19d8cd8b3)

running 23 tests
test tests::last_runtime_upgrade_was_upgraded_works ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::runtime_upgraded_should_work ... ok
test tests::inherents_fail_validate_block ... ok
test tests::custom_runtime_upgrade_is_called_before_modules ... ok
test tests::all_weights_are_recorded_correctly ... ok
test tests::offchain_worker_works_as_expected ... ok
test tests::bad_extrinsic_not_inserted ... ok
test tests::event_from_runtime_upgrade_is_included ... ok
test tests::can_not_pay_for_tx_fee_on_full_lock ... ok
test tests::validate_unsigned ... ok
test tests::balance_transfer_dispatch_works ... ok
test tests::block_hooks_weight_is_stored ... ok
test tests::block_import_of_bad_extrinsic_root_fails - should panic ... ok
test tests::block_import_of_bad_state_root_fails - should panic ... ok
test tests::invalid_inherents_fail_block_execution - should panic ... ok
test tests::block_weight_and_size_is_stored_per_tx ... ok
test tests::invalid_inherent_position_fail - should panic ... ok
test tests::block_import_works ... ok
test tests::custom_runtime_upgrade_is_called_when_using_execute_block_trait ... ok
test tests::calculating_storage_root_twice_works ... ok
test tests::valid_inherents_position_works ... ok
test tests::block_weight_limit_enforced ... ok

test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/frame_remote_externalities-1a51b41b8772e2c4)

running 2 tests
test tests::can_load_state_snapshot ... ok
test tests::can_exclude_from_snapshot ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

     Running unittests src/lib.rs (target/debug/deps/frame_support-6ec0546ccda3e30c)

running 143 tests
test dispatch::tests::weight_should_attach_to_call_enum ... ok
test dispatch::tests::test_new_call_variant ... ok
test dispatch::per_dispatch_class_tests::accrue_works ... ok
test dispatch::per_dispatch_class_tests::reduce_works ... ok
test dispatch::per_dispatch_class_tests::add_works ... ok
test dispatch::weight_tests::weights_are_correct ... ok
test dispatch::per_dispatch_class_tests::total_works ... ok
test dispatch::tests::call_name ... ok
test dispatch::per_dispatch_class_tests::checked_accrue_works ... ok
test dispatch::per_dispatch_class_tests::checked_accrue_does_not_modify_on_error ... ok
test dispatch::weight_tests::extract_actual_weight_works ... ok
test dispatch::weight_tests::extract_actual_pays_fee_works ... ok
test dispatch::weight_tests::extract_actual_weight_caps_at_pre_weight ... ok
test dispatch::tests::get_call_names ... ok
test dispatch::tests::on_initialize_should_work_2 ... ok
test dispatch::tests::on_idle_should_work_3 ... ok
test dispatch::tests::module_json_metadata ... ok
test dispatch::tests::compact_attr ... ok
test hash::tests::test_twox_64_concat ... ok
test hash::tests::max_lengths ... ok
test hash::tests::test_blake2_128_concat ... ok
test dispatch::tests::encode_is_correct_and_decode_works ... ok
test dispatch::tests::integrity_test_should_work - should panic ... ok
test dispatch::tests::on_finalize_should_work - should panic ... ok
test dispatch::tests::on_idle_should_work_2 - should panic ... ok
test dispatch::tests::on_idle_should_work_1 - should panic ... ok
test dispatch::tests::on_initialize_should_work_1 - should panic ... ok
test metadata_ir::test::into_version_14 ... ok
test dispatch_context::tests::dispatch_context_works ... ok
test storage::stream_iter::tests::reading_more_data_as_in_the_state_is_detected ... ok
test storage::stream_iter::tests::stream_read_test ... ok
test storage::generator::nmap::test_iterators::n_map_double_map_identical_key ... ok
test storage::stream_iter::tests::detect_value_deleted_in_state ... ok
test storage::test::btree_set_append_and_decode_len_works ... ok
test storage::storage_noop_guard::tests::storage_noop_guard_does_not_double_panic - should panic ... ok
test storage::generator::tests::try_mutate_works ... ok
test storage::migration::tests::test_storage_iter ... ok
test storage::migration::tests::test_move_prefix ... ok
test storage::generator::map::test_iterators::map_reversible_reversible_iteration ... ok
test storage::migration::tests::test_move_pallet ... ok
test storage::migration::tests::test_move_storage ... ok
test storage::generator::double_map::test_iterators::double_map_iter_from ... ok
test dispatch::tests::on_runtime_upgrade_should_work ... ok
test storage::storage_noop_guard::tests::storage_noop_guard_works_on_changed_forget ... ok
test storage::storage_noop_guard::tests::storage_noop_guard_works_on_unchanged ... ok
test storage::storage_noop_guard::tests::storage_noop_guard_panics_on_early_drop - should panic ... ok
test storage::generator::nmap::test_iterators::n_map_reversible_reversible_iteration ... ok
test storage::stream_iter::tests::remaining_len_works ... ok
test storage::stream_iter::tests::detects_value_total_length_change ... ok
test storage::generator::map::test_iterators::map_iter_from ... ok
test storage::stream_iter::tests::reading_invalid_data_from_state ... ok
test storage::generator::nmap::test_iterators::n_map_iter_from ... ok
test storage::stream_iter::tests::reading_with_fill_buffer ... ok
test storage::stream_iter::tests::reading_big_intermediate_value ... ok
test storage::storage_noop_guard::tests::storage_noop_guard_panics_on_changed - should panic ... ok
test storage::generator::tests::value_translate_works ... ok
test storage::generator::double_map::test_iterators::double_map_reversible_reversible_iteration ... ok
test storage::bounded_btree_set::test::decode_len_works ... ok
test storage::bounded_vec::test::decode_len_works ... ok
test storage::bounded_btree_map::test::decode_len_works ... ok
test storage::types::counted_map::test::test_metadata ... ok
test storage::types::map::test::keylenof_works ... ok
test storage::types::double_map::test::keylenof_works ... ok
test storage::test::child_trie_prefixed_map_works ... ok
test storage::test::contains_prefix_works ... ok
test storage::test::key_prefix_iterator_works ... ok
test storage::types::counted_map::test::storage_alias_works ... ok
test storage::transactional::tests::in_storage_layer_works ... ok
test storage::transactional::tests::is_transactional_should_not_error_in_with_transaction ... ok
test storage::types::counted_map::test::append_decode_len_works ... ok
test storage::transactional::tests::is_transactional_should_return_false ... ok
test storage::generator::tests::map_translate_works ... ok
test storage::types::counted_map::test::migrate_keys_works ... ok
test storage::types::counted_map::test::test_iter_from ... ok
test storage::test::prefix_iterator_pagination_works ... ok
test storage::test::digest_storage_append_works_as_expected ... ok
test storage::types::counted_map::test::try_append_decode_len_works ... ok
test storage::types::counted_map::test::test_iter_drain_translate ... ok
test tests::check_storage_parameter_type_works ... ok
test storage::types::counted_map::test::translate_values ... ok
test storage::types::value::test::test ... ok
test storage::test::prefixed_map_works ... ok
test storage::types::counted_map::test::test_value_query ... ok
test storage::types::nmap::test::test_2_keys ... ok
test storage::types::map::test::test ... ok
test tests::double_map_mutate_exists_should_work ... ok
test storage::types::counted_map::test::test_option_query ... ok
test storage::types::double_map::test::test ... ok
test tests::double_map_basic_insert_remove_remove_prefix_should_work ... ok
test storage::types::nmap::test::test_1_key ... ok
test tests::double_map_append_should_work ... ok
test tests::double_map_try_mutate_exists_should_work ... ok
test storage::types::nmap::test::test_3_keys ... ok
test storage::test::try_append_works ... ok
test tests::double_map_swap_works ... ok
test traits::dispatch::tests::either_of_works ... ok
test tests::store_metadata ... ok
test traits::filter::test_impl_filter_stack::guards_should_work ... ok
test traits::filter::test_impl_filter_stack::impl_filter_stack_should_work ... ok
test traits::hooks::tests::on_idle_round_robin_works ... ok
test traits::dispatch::tests::either_of_diverse_works ... ok
test traits::members::tests::match_types_works ... ok
test traits::metadata::tests::check_storage_version_ordering ... ok
test traits::misc::test::defensive_assert_panics - should panic ... ok
test storage::weak_bounded_vec::test::decode_len_works ... ok
test traits::misc::test::defensive_max_works ... ok
test traits::misc::test::defensive_min_works ... ok
test traits::misc::test::defensive_min_panics - should panic ... ok
test traits::misc::test::defensive_assert_works ... ok
test traits::misc::test::defensive_max_panics - should panic ... ok
test traits::misc::test::defensive_saturating_dec_panics - should panic ... ok
test traits::misc::test::defensive_saturating_inc_panics - should panic ... ok
test traits::misc::test::defensive_saturating_accrue_panics - should panic ... ok
test traits::misc::test::defensive_strict_max_works ... ok
test traits::misc::test::defensive_strict_min_works ... ok
test traits::misc::test::defensive_strict_min_panics - should panic ... ok
test traits::misc::test::defensive_saturating_reduce_panics - should panic ... ok
test traits::misc::test::defensive_strict_max_panics - should panic ... ok
test traits::misc::test::defensive_truncate_from_slice_works ... ok
test traits::misc::test::defensive_truncate_from_vec_works ... ok
test traits::misc::test::defensive_truncating_from_slice_defensive_panics - should panic ... ok
test traits::misc::test::test_keep_opaque_wrapper ... ok
test traits::preimages::tests::bounded_size_is_correct ... ok
test traits::preimages::tests::bounded_basic_works ... ok
test traits::misc::test::defensive_truncating_from_vec_defensive_panics - should panic ... ok
test traits::tokens::fungible::item_of::test ... ok
test weights::extrinsic_weights::test_weights::sane ... ok
test traits::preimages::tests::bounded_transmuting_works ... ok
test weights::rocksdb_weights::constants::test_db_weights::sane ... ok
test weights::paritydb_weights::constants::test_db_weights::sane ... ok
test weights::block_weights::test_weights::sane ... ok
test traits::misc::test::test_opaque_wrapper ... ok
test traits::hooks::tests::on_initialize_and_on_runtime_upgrade_weight_merge_works ... ok
test tests::map_basic_insert_remove_should_work ... ok
test tests::storage_value_mutate_exists_should_work ... ok
test tests::map_issue_3318 ... ok
test traits::misc::test::test_opaque_wrapper_decode_limit ... ok
test tests::storage_value_try_mutate_exists_should_work ... ok
test tests::storage_alias_works ... ok
test tests::map_iteration_should_work ... ok
test tests::double_map_basic_insert_remove_remove_prefix_with_commit_should_work ... ok
test storage::transactional::tests::transaction_limit_should_work ... ok
test tests::map_swap_works ... ok

test result: ok. 143 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/frame_support_procedural-8e2ea6ae824e75cf)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_support_procedural_tools-1360254de014676e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_support_procedural_tools_derive-b3238cf5ddce4576)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_support_test-d4a6460d874bb165)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/benchmark_ui.rs (target/debug/deps/benchmark_ui-401a1f88f62e9ec7)

running 1 test
test benchmark_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/construct_runtime.rs (target/debug/deps/construct_runtime-52adef08242b829c)

running 16 tests
test call_subtype_conversion ... ok
test call_name ... ok
test call_metadata ... ok
test pallet_in_runtime_is_correct ... ok
test origin_codec ... ok
test call_codec ... ok
test call_weight_should_attach_to_call_enum ... ok
test get_module_names ... ok
test get_call_names ... ok
test call_compact_attr ... ok
test event_codec ... ok
test call_encode_is_correct_and_decode_works ... ok
test integrity_test_works ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test test_metadata ... ok
test check_modules_error_type ... ok

test result: ok. 16 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/construct_runtime_ui.rs (target/debug/deps/construct_runtime_ui-aec9a4a523cefe49)

running 1 test
test ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/decl_module_ui.rs (target/debug/deps/decl_module_ui-88136093fee687c8)

running 1 test
test decl_module_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/decl_storage.rs (target/debug/deps/decl_storage-54a56070f2a3d430)

running 11 tests
test tests::check_genesis_config ... ok
test test2::storage_info ... ok
test tests::storage_info ... ok
test tests::store_metadata ... ok
test test_append_and_len::default_for_option ... ok
test test_append_and_len::append_overwrites_default ... ok
test test_append_and_len::len_works ... ok
test test_append_and_len::append_overwrites_invalid_data ... ok
test test_append_and_len::append_works ... ok
test tests::check_builder_config ... ok
test test_append_and_len::len_works_ignores_default_assignment ... ok

test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/decl_storage_ui.rs (target/debug/deps/decl_storage_ui-75aa794df4bf713f)

running 1 test
test decl_storage_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/derive_no_bound.rs (target/debug/deps/derive_no_bound-6cb567533ff03507)

running 4 tests
test runtime_debug_no_bound_display_correctly ... ok
test test_enum ... ok
test test_struct_unnamed ... ok
test test_struct_named ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/derive_no_bound_ui.rs (target/debug/deps/derive_no_bound_ui-f059e326869febb3)

running 1 test
test derive_no_bound_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/final_keys.rs (target/debug/deps/final_keys-fee5cbd4e76b8e17)

running 3 tests
test final_keys_default_instance ... ok
test final_keys_no_instance ... ok
test final_keys_instance_2 ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/genesisconfig.rs (target/debug/deps/genesisconfig-cd63d406f2bc0d3f)

running 1 test
test init_genesis_config ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/instance.rs (target/debug/deps/instance-07b78c3b87f76332)

running 4 tests
test test_instance_storage_metadata ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test storage_instance_independence ... ok
test storage_with_instance_basic_operation ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/issue2219.rs (target/debug/deps/issue2219-7e76f192c6b41914)

running 2 tests
test create_genesis_config ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/origin.rs (target/debug/deps/origin-8918db7a6837e8e7)

running 2 tests
test origin_default_filter ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/pallet.rs (target/debug/deps/pallet-a6d72974d4c2e032)

running 29 tests
test assert_type_all_pallets_without_system_reversed_is_correct ... ok
test assert_type_all_pallets_with_system_reversed_is_correct ... ok
test assert_type_all_pallets_reversed_with_system_first_is_correct ... ok
test call_expand_index ... ok
test assert_type_all_pallets_with_system_is_correct ... ok
test instance_expand ... ok
test assert_type_all_pallets_without_system_is_correct ... ok
test pallet_new_call_variant ... ok
test test_pallet_info_access ... ok
test call_expand ... ok
test test_pallet_runtime_docs ... ok
test metadata_versions ... ok
test validate_unsigned_expand ... ok
test error_expand ... ok
test metadata_ir_pallet_runtime_docs ... ok
test test_storage_info ... ok
test inherent_expand ... ok
test metadata ... ok
test metadata_at_version ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test pallet_on_genesis ... ok
test test_dispatch_context ... ok
test migrate_from_pallet_version_to_storage_version ... ok
test test_storage_alias ... ok
test pallet_expand_deposit_event ... ok
test pallet_hooks_expand ... ok
test all_pallets_type_reversed_order_is_correct ... ok
test transactional_works ... ok
test storage_expand ... ok

test result: ok. 29 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/pallet_compatibility.rs (target/debug/deps/pallet_compatibility-b4dd1dd43ce69aba)

running 3 tests
test test::types ... ok
test test::metadata ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/pallet_compatibility_instance.rs (target/debug/deps/pallet_compatibility_instance-f36dcd21fddcc591)

running 3 tests
test test::types ... ok
test test::metadata ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/pallet_instance.rs (target/debug/deps/pallet_instance-70677d4bc62c1964)

running 12 tests
test instance_expand ... ok
test test_pallet_info_access ... ok
test pallet_metadata_expands ... ok
test call_expand ... ok
test error_expand ... ok
test metadata ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test pallet_on_genesis ... ok
test test_storage_alias ... ok
test pallet_hooks_expand ... ok
test pallet_expand_deposit_event ... ok
test storage_expand ... ok

test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/pallet_ui.rs (target/debug/deps/pallet_ui-b6788cad184d5c70)

running 1 test
test pallet_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/pallet_with_name_trait_is_valid.rs (target/debug/deps/pallet_with_name_trait_is_valid-e9f72e7073105f3e)

running 1 test
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/storage_alias_ui.rs (target/debug/deps/storage_alias_ui-62b749b43f8d5152)

running 1 test
test storage_alias_ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/storage_layers.rs (target/debug/deps/storage_layers-ef996ae55483043c)

running 7 tests
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test storage_layer_basic_commit ... ok
test storage_layer_basic_rollback ... ok
test storage_layer_in_pallet_call ... ok
test storage_layer_in_decl_pallet_call ... ok
test storage_layer_commit_then_rollback ... ok
test storage_layer_rollback_then_commit ... ok

test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/storage_transaction.rs (target/debug/deps/storage_transaction-6c96b3297f500ba5)

running 6 tests
test storage_transaction_basic_rollback ... ok
test storage_transaction_basic_commit ... ok
test transactional_annotation ... ok
test storage_transaction_rollback_then_commit ... ok
test transactional_annotation_in_decl_module ... ok
test storage_transaction_commit_then_rollback ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/system.rs (target/debug/deps/system-5a291e0a7648e60e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_support_test_compile_pass-179393deba133217)

running 1 test
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/frame_support_test_pallet-2e9cb3b10c915c99)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_system-51acf4d5babbe75f)

running 43 tests
test extensions::check_weight::tests::no_max_total_should_still_be_limited_by_max_block ... ok
test limits::tests::default_weights_are_valid ... ok
test tests::ensure_signed_stuff_works ... ok
test offchain::tests::should_send_unsigned_with_signed_payload_with_any_account_and_filter ... ok
test tests::origin_works ... ok
test extensions::check_mortality::tests::signed_ext_check_era_should_work ... ok
test extensions::check_weight::tests::full_block_with_normal_and_operational ... ok
test extensions::check_nonce::tests::signed_ext_check_nonce_works ... ok
test extensions::check_weight::tests::signed_ext_check_weight_refund_works ... ok
test offchain::tests::should_send_unsigned_with_signed_payload_with_any_account ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test offchain::tests::should_send_unsigned_with_signed_payload_with_all_accounts ... ok
test extensions::check_weight::tests::operational_extrinsic_limited_by_operational_space_limit ... ok
test extensions::check_weight::tests::signed_ext_check_weight_block_size_works ... ok
test offchain::tests::should_send_unsigned_with_signed_payload_with_all_account_and_filter ... ok
test extensions::check_weight::tests::signed_ext_check_weight_works_operational_tx ... ok
test extensions::check_weight::tests::signed_ext_check_weight_actual_weight_higher_than_max_is_capped ... ok
test extensions::check_weight::tests::signed_ext_check_weight_works_normal_tx ... ok
test extensions::check_weight::tests::normal_and_mandatory_tracked_separately ... ok
test extensions::check_weight::tests::normal_extrinsic_limited_by_maximum_extrinsic_weight ... ok
test tests::deposit_event_topics ... ok
test extensions::check_weight::tests::dispatch_order_does_not_effect_weight_logic ... ok
test extensions::check_weight::tests::zero_weight_extrinsic_still_has_base_weight ... ok
test tests::events_not_emitted_during_genesis ... ok
test extensions::check_mortality::tests::signed_ext_check_era_should_change_longevity ... ok
test extensions::check_weight::tests::register_extra_weight_unchecked_doesnt_care_about_limits ... ok
test extensions::check_non_zero_sender::tests::zero_account_ban_works ... ok
test extensions::check_weight::tests::operational_works_on_full_block ... ok
test tests::provider_ref_handover_to_self_sufficient_ref_works ... ok
test tests::event_util_functions_should_work ... ok
test tests::deposit_event_uses_actual_weight_and_pays_fee ... ok
test tests::provider_required_to_support_consumer ... ok
test tests::extrinsics_root_is_calculated_correctly ... ok
test tests::deposit_event_should_work ... ok
test extensions::check_weight::tests::mandatory_extrinsic_doesnt_care_about_limits ... ok
test tests::stored_map_works ... ok
test tests::self_sufficient_ref_handover_to_provider_ref_works ... ok
test tests::runtime_updated_digest_emitted_when_heap_pages_changed ... ok
test tests::sufficient_cannot_support_consumer ... ok
test tests::runtime_upgraded_with_set_storage ... ok
test tests::set_code_checks_works ... ok
test tests::prunes_block_hash_mappings ... ok
test tests::set_code_with_real_wasm_blob ... ok

test result: ok. 43 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

     Running unittests src/lib.rs (target/debug/deps/frame_system_benchmarking-6e161f06ba21e41f)

running 8 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test bench_set_heap_pages ... ok
test bench_remark ... ok
test bench_set_code_without_checks ... ok
test bench_remark_with_event ... ok
test bench_kill_prefix ... ok
test bench_kill_storage ... ok
test bench_set_storage ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

     Running unittests src/lib.rs (target/debug/deps/frame_system_rpc_runtime_api-f4093b7b078d2b63)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/frame_try_runtime-ed88934d85dd30da)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/generate_bags-e8b6a712534a0f1d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/kitchensink_runtime-d5075226aa348e47)

running 17 tests
test impls::multiplier_tests::congested_chain_simulation ... ignored
test __pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test tests::call_size ... ok
test tests::validate_transaction_submitter_bounds ... ok
test tests::perbill_as_onchain_accuracy ... ok
test tests::check_whitelist ... ok
test impls::multiplier_tests::multiplier_can_grow_from_zero ... ok
test impls::multiplier_tests::multiplier_cannot_go_below_limit ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test impls::multiplier_tests::weight_mul_decrease_on_small_block ... ok
test impls::multiplier_tests::stateless_weight_mul ... ok
test impls::multiplier_tests::truth_value_update_poc_works ... ok
test impls::multiplier_tests::weight_to_fee_should_not_overflow_on_large_weights ... ok
test impls::multiplier_tests::weight_mul_grow_on_big_block ... ok
test impls::multiplier_tests::min_change_per_day ... ok
test __pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test impls::multiplier_tests::time_to_reach_zero ... ok

test result: ok. 16 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 39.89s

     Running unittests src/lib.rs (target/debug/deps/mmr_gadget-b62244a2e24a0f5c)

running 9 tests
test aux_schema::tests::should_load_persistent_sanity_checks ... ok
[2mMar 24 12:38:42.587[0m [31mERROR[0m mmr: Error calculating the first mmr block: Error::InvalidNumericOp    
test tests::does_not_panic_on_invalid_num_mmr_blocks ... ok
test offchain_mmr::tests::canonicalize_catchup_works_correctly_with_pallet_reset ... ok
test offchain_mmr::tests::canonicalize_catchup_works_correctly ... ok
test offchain_mmr::tests::canonicalize_and_prune_handles_pallet_reset ... ok
test aux_schema::tests::should_persist_progress_across_runs ... ok
test aux_schema::tests::should_resume_from_persisted_state ... ok
test offchain_mmr::tests::canonicalize_and_prune_works_correctly ... ok
test tests::mmr_first_block_is_computed_correctly ... ok

test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.15s

     Running unittests src/lib.rs (target/debug/deps/mmr_rpc-768a478227bf3128)

running 4 tests
test tests::should_deserialize_leaf_proof ... ok
test tests::should_deserialize_leaves_proof ... ok
test tests::should_serialize_leaves_proof ... ok
test tests::should_serialize_leaf_proof ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/node_bench-88e866eb96ea1634)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/node_cli-d096a725fbf7cdb6)

running 6 tests
test chain_spec::tests::test_connectivity ... ignored
test service::tests::test_consensus ... ignored
test service::tests::test_sync ... ignored
test chain_spec::tests::test_staging_test_net_chain_spec ... ok
test chain_spec::tests::test_create_development_chain_spec ... ok
test chain_spec::tests::test_create_local_testnet_chain_spec ... ok

test result: ok. 3 passed; 0 failed; 3 ignored; 0 measured; 0 filtered out; finished in 0.93s

     Running unittests bin/main.rs (target/debug/deps/substrate-6834b90b7a4d0547)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/benchmark_block_works.rs (target/debug/deps/benchmark_block_works-094bb22ebf468874)

running 1 test
2023-03-24 12:39:14 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:39:14 [0] 💸 generated 1 npos targets    
2023-03-24 12:39:18 xxx: apply_extrinsic    
2023-03-24 12:39:18 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, <wasm:stripped>)    
2023-03-24 12:39:18 yyy: apply_extrinsic: dispatch_info:<wasm:stripped>    
2023-03-24 12:39:18 yyy: apply: 1    
2023-03-24 12:39:18 yyy: apply: 3    
2023-03-24 12:39:18 yyy: apply: 4    
2023-03-24 12:39:18 yyy: apply: 5    
2023-03-24 12:39:18 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:18 yyy: apply: 7    
2023-03-24 12:39:18 yyy: apply: 8    
2023-03-24 12:39:18 yyy: apply_extrinsic: r:Ok(<wasm:stripped>)    
2023-03-24 12:39:18 Block 1 with     1 tx used 207.45% of its weight (     5,440,811 of      2,622,764 ns) - OVER WEIGHT!    
test benchmark_block_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 32.77s

     Running tests/benchmark_extrinsic_works.rs (target/debug/deps/benchmark_extrinsic_works-5a7771876c4d544f)

running 1 test
2023-03-24 12:39:18 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:39:18 [0] 💸 generated 1 npos targets    
2023-03-24 12:39:22 🔨 Initializing Genesis block/state (state: 0xb647…60e1, header-hash: 0x866f…8578)    
2023-03-24 12:39:22 👴 Loading GRANDPA authority set from genesis on what appears to be first startup.    
2023-03-24 12:39:25 👶 Creating empty BABE epoch changes on what appears to be first startup.    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Running 10 warmups...    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Executing block 10 times    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Building block, this takes some time...    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Extrinsics per block: 10    
2023-03-24 12:39:26 Running 10 warmups...    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Executing block 10 times    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 3    
2023-03-24 12:39:26 yyy: apply: 4    
2023-03-24 12:39:26 yyy: apply: 5    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 xxx: apply_extrinsic    
2023-03-24 12:39:26 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:26 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:26 yyy: apply: 1    
2023-03-24 12:39:26 yyy: apply: 2    
2023-03-24 12:39:26 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:26 yyy: apply: 7    
2023-03-24 12:39:26 yyy: apply: 8    
2023-03-24 12:39:26 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:26 Executing a system::remark extrinsic takes[ns]:
Total: 8249084
Min: 822678, Max: 828134
Average: 824908, Median: 824076, Stddev: 1778.02
Percentiles 99th, 95th, 75th: 828134, 828134, 826334    
2023-03-24 12:39:27 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:39:27 [0] 💸 generated 1 npos targets    
2023-03-24 12:39:31 🔨 Initializing Genesis block/state (state: 0xb647…60e1, header-hash: 0x866f…8578)    
2023-03-24 12:39:31 👴 Loading GRANDPA authority set from genesis on what appears to be first startup.    
2023-03-24 12:39:34 👶 Creating empty BABE epoch changes on what appears to be first startup.    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 Running 10 warmups...    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 Executing block 10 times    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 Building block, this takes some time...    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 Extrinsics per block: 10    
2023-03-24 12:39:34 Running 10 warmups...    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 Executing block 10 times    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 3    
2023-03-24 12:39:34 yyy: apply: 4    
2023-03-24 12:39:34 yyy: apply: 5    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:34 xxx: apply_extrinsic    
2023-03-24 12:39:34 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:34 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:34 yyy: apply: 1    
2023-03-24 12:39:34 yyy: apply: 2    
2023-03-24 12:39:34 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:34 yyy: apply: 7    
2023-03-24 12:39:34 yyy: apply: 8    
2023-03-24 12:39:34 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 3    
2023-03-24 12:39:35 yyy: apply: 4    
2023-03-24 12:39:35 yyy: apply: 5    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 xxx: apply_extrinsic    
2023-03-24 12:39:35 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::Balances(Call::transfer_keep_alive { dest: MultiAddress::Id(d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...)), value: 100000000000000 }))    
2023-03-24 12:39:35 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 153647000, proof_size: 3593 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:35 yyy: apply: 1    
2023-03-24 12:39:35 yyy: apply: 2    
2023-03-24 12:39:35 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:35 yyy: apply: 7    
2023-03-24 12:39:35 yyy: apply: 8    
2023-03-24 12:39:35 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:35 Executing a balances::transfer_keep_alive extrinsic takes[ns]:
Total: 11130175
Min: 1077820, Max: 1199207
Average: 1113017, Median: 1099111, Stddev: 41744.28
Percentiles 99th, 95th, 75th: 1199207, 1199207, 1105439    
2023-03-24 12:39:35 Essential task `basic-block-import-worker` failed. Shutting down service.    
test benchmark_extrinsic_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 17.02s

     Running tests/benchmark_machine_works.rs (target/debug/deps/benchmark_machine_works-f8d7e4322aebb977)

running 2 tests
2023-03-24 12:39:35 Running machine benchmarks...    
2023-03-24 12:39:39 
+----------+----------------+-------------+-------------+-------------------+
| Category | Function       | Score       | Minimum     | Result            |
+===========================================================================+
| CPU      | BLAKE2-256     | 1.33 GiBs   | 1.00 GiBs   | ✅ Pass (132.1 %) |
|----------+----------------+-------------+-------------+-------------------|
| CPU      | SR25519-Verify | 488.27 KiBs | 666.00 KiBs | ❌ Fail ( 73.3 %) |
|----------+----------------+-------------+-------------+-------------------|
| Memory   | Copy           | 13.98 GiBs  | 14.32 GiBs  | ✅ Pass ( 97.6 %) |
|----------+----------------+-------------+-------------+-------------------|
| Disk     | Seq Write      | 1.75 GiBs   | 450.00 MiBs | ✅ Pass (398.0 %) |
|----------+----------------+-------------+-------------+-------------------|
| Disk     | Rnd Write      | 691.08 MiBs | 200.00 MiBs | ✅ Pass (345.5 %) |
+----------+----------------+-------------+-------------+-------------------+
From 5 benchmarks in total, 4 passed and 1 failed (10% fault tolerance).    
2023-03-24 12:39:39 The hardware fails to meet the requirements    
2023-03-24 12:39:39 Ignoring error since --allow-fail is set: UnmetRequirement    
2023-03-24 12:39:39 Ignoring error since --allow-fail is set: BadBuildProfile("Detected a `debug` profile")    
test benchmark_machine_works ... ok
test benchmark_machine_fails_with_slow_hardware ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 10.66s

     Running tests/benchmark_overhead_works.rs (target/debug/deps/benchmark_overhead_works-632cc2e40d8f9615)

running 1 test
2023-03-24 12:39:46 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:39:46 [0] 💸 generated 1 npos targets    
2023-03-24 12:39:49 🔨 Initializing Genesis block/state (state: 0xb647…60e1, header-hash: 0x866f…8578)    
2023-03-24 12:39:49 👴 Loading GRANDPA authority set from genesis on what appears to be first startup.    
2023-03-24 12:39:53 👶 Creating empty BABE epoch changes on what appears to be first startup.    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Running 10 warmups...    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Executing block 10 times    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Per-block execution overhead [ns]:
Total: 21689800
Min: 2154198, Max: 2186308
Average: 2168980, Median: 2166658, Stddev: 9494.79
Percentiles 99th, 95th, 75th: 2186308, 2186308, 2174248    
2023-03-24 12:39:53 Writing weights to "/tmp/.tmp5ivreD/block_weights.rs"    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Running 10 warmups...    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Executing block 10 times    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Building block, this takes some time...    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Extrinsics per block: 10    
2023-03-24 12:39:53 Running 10 warmups...    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Executing block 10 times    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(None, RuntimeCall::Timestamp(Call::set { now: 1500 }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 161453000, proof_size: 2986 }, class: DispatchClass::Mandatory, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 3    
2023-03-24 12:39:53 yyy: apply: 4    
2023-03-24 12:39:53 yyy: apply: 5    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:None    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(0), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(1), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(2), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(3), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(4), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(5), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(6), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(7), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(8), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 xxx: apply_extrinsic    
2023-03-24 12:39:53 yyy: apply_extrinsic: uxt:UncheckedExtrinsic(Some((MultiAddress::Id(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...)), (CheckNonZeroSender, CheckSpecVersion, CheckTxVersion, CheckGenesis, CheckMortality(Era::Mortal(2048, 0)), CheckNonce(9), CheckWeight, ChargeAssetTxPayment<0, [0]>))), RuntimeCall::System(Call::remark { remark: [] }))    
2023-03-24 12:39:53 yyy: apply_extrinsic: dispatch_info:DispatchInfo { weight: Weight { ref_time: 2576000, proof_size: 0 }, class: DispatchClass::Normal, pays_fee: Pays::Yes }    
2023-03-24 12:39:53 yyy: apply: 1    
2023-03-24 12:39:53 yyy: apply: 2    
2023-03-24 12:39:53 yyy: apply: 6 maybe_who:Some(8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48 (5FHneW46...))    
2023-03-24 12:39:53 yyy: apply: 7    
2023-03-24 12:39:53 yyy: apply: 8    
2023-03-24 12:39:53 yyy: apply_extrinsic: r:Ok(PostDispatchInfo { actual_weight: None, pays_fee: Pays::Yes })    
2023-03-24 12:39:53 Per-extrinsic execution overhead [ns]:
Total: 8320136
Min: 810055, Max: 906611
Average: 832013, Median: 815624, Stddev: 29530.59
Percentiles 99th, 95th, 75th: 906611, 906611, 853826    
2023-03-24 12:39:54 Writing weights to "/tmp/.tmp5ivreD/extrinsic_weights.rs"    
test benchmark_overhead_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 8.26s

     Running tests/benchmark_pallet_works.rs (target/debug/deps/benchmark_pallet_works-2d6c4254658e3e67)

running 1 test
test benchmark_pallet_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 46.81s

     Running tests/benchmark_storage_works.rs (target/debug/deps/benchmark_storage_works-9a8d0470acee662e)

running 1 test
2023-03-24 12:40:41 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:40:41 [0] 💸 generated 1 npos targets    
2023-03-24 12:40:43 🔨 Initializing Genesis block/state (state: 0xb647…60e1, header-hash: 0x866f…8578)    
2023-03-24 12:40:43 👴 Loading GRANDPA authority set from genesis on what appears to be first startup.    
2023-03-24 12:40:44 👶 Creating empty BABE epoch changes on what appears to be first startup.    
2023-03-24 12:40:44 Preparing keys from block 0x866f…8578    
2023-03-24 12:40:44 Reading 162 keys    
2023-03-24 12:40:44 Reading 0 child keys    
2023-03-24 12:40:44 Time summary [ns]:
Total: 4528255
Min: 11110, Max: 2176118
Average: 27952, Median: 14130, Stddev: 169324.39
Percentiles 99th, 95th, 75th: 28880, 19110, 16470
Value size summary:
Total: 2463592
Min: 1, Max: 2459335
Average: 15207, Median: 4, Stddev: 192624.25
Percentiles 99th, 95th, 75th: 385, 80, 32    
2023-03-24 12:40:44 Preparing keys from block 0x866f…8578    
2023-03-24 12:40:44 Writing 162 keys    
2023-03-24 12:40:44 Writing 0 child keys    
2023-03-24 12:40:44 Time summary [ns]:
Total: 26047515
Min: 66539, Max: 9551617
Average: 160787, Median: 99319, Stddev: 740524.34
Percentiles 99th, 95th, 75th: 170859, 148829, 120260
Value size summary:
Total: 2463592
Min: 1, Max: 2459335
Average: 15207, Median: 4, Stddev: 192624.25
Percentiles 99th, 95th, 75th: 385, 80, 32    
2023-03-24 12:40:44 Writing weights to "/tmp/.tmpbJOOn2/rocksdb_weights.rs"    
2023-03-24 12:40:45 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:40:45 [0] 💸 generated 1 npos targets    
2023-03-24 12:40:46 🔨 Initializing Genesis block/state (state: 0xb647…60e1, header-hash: 0x866f…8578)    
2023-03-24 12:40:46 👴 Loading GRANDPA authority set from genesis on what appears to be first startup.    
2023-03-24 12:40:48 👶 Creating empty BABE epoch changes on what appears to be first startup.    
2023-03-24 12:40:48 Preparing keys from block 0x866f…8578    
2023-03-24 12:40:48 Reading 162 keys    
2023-03-24 12:40:48 Reading 0 child keys    
2023-03-24 12:40:48 Time summary [ns]:
Total: 7191120
Min: 22300, Max: 2265287
Average: 44389, Median: 28580, Stddev: 175170.96
Percentiles 99th, 95th, 75th: 52430, 43080, 36330
Value size summary:
Total: 2463592
Min: 1, Max: 2459335
Average: 15207, Median: 4, Stddev: 192624.25
Percentiles 99th, 95th, 75th: 385, 80, 32    
2023-03-24 12:40:48 Preparing keys from block 0x866f…8578    
2023-03-24 12:40:48 Writing 162 keys    
2023-03-24 12:40:48 Writing 0 child keys    
2023-03-24 12:40:48 Time summary [ns]:
Total: 27364557
Min: 87919, Max: 4082007
Average: 168917, Median: 138540, Stddev: 311965.95
Percentiles 99th, 95th, 75th: 423118, 222649, 165030
Value size summary:
Total: 2463592
Min: 1, Max: 2459335
Average: 15207, Median: 4, Stddev: 192624.25
Percentiles 99th, 95th, 75th: 385, 80, 32    
2023-03-24 12:40:48 Writing weights to "/tmp/.tmpbJOOn2/paritydb_weights.rs"    
test benchmark_storage_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 7.64s

     Running tests/build_spec_works.rs (target/debug/deps/build_spec_works-4bd4d32c7730147c)

running 1 test
test build_spec_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.90s

     Running tests/check_block_works.rs (target/debug/deps/check_block_works-7d9a23c941df9642)

running 1 test
2023-03-24 12:41:18 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:41:18 [0] 💸 generated 1 npos targets    
2023-03-24 12:41:21 Essential task `transaction-pool-task-0` failed. Shutting down service.    
2023-03-24 12:41:21 Essential task `txpool-background` failed. Shutting down service.    
2023-03-24 12:41:21 Essential task `transaction-pool-task-1` failed. Shutting down service.    
Completed in 200 ms.
2023-03-24 12:41:21 🎉 Imported 1 blocks. Best: #5    
2023-03-24 12:41:21 Essential task `basic-block-import-worker` failed. Shutting down service.    
test check_block_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 32.53s

     Running tests/common.rs (target/debug/deps/common-152fa693791ae117)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/export_import_flow.rs (target/debug/deps/export_import_flow-f5a7d5873aa8fa93)

running 1 test
test export_import_revert has been running for over 60 seconds
test export_import_revert ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 77.32s

     Running tests/inspect_works.rs (target/debug/deps/inspect_works-20bc8f0193a62c44)

running 1 test
Header:
Header { parent_hash: 0x866f74ac16498a245639996b145b7ec7771d092b9b8f8cbbe350a6959fed8578, number: 1, state_root: 0x8e0d4c5a7756284b6e569c75a939bdc4eda7d636ac0a11b82b6df300edb1b4e2, extrinsics_root: 0x67937f43b15d6fad83285c718eba35ead064b11bba24aed9e499afe044b079d7, digest: Digest { logs: [DigestItem::PreRuntime([66, 65, 66, 69], [1, 0, 0, 0, 0, 234, 46, 95, 33, 0, 0, 0, 0, 114, 225, 236, 2, 227, 3, 1, 51, 205, 242, 58, 163, 105, 56, 130, 154, 232, 3, 96, 172, 221, 24, 96, 166, 181, 239, 195, 87, 44, 142, 131, 10, 198, 49, 215, 45, 107, 130, 14, 238, 143, 15, 233, 45, 107, 39, 116, 227, 204, 196, 158, 214, 198, 61, 224, 115, 115, 216, 96, 68, 85, 218, 85, 15, 88, 175, 255, 35, 188, 80, 66, 239, 226, 140, 167, 166, 190, 107, 154, 129, 90, 173, 61, 94, 198, 167, 119, 179, 241, 234, 66, 222, 60, 146, 179, 8]), DigestItem::Consensus([66, 65, 66, 69], [1, 4, 212, 53, 147, 199, 21, 253, 211, 28, 97, 20, 26, 189, 4, 169, 159, 214, 130, 44, 133, 88, 133, 76, 205, 227, 154, 86, 132, 231, 165, 109, 162, 125, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), DigestItem::Seal([66, 65, 66, 69], [212, 82, 51, 247, 142, 161, 149, 226, 135, 241, 250, 168, 14, 252, 35, 139, 204, 95, 43, 70, 153, 118, 17, 188, 157, 175, 126, 163, 45, 252, 133, 123, 245, 55, 200, 224, 225, 6, 188, 143, 58, 180, 144, 1, 209, 222, 172, 98, 8, 170, 94, 125, 32, 229, 195, 152, 166, 30, 121, 177, 44, 173, 136, 137])] } }
Block bytes: 866f74ac16498a245639996b145b7ec7771d092b9b8f8cbbe350a6959fed8578048e0d4c5a7756284b6e569c75a939bdc4eda7d636ac0a11b82b6df300edb1b4e267937f43b15d6fad83285c718eba35ead064b11bba24aed9e499afe044b079d70c0642414245b5010100000000ea2e5f210000000072e1ec02e3030133cdf23aa36938829ae80360acdd1860a6b5efc3572c8e830ac631d72d6b820eee8f0fe92d6b2774e3ccc49ed6c63de07373d8604455da550f58afff23bc5042efe28ca7a6be6b9a815aad3d5ec6a777b3f1ea42de3c92b308044241424529010104d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d0100000000000000000000000000000000000000000000000000000000000000000000000000000005424142450101d45233f78ea195e287f1faa80efc238bcc5f2b46997611bc9daf7ea32dfc857bf537c8e0e106bc8f3ab49001d1deac6208aa5e7d20e5c398a61e79b12cad888904280403000b30c66d138701
Extrinsics (1)
- 0:
 0403000b30c66d138701
 Bytes: 280403000b30c66d138701

2023-03-24 12:43:10 [0] 💸 generated 1 npos voters, 1 from validators and 0 nominators    
2023-03-24 12:43:10 [0] 💸 generated 1 npos targets    
test inspect_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 30.79s

     Running tests/purge_chain_works.rs (target/debug/deps/purge_chain_works-f8c1cd00853fcc29)

running 1 test
"/tmp/.tmpEO3UeC/chains/dev/db/full" removed.
test purge_chain_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 28.68s

     Running tests/remember_state_pruning_works.rs (target/debug/deps/remember_state_pruning_works-be132610035529ae)

running 1 test
test remember_state_pruning_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 45.04s

     Running tests/running_the_node_and_interrupt.rs (target/debug/deps/running_the_node_and_interrupt-f044dbbf8b8b9e11)

running 2 tests
test running_two_nodes_with_the_same_ws_port_should_work ... ok
test running_the_node_works_and_can_be_interrupted ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 56.32s

     Running tests/telemetry.rs (target/debug/deps/telemetry-75496e0795035b18)

running 1 test
test telemetry_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 12.04s

     Running tests/temp_base_path_works.rs (target/debug/deps/temp_base_path_works-379ce73de22dc87f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/version.rs (target/debug/deps/version-ca62114c8a391187)

running 2 tests
test test_regex_matches_properly ... ok
test version_is_full ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running tests/websocket_server.rs (target/debug/deps/websocket_server-c1f828fb844d4100)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/node_executor-fdad9716c052b2ec)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/basic.rs (target/debug/deps/basic-7d4e48aa26109dea)

running 13 tests
test bad_extrinsic_with_native_equivalent_code_gives_error ... ok
test successful_execution_gives_ok ... ok
test successful_execution_with_native_equivalent_code_gives_ok ... ok
test panic_execution_gives_error ... ok
test panic_execution_with_foreign_code_gives_error ... ok
test successful_execution_with_foreign_code_gives_ok ... ok
test wasm_big_block_import_fails ... ok
test native_big_block_import_fails_on_fallback ... ok
test native_big_block_import_succeeds ... ok
test should_import_block_with_test_client ... ok
test deploying_wasm_contract_should_work ... ok
test full_wasm_block_import_works ... ok
test full_native_block_import_works ... ok

test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 17.47s

     Running tests/common.rs (target/debug/deps/common-45897be5219bebb9)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/fees.rs (target/debug/deps/fees-751cfcdec9d782f1)

running 2 tests
test transaction_fee_is_correct ... ok
test fee_multiplier_increases_and_decreases_on_big_weight ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 16.24s

     Running tests/submit_transaction.rs (target/debug/deps/submit_transaction-2eefc8420ef8e61e)

running 5 tests
test should_submit_unsigned_transaction ... ok
test should_submit_signed_twice_from_the_same_account ... ok
test should_submit_signed_transaction ... ok
test should_submit_signed_twice_from_all_accounts ... ok
test submitted_transaction_should_be_valid ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.31s

     Running unittests src/lib.rs (target/debug/deps/node_inspect-0a5104ddd828e548)

running 2 tests
test tests::should_parse_block_strings ... ok
test tests::should_parse_extrinsic_address ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/node_primitives-1ec8aca7748af964)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/node_rpc-70ca6440d196f7b2)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/node_runtime_generate_bags-e4f45fe5e9454d2e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/node_template-929e29e5345ee141)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/node_template_runtime-db09db801b9999af)

running 2 tests
test tests::check_whitelist ... ok
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/node_testing-c91823b5b73127ed)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_alliance-9441205d5490f23d)

running 39 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_abdicate_fellow_status ... ok
test benchmarking::bench_give_retirement_notice ... ok
test benchmarking::bench_remove_announcement ... ok
test benchmarking::bench_kick_member ... ok
test benchmarking::bench_nominate_ally ... ok
test benchmarking::bench_set_rule ... ok
test benchmarking::bench_announce ... ok
test benchmarking::bench_elevate_ally ... ok
test benchmarking::bench_retire ... ok
test benchmarking::bench_join_alliance ... ok
test tests::close_works ... ok
test migration::test::migration_v1_to_v2_works ... ok
test tests::elevate_ally_works ... ok
test tests::announce_works ... ok
test tests::add_unscrupulous_items_works ... ok
test tests::kick_member_works ... ok
test tests::propose_works ... ok
test tests::set_rule_works ... ok
test tests::vote_works ... ok
test tests::give_retirement_notice_work ... ok
test tests::remove_announcement_works ... ok
test tests::init_members_works ... ok
test tests::nominate_ally_works ... ok
test tests::join_alliance_works ... ok
test tests::disband_works ... ok
test tests::remove_unscrupulous_items_works ... ok
test tests::abdicate_works ... ok
test tests::retire_works ... ok
test benchmarking::bench_add_unscrupulous_items ... ok
test benchmarking::bench_remove_unscrupulous_items ... ok
test benchmarking::bench_vote ... ok
test benchmarking::bench_init_members ... ok
test benchmarking::bench_close_disapproved ... ok
test benchmarking::bench_close_early_disapproved ... ok
test benchmarking::bench_propose_proposed ... ok
test benchmarking::bench_disband ... ok
test benchmarking::bench_close_early_approved ... ok
test benchmarking::bench_close_approved ... ok

test result: ok. 39 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.40s

     Running unittests src/lib.rs (target/debug/deps/pallet_asset_tx_payment-7c16db0c70a2e175)

running 10 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::payment_only_with_existing_sufficient_asset ... ok
test tests::post_dispatch_fee_is_zero_if_pre_dispatch_fee_is_zero ... ok
test tests::transaction_payment_in_native_possible ... ok
test tests::post_dispatch_fee_is_zero_if_unsigned_pre_dispatch_fee_is_zero ... ok
test tests::transaction_payment_in_asset_possible ... ok
test tests::transaction_payment_without_fee ... ok
test tests::payment_from_account_with_only_assets ... ok
test tests::converted_fee_is_never_zero_if_input_fee_is_not ... ok
test tests::asset_transaction_payment_with_tip_and_refund ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_assets-dc206e1573bc3f6b)

running 81 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_create ... ok
test benchmarking::bench_force_create ... ok
test benchmarking::bench_set_min_balance ... ok
test benchmarking::bench_set_team ... ok
test benchmarking::bench_force_asset_status ... ok
test benchmarking::bench_transfer_ownership ... ok
test benchmarking::bench_burn ... ok
test benchmarking::bench_finish_destroy ... ok
test tests::approval_lifecycle_works ... ok
test tests::asset_create_and_destroy_is_reverted_if_callback_fails ... ok
test tests::approval_deposits_work ... ok
test benchmarking::bench_clear_metadata ... ok
test benchmarking::bench_freeze_asset ... ok
test benchmarking::bench_force_clear_metadata ... ok
test benchmarking::bench_force_transfer ... ok
test benchmarking::bench_thaw_asset ... ok
test benchmarking::bench_start_destroy ... ok
test benchmarking::bench_thaw ... ok
test benchmarking::bench_mint ... ok
test tests::approve_transfer_frozen_asset_should_not_work ... ok
test benchmarking::bench_transfer ... ok
test benchmarking::bench_cancel_approval ... ok
test benchmarking::bench_force_cancel_approval ... ok
test benchmarking::bench_approve_transfer ... ok
test benchmarking::bench_transfer_approved ... ok
test benchmarking::bench_freeze ... ok
test benchmarking::bench_transfer_keep_alive ... ok
test tests::assets_from_genesis_should_exist ... ok
test tests::balance_conversion_should_work ... ok
test benchmarking::bench_force_set_metadata ... ok
test tests::basic_minting_should_work ... ok
test benchmarking::bench_set_metadata ... ok
test benchmarking::bench_destroy_accounts ... ok
test tests::burning_asset_balance_with_positive_balance_should_work ... ok
test tests::finish_destroy_asset_destroys_asset ... ok
test benchmarking::bench_destroy_approvals ... ok
test tests::imbalances_should_work ... ok
test tests::querying_name_symbol_and_decimals_should_work ... ok
test tests::querying_roles_should_work ... ok
test tests::normal_asset_create_and_destroy_callbacks_should_work ... ok
test tests::root_asset_create_should_work ... ok
test tests::refunding_asset_deposit_with_burn_disallowed_should_fail ... ok
test tests::destroy_accounts_calls_died_hooks ... ok
test tests::destroy_should_refund_approvals ... ok
test tests::minting_insufficient_assets_with_deposit_without_consumer_should_work ... ok
test tests::refunding_asset_deposit_with_burn_should_work ... ok
test tests::burning_asset_balance_with_zero_balance_does_nothing ... ok
test tests::querying_total_supply_should_work ... ok
test tests::refunding_calls_died_hook ... ok
test tests::cannot_transfer_more_than_exists ... ok
test tests::lifecycle_should_work ... ok
test tests::querying_allowance_should_work ... ok
test tests::refunding_asset_deposit_without_burn_should_work ... ok
test tests::cannot_transfer_more_than_approved ... ok
test tests::minting_insufficient_asset_with_deposit_should_work_when_consumers_exhausted ... ok
test tests::cancel_approval_works ... ok
test tests::force_asset_status_should_work ... ok
test tests::force_cancel_approval_works ... ok
test tests::minting_too_many_insufficient_assets_fails ... ok
test tests::min_balance_should_work ... ok
test tests::force_metadata_should_work ... ok
test tests::non_providing_should_work ... ok
test tests::origin_guards_should_work ... ok
test tests::set_min_balance_should_work ... ok
test tests::set_metadata_should_work ... ok
test tests::freezer_should_work ... ok
test tests::partial_destroy_should_work ... ok
test types::ensure_bool_decodes_to_consumer_or_sufficient ... ok
test tests::transfer_large_asset ... ok
test tests::set_team_should_work ... ok
test tests::transfer_approved_all_funds ... ok
test tests::transferring_less_than_one_unit_is_fine ... ok
test tests::transferring_amount_below_available_balance_should_work ... ok
test tests::transferring_to_frozen_account_should_work ... ok
test tests::transferring_more_units_than_total_supply_should_not_work ... ok
test tests::transferring_frozen_user_should_not_work ... ok
test tests::transferring_frozen_asset_should_not_work ... ok
test tests::transferring_enough_to_kill_source_when_keep_alive_should_fail ... ok
test tests::transfer_owner_should_work ... ok
test tests::transferring_amount_more_than_available_balance_should_not_work ... ok

test result: ok. 81 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

     Running unittests src/lib.rs (target/debug/deps/pallet_atomic_swap-a8cd5250d8b0c1dd)

running 2 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::two_party_successful_swap ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_aura-57ef9018cd0a281e)

running 3 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::initial_values ... ok
test tests::disabled_validators_cannot_author_blocks - should panic ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_authority_discovery-e63466c03fbce4ea)

running 2 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::authorities_returns_current_and_next_authority_set ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_authorship-8584d32d7e237f96)

running 2 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::sets_author_lazily ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_babe-97ab2180cb603446)

running 31 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test tests::report_equivocation_has_valid_weight ... ok
test tests::empty_randomness_is_correct ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::initial_values ... ok
test tests::authority_index ... ok
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.933[0m [31mERROR[0m runtime::storage: Corrupted state at `[28, 182, 243, 110, 2, 122, 187, 32, 145, 207, 181, 17, 10, 181, 8, 127, 154, 171, 10, 91, 99, 179, 89, 81, 45, 238, 229, 87, 201, 244, 207, 99]: Error { cause: Some(Error { cause: None, desc: "Could not decode `NextConfigDescriptor`, variant doesn't exist" }), desc: "Could not decode `Option::Some(T)`" }`    
[2mMar 24 12:46:07.934[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::only_root_can_enact_config_change ... ok
test tests::check_module ... ok
test tests::add_epoch_configurations_migration_works ... ok
test tests::current_slot_is_processed_on_initialization ... ok
test benchmarking::bench_check_equivocation_proof ... ok
test tests::first_block_epoch_zero_start ... ok
test tests::author_vrf_output_for_primary ... ok
test tests::no_author_vrf_output_for_secondary_plain ... ok
test tests::author_vrf_output_for_secondary_vrf ... ok
test tests::can_estimate_current_epoch_progress ... ok
test tests::can_enact_next_config ... ok
test tests::can_predict_next_epoch_change ... ok
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::skipping_over_epochs_works ... ok
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.940[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::report_equivocation_after_skipped_epochs_works ... ok
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.941[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.942[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.942[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.943[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.943[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.943[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.943[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::tracks_block_numbers_when_current_and_previous_epoch_started ... ok
test tests::can_fetch_current_and_next_epoch_data ... ok
test tests::valid_equivocation_reports_dont_pay_fees ... ok
test tests::report_equivocation_validate_unsigned_prevents_duplicates ... ok
test tests::generate_equivocation_report_blob ... ok
[2mMar 24 12:46:07.962[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:07.962[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::report_equivocation_current_session_works ... ok
test tests::report_equivocation_invalid_equivocation_proof ... ok
test tests::disabled_validators_cannot_author_blocks - should panic ... ok
test tests::report_equivocation_invalid_key_owner_proof ... ok
test tests::report_equivocation_old_session_works ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.23s

     Running unittests src/lib.rs (target/debug/deps/pallet_bags_list-5783c11ae2ef9762)

running 59 tests
test list::tests::notional_bag_for_works ... ok
test tests::pallet::duplicate_in_bags_threshold_panics - should panic ... ok
test tests::pallet::decreasing_in_bags_threshold_panics - should panic ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test list::tests::list::insert_at_unchecked_at_is_only_node ... ok
test list::tests::bags::insert_node_happy_paths_works ... ok
[2mMar 24 12:46:08.176[0m [31mERROR[0m runtime: a defensive failure has been triggered; please report the block number at https://github.com/paritytech/substrate/issues: "system logic error: inserting a node who has the id of tail"    
test list::tests::list::contains_works ... ok
test list::tests::bags::insert_node_sets_proper_bag ... ok
test list::tests::list::insert_errors_with_duplicate_id ... ok
test list::tests::list::insert_at_unchecked_at_is_head ... ok
test list::tests::list::iteration_is_semi_sorted ... ok
test list::tests::list::take_works ... ok
test list::tests::list::remove_many_is_noop_with_non_existent_ids ... ok
test list::tests::list::put_in_front_of_panics_if_bag_not_found - should panic ... ok
test list::tests::remove_last_node_in_bags_cleans_bag ... ok
test list::tests::list::insert_at_unchecked_at_is_tail ... ok
test list::tests::node::is_misplaced_works ... ok
test list::tests::bags::remove_node_happy_paths_works ... ok
test list::tests::list::insert_at_unchecked_at_is_non_terminal ... ok
test list::tests::basic_setup_works ... ok
test list::tests::list::insert_works ... ok
test tests::pallet::put_in_front_of_errors_if_heavier_is_less_than_lighter ... ok
test benchmarks::bench_put_in_front_of ... ok
test benchmarks::bench_rebag_terminal ... ok
test benchmarks::bench_rebag_non_terminal ... ok
test tests::pallet::empty_threshold_works ... ok
test list::tests::bags::insert_node_duplicate_tail_panics_with_debug_assert - should panic ... ok
test list::tests::migrate_works ... ok
test list::tests::bags::get_works ... ok
test tests::pallet::put_in_front_of_errors_if_heavier_is_equal_weight_to_lighter ... ok
test list::tests::list::remove_works ... ok
test list::tests::list::update_position_for_works ... ok
test list::tests::bags::remove_node_bad_paths_documented ... ok
test tests::pallet::put_in_front_of_errors_if_nodes_not_found ... ok
test list::tests::bags::insert_node_bad_paths_documented ... ok
test tests::pallet::put_in_front_of_heavier_is_head_lighter_is_not_terminal ... ok
test tests::pallet::put_in_front_of_heavier_is_tail_lighter_is_head ... ok
test list::tests::list::try_state_works ... ok
test tests::pallet::put_in_front_of_errors_if_nodes_not_in_same_bag ... ok
test tests::pallet::put_in_front_of_lighter_is_head_heavier_is_non_terminal ... ok
test tests::pallet::put_in_front_of_two_node_bag_heavier_is_tail ... ok
test tests::pallet::put_in_front_of_two_node_bag_heavier_is_head ... ok
test tests::sorted_list_provider::contains_works ... ok
test tests::pallet::put_in_front_of_heavier_is_tail_lighter_is_non_terminal ... ok
test tests::pallet::rebag_head_works ... ok
test tests::sorted_list_provider::iter_from_works ... ok
test tests::pallet::put_in_front_of_lighter_is_tail_heavier_is_not_terminal ... ok
test tests::pallet::rebag_tail_works ... ok
test tests::pallet::wrong_rebag_errs ... ok
test tests::sorted_list_provider::iter_works ... ok
test tests::pallet::put_in_front_of_lighter_is_tail_heavier_is_head ... ok
test tests::pallet::put_in_front_of_non_terminal_nodes_heavier_behind ... ok
test tests::pallet::put_in_front_of_non_terminal_nodes_heavier_in_front ... ok
test tests::sorted_list_provider::on_insert_errors_with_duplicate_id ... ok
test tests::sorted_list_provider::on_update_works ... ok
test tests::sorted_list_provider::on_insert_works ... ok
test tests::pallet::rebag_works ... ok
test tests::sorted_list_provider::count_works ... ok
test tests::sorted_list_provider::on_remove_works ... ok

test result: ok. 59 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/main.rs (target/debug/deps/bags_list-1eb66d8b1b02b647)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_bags_list_remote_tests-0566980dc5f3a623)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_balances-116dc4196882e852)

running 109 tests
test tests::currency_tests::cannot_set_genesis_value_below_ed - should panic ... ok
test tests::currency_tests::cannot_set_genesis_value_twice - should panic ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::currency_tests::account_create_on_free_too_low ... ok
test tests::currency_tests::account_deleted_when_just_dust ... ok
test tests::currency_tests::emit_events_with_reserve_and_unreserve ... ok
test tests::currency_tests::account_create_on_free_too_low_with_other ... ok
test tests::currency_tests::ensure_reserved_named_should_work ... ok
test tests::currency_tests::balance_works ... ok
test tests::currency_tests::deducting_balance_should_work ... ok
test tests::currency_tests::account_removal_on_free_too_low ... ok
test tests::currency_tests::emit_events_with_no_existential_deposit_suicide ... ok
test tests::currency_tests::emit_events_with_existential_deposit ... ok
test tests::currency_tests::operations_on_dead_account_should_not_change_state ... ok
test tests::currency_tests::account_should_be_reaped ... ok
test tests::currency_tests::lock_replacement_should_work ... ok
test tests::currency_tests::existential_deposit_respected_when_reserving ... ok
test tests::currency_tests::lock_removal_should_work ... ok
test tests::currency_tests::double_locking_should_work ... ok
test tests::currency_tests::combination_locking_should_work ... ok
test tests::currency_tests::basic_locking_should_work ... ok
test tests::currency_tests::repatriate_all_reserved_named_should_work ... ok
test tests::currency_tests::repatriating_reserved_balance_should_work ... ok
test tests::currency_tests::lock_value_extension_should_work ... ok
test tests::currency_tests::refunding_balance_should_work ... ok
test tests::currency_tests::freezing_and_locking_should_work ... ok
test tests::currency_tests::lock_reasons_extension_should_work ... ok
test tests::currency_tests::lock_block_number_extension_should_work ... ok
test tests::currency_tests::burn_must_work ... ok
test tests::currency_tests::lock_should_work_tx_fee ... ok
test tests::currency_tests::partial_locking_should_work ... ok
test tests::currency_tests::lock_should_work_reserve ... ok
test tests::currency_tests::reap_failed_due_to_provider_and_consumer ... ok
test tests::currency_tests::named_reserve_should_work ... ok
test tests::currency_tests::slash_consumed_slash_full_works ... ok
test tests::currency_tests::slash_over_works ... ok
test tests::currency_tests::reward_should_work ... ok
test tests::currency_tests::slash_full_works ... ok
test tests::currency_tests::slash_consumed_slash_partial_works ... ok
test tests::currency_tests::slash_partial_works ... ok
test tests::currency_tests::reserving_balance_should_work ... ok
test tests::currency_tests::reserved_named_to_yourself_should_work ... ok
test tests::currency_tests::slash_on_non_existant_works ... ok
test tests::currency_tests::slash_consumed_slash_over_works ... ok
test tests::currency_tests::slash_does_not_take_from_reserve ... ok
test tests::currency_tests::slash_fails_when_account_needed ... ok
test tests::currency_tests::slash_all_reserved_named_should_work ... ok
test tests::currency_tests::slash_dusting_works ... ok
test tests::currency_tests::reserved_balance_should_prevent_reclaim_count ... ok
test tests::currency_tests::transferring_reserved_balance_should_work ... ok
test tests::currency_tests::slashing_incomplete_reserved_balance_should_work ... ok
test tests::currency_tests::unreserving_balance_should_work ... ok
test tests::currency_tests::slashing_balance_should_work ... ok
test tests::currency_tests::slashing_incomplete_balance_should_work ... ok
test tests::currency_tests::slash_reserved_on_non_existant_works ... ok
test tests::currency_tests::transferring_incomplete_reserved_balance_should_work ... ok
test tests::currency_tests::slash_reserved_slash_everything_works ... ok
test tests::currency_tests::unreserve_all_named_should_work ... ok
test tests::currency_tests::slash_reserved_overslash_does_not_touch_free_balance ... ok
test tests::currency_tests::transferring_reserved_balance_to_nonexistent_should_fail ... ok
test tests::currency_tests::slash_reserved_slash_partial_works ... ok
test tests::currency_tests::slashing_reserved_balance_should_work ... ok
test tests::currency_tests::transferring_too_high_value_should_not_panic ... ok
test tests::dispatchable_tests::transfer_all_works_4 ... ok
test tests::currency_tests::withdrawing_balance_should_work ... ok
test tests::dispatchable_tests::transfer_all_works_3 ... ok
test tests::currency_tests::transferring_reserved_balance_to_yourself_should_work ... ok
test tests::dispatchable_tests::transfer_keep_alive_all_free_succeed ... ok
test tests::dispatchable_tests::balance_transfer_works ... ok
test tests::dispatchable_tests::transfer_all_works_1 ... ok
test tests::dispatchable_tests::transfer_all_works_2 ... ok
test tests::fungible_tests::inspect_trait_reducible_balance_basic_works ... ok
test tests::currency_tests::withdrawing_balance_should_fail_when_not_expendable ... ok
test tests::dispatchable_tests::default_indexing_on_new_accounts_should_not_work2 ... ok
test tests::dispatchable_tests::set_balance_handles_total_issuance ... ok
test tests::fungible_tests::inspect_trait_reducible_balance_frozen_works ... ok
test tests::dispatchable_tests::dust_account_removal_should_work ... ok
test tests::dispatchable_tests::set_balance_handles_killing_account ... ok
test tests::dispatchable_tests::balance_transfer_when_on_hold_should_not_work ... ok
test tests::dispatchable_tests::transfer_keep_alive_works ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_at_most_works_2 ... ok
test tests::fungible_tests::can_hold_entire_balance_when_second_provider ... ok
test tests::dispatchable_tests::force_transfer_works ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_at_most_works_1 ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_at_most_works_3 ... ok
test tests::fungible_tests::extend_freeze_should_work ... ok
test tests::fungible_tests::unholding_frees_hold_slot ... ok
test tests::fungible_tests::unbalanced_trait_set_total_issuance_works ... ok
test tests::dispatchable_tests::upgrade_accounts_should_work ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_works_1 ... ok
test tests::reentrancy_tests::transfer_dust_removal_tst2_should_work ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_works_2 ... ok
test tests::fungible_tests::unbalanced_trait_set_balance_works ... ok
test tests::fungible_tests::unbalanced_trait_decrease_balance_simple_works ... ok
test tests::reentrancy_tests::emit_events_with_no_existential_deposit_suicide_with_dust ... ok
test tests::fungible_tests::thaw_should_work ... ok
test tests::fungible_tests::set_freeze_zero_should_work ... ok
test tests::fungible_tests::inspect_trait_reducible_balance_other_provide_works ... ok
test tests::fungible_tests::partial_freezing_should_work ... ok
test tests::fungible_tests::double_freezing_should_work ... ok
test tests::fungible_tests::frozen_hold_balance_cannot_be_moved_without_force ... ok
test tests::fungible_tests::unbalanced_trait_increase_balance_at_most_works ... ok
test tests::fungible_tests::frozen_hold_balance_best_effort_transfer_works ... ok
test tests::fungible_tests::freezing_and_holds_should_overlap ... ok
test tests::fungible_tests::unbalanced_trait_increase_balance_works ... ok
test tests::reentrancy_tests::transfer_dust_removal_tst1_should_work ... ok
test tests::reentrancy_tests::repatriating_reserved_balance_dust_removal_should_work ... ok
test tests::fungible_tests::set_freeze_should_work ... ok
test benchmarking::benchmarks::benchmark_tests::test_benchmarks ... ok

test result: ok. 109 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.60s

     Running unittests src/lib.rs (target/debug/deps/pallet_beefy-ef5c73911424238a)

running 19 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test tests::report_equivocation_has_valid_weight ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::validator_set_at_genesis ... ok
[2mMar 24 12:46:08.817[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::genesis_session_initializes_authorities ... ok
test tests::session_change_updates_next_authorities ... ok
test tests::session_change_updates_authorities ... ok
test tests::validator_set_updates_work ... ok
test tests::cleans_up_old_set_id_session_mappings ... ok
[2mMar 24 12:46:08.925[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.925[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.926[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.927[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.927[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.927[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.959[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:46:08.960[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test tests::report_equivocation_invalid_session ... ok
test tests::report_equivocation_invalid_set_id ... ok
test tests::valid_equivocation_reports_dont_pay_fees ... ok
test tests::report_equivocation_validate_unsigned_prevents_duplicates ... ok
test tests::report_equivocation_invalid_key_owner_proof ... ok
test tests::report_equivocation_old_set_works ... ok
test tests::report_equivocation_current_set_works ... ok
test tests::should_sign_and_verify ... ok
test tests::report_equivocation_invalid_equivocation_proof ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.07s

     Running unittests src/lib.rs (target/debug/deps/pallet_beefy_mmr-e47af26ea155e96e)

running 4 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
[2mMar 24 12:46:09.895[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.895[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.895[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.895[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
test tests::should_update_authorities ... ok
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
[2mMar 24 12:46:09.896[0m [31mERROR[0m runtime::beefy: Failed to convert BEEFY PublicKey to ETH address!    
test tests::should_contain_mmr_digest ... ok
test tests::should_contain_valid_leaf_data ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_bounties-ffc333ce52cacc76)

running 49 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::genesis_funding_works ... ok
test tests::genesis_config_works ... ok
test tests::accept_non_existent_spend_proposal_fails ... ok
test tests::accepted_spend_proposal_ignored_outside_spend_period ... ok
test tests::approve_bounty_works_second_instance ... ok
test tests::inexistent_account_works ... ok
test tests::accepted_spend_proposal_enacted_on_spend_period ... ok
test tests::claim_handles_high_fee ... ok
test tests::approve_bounty_instance1_insufficient_spend_limit_errors ... ok
test tests::accept_curator_handles_different_deposit_calculations ... ok
test tests::minting_works ... ok
test tests::approve_bounty_insufficient_spend_limit_errors ... ok
test benchmarking::bench_approve_bounty ... ok
test tests::close_bounty_works ... ok
test benchmarking::bench_close_bounty_active ... ok
test tests::accept_already_rejected_spend_proposal_fails ... ok
test tests::approve_bounty_works ... ok
test tests::cancel_and_refund ... ok
test tests::award_and_cancel ... ok
test benchmarking::bench_award_bounty ... ok
test benchmarking::bench_accept_curator ... ok
test tests::expire_and_unassign ... ok
test benchmarking::bench_close_bounty_proposed ... ok
test benchmarking::bench_unassign_curator ... ok
test benchmarking::bench_claim_bounty ... ok
test benchmarking::bench_propose_curator ... ok
test benchmarking::bench_extend_bounty_expiry ... ok
test tests::extend_expiry ... ok
test tests::pot_underflow_should_not_diminish ... ok
test tests::propose_bounty_validation_works ... ok
test tests::award_and_claim_bounty_works ... ok
test tests::assign_curator_works ... ok
test benchmarking::bench_propose_bounty ... ok
test tests::reject_non_existent_spend_proposal_fails ... ok
test tests::propose_bounty_works ... ok
test tests::spend_proposal_fails_when_proposer_poor ... ok
test tests::test_migration_v4 ... ok
test tests::reject_already_rejected_spend_proposal_fails ... ok
test tests::unused_pot_should_diminish ... ok
test tests::spend_proposal_takes_min_deposit ... ok
test tests::propose_curator_instance1_insufficient_spend_limit_errors ... ok
test tests::spend_proposal_takes_proportional_deposit ... ok
test tests::rejected_spend_proposal_ignored_on_spend_period ... ok
test tests::propose_curator_insufficient_spend_limit_errors ... ok
test tests::unassign_curator_self ... ok
test tests::treasury_account_doesnt_get_deleted ... ok
test tests::unassign_curator_works ... ok
test benchmarking::bench_spend_funds ... ok

test result: ok. 49 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.17s

     Running unittests src/lib.rs (target/debug/deps/pallet_child_bounties-4a3f69c33e54232c)

running 24 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::minting_works ... ok
test tests::genesis_config_works ... ok
test benchmarking::bench_accept_curator ... ok
test tests::close_child_bounty_pending ... ok
test benchmarking::bench_close_child_bounty_added ... ok
test tests::close_child_bounty_active ... ok
test benchmarking::bench_close_child_bounty_active ... ok
test tests::close_child_bounty_added ... ok
test benchmarking::bench_unassign_curator ... ok
test tests::child_bounty_added_unassign_curator ... ok
test benchmarking::bench_award_child_bounty ... ok
test benchmarking::bench_claim_child_bounty ... ok
test tests::children_curator_fee_calculation_test ... ok
test benchmarking::bench_propose_curator ... ok
test tests::child_bounty_curator_proposed_unassign_curator ... ok
test tests::child_bounty_active_unassign_curator ... ok
test tests::add_child_bounty ... ok
test tests::award_claim_child_bounty ... ok
test tests::close_parent_with_child_bounty ... ok
test tests::child_bounty_assign_curator ... ok
test tests::accept_curator_handles_different_deposit_calculations ... ok
test tests::parent_bounty_inactive_unassign_curator_child_bounty ... ok
test benchmarking::bench_add_child_bounty ... ok

test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/pallet_collective-ae264f75cf4febb4)

running 37 tests
test tests::genesis_build_panics_with_duplicate_members - should panic ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::motions_disapproval_works ... ok
test tests::motions_basic_environment_works ... ok
test tests::motions_ignoring_non_collective_votes_works ... ok
test tests::close_with_prime_works ... ok
test tests::motions_approval_works ... ok
test tests::motions_all_first_vote_free_works ... ok
test tests::close_with_no_prime_but_majority_works ... ok
test tests::close_with_voting_prime_works ... ok
test tests::correct_validate_and_get_proposal ... ok
test tests::migration_v4 ... ok
test tests::motions_ignoring_bad_index_collective_vote_works ... ok
test tests::motion_with_no_votes_closes_with_disapproval ... ok
test tests::close_disapprove_does_not_care_about_weight_or_len ... ok
test tests::close_works ... ok
test tests::motions_reproposing_disapproved_works ... ok
test tests::motions_ignoring_non_collective_proposals_works ... ok
test tests::disapprove_proposal_works ... ok
test tests::propose_works ... ok
test tests::proposal_weight_limit_ignored_on_disapprove ... ok
test tests::motions_vote_after_works ... ok
test tests::motions_approval_with_enough_votes_and_lower_voting_threshold_works ... ok
test tests::proposal_weight_limit_works_on_approve ... ok
test tests::removal_of_old_voters_votes_works ... ok
test tests::removal_of_old_voters_votes_works_with_set_members ... ok
test benchmarking::bench_execute ... ok
test benchmarking::bench_propose_execute ... ok
test tests::limit_active_proposals ... ok
test benchmarking::bench_disapprove_proposal ... ok
test benchmarking::bench_vote ... ok
test benchmarking::bench_close_early_disapproved ... ok
test benchmarking::bench_close_disapproved ... ok
test benchmarking::bench_propose_proposed ... ok
test benchmarking::bench_close_early_approved ... ok
test benchmarking::bench_close_approved ... ok
test benchmarking::bench_set_members ... ok

test result: ok. 37 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 9.48s

     Running unittests src/lib.rs (target/debug/deps/pallet_contracts-68d57085b07ede69)

running 329 tests
test benchmarking::bench_instr_br_table_per_entry ... ok
test benchmarking::bench_instr_call_per_local ... ok
test benchmarking::bench_call ... ok
test benchmarking::bench_instr_call ... ok
test benchmarking::bench_instr_global_get ... ok
test benchmarking::bench_instr_i64extendsi32 ... ok
test benchmarking::bench_instr_i64extendui32 ... ok
test benchmarking::bench_instr_i64const ... ok
test benchmarking::bench_instr_i64ctz ... ok
test benchmarking::bench_instr_call_indirect ... ok
test benchmarking::bench_instr_global_set ... ok
test benchmarking::bench_instr_i64eqz ... ok
test benchmarking::bench_instr_i64clz ... ok
test benchmarking::bench_instr_i32wrapi64 ... ok
test benchmarking::bench_instr_i64load ... ok
test benchmarking::bench_instr_i64add ... ok
test benchmarking::bench_instr_i64gtu ... ok
test benchmarking::bench_instr_i64eq ... ok
test benchmarking::bench_instr_i64les ... ok
test benchmarking::bench_instr_i64divu ... ok
test benchmarking::bench_instr_i64leu ... ok
test benchmarking::bench_instr_i64geu ... ok
test benchmarking::bench_instr_i64divs ... ok
test benchmarking::bench_instr_i64and ... ok
test benchmarking::bench_instr_i64ges ... ok
test benchmarking::bench_instr_i64lts ... ok
test benchmarking::bench_instr_i64gts ... ok
test benchmarking::bench_instr_memory_grow ... ok
test benchmarking::bench_on_process_deletion_queue_batch ... ok
test benchmarking::bench_print_schedule ... ok
test benchmarking::bench_ink_erc20_transfer ... ok
test benchmarking::bench_remove_code ... ok
test benchmarking::bench_instr_memory_current ... ok
test benchmarking::bench_instr_i64mul ... ok
test benchmarking::bench_instr_i64ltu ... ok
test benchmarking::bench_instr_i64popcnt ... ok
test benchmarking::bench_instr_local_get ... ok
test benchmarking::bench_instr_i64ne ... ok
test benchmarking::bench_instr_i64or ... ok
test benchmarking::bench_instr_i64store ... ok
test benchmarking::bench_instr_local_set ... ok
test benchmarking::bench_instr_i64rotl ... ok
test benchmarking::bench_instr_i64rems ... ok
test benchmarking::bench_instr_i64rotr ... ok
test benchmarking::bench_instr_i64remu ... ok
test benchmarking::bench_instr_i64shrs ... ok
test benchmarking::bench_instr_i64shl ... ok
test benchmarking::bench_instr_local_tee ... ok
test benchmarking::bench_instr_i64shru ... ok
test benchmarking::bench_instantiate ... ok
test benchmarking::bench_instr_i64sub ... ok
test benchmarking::bench_instr_i64xor ... ok
test benchmarking::bench_seal_block_number ... ok
test benchmarking::bench_seal_clear_storage_per_byte ... ok
test benchmarking::bench_seal_address ... ok
test benchmarking::bench_seal_caller_is_origin ... ok
test benchmarking::bench_seal_caller ... ok
test benchmarking::bench_seal_contains_storage_per_byte ... ok
test benchmarking::bench_instr_br ... ok
test benchmarking::bench_instr_select ... ok
test benchmarking::bench_instr_if ... ok
test benchmarking::bench_seal_deposit_event_per_topic_and_byte ... ok
test benchmarking::bench_seal_balance ... ok
test benchmarking::bench_seal_get_storage_per_byte ... ok
test benchmarking::bench_seal_call_per_transfer_clone_byte ... ok
test benchmarking::bench_seal_hash_blake2_128_per_byte ... ok
test benchmarking::bench_instr_br_if ... ok
test benchmarking::bench_seal_debug_message ... ok
test benchmarking::bench_seal_gas_left ... ok
test benchmarking::bench_seal_gas ... ok
test benchmarking::bench_seal_hash_sha2_256_per_byte ... ok
test benchmarking::bench_seal_hash_blake2_256 ... ok
test benchmarking::bench_call_with_code_per_byte ... ok
test benchmarking::bench_seal_hash_blake2_128 ... ok
test benchmarking::bench_seal_hash_blake2_256_per_byte ... ok
test benchmarking::bench_instr_br_table ... ok
test benchmarking::bench_seal_input_per_byte ... ok
test benchmarking::bench_seal_return ... ok
test benchmarking::bench_seal_instantiation_nonce ... ok
test benchmarking::bench_seal_hash_keccak_256_per_byte ... ok
test benchmarking::bench_seal_minimum_balance ... ok
test benchmarking::bench_seal_now ... ok
test benchmarking::bench_seal_input ... ok
test benchmarking::bench_seal_set_storage_per_new_byte ... ok
test benchmarking::bench_seal_return_per_byte ... ok
test benchmarking::bench_seal_reentrance_count ... ok
test benchmarking::bench_seal_own_code_hash ... ok
test benchmarking::bench_set_code ... ok
test benchmarking::bench_seal_set_storage_per_old_byte ... ok
test benchmarking::bench_seal_take_storage_per_byte ... ok
test benchmarking::bench_seal_terminate ... ok
test benchmarking::bench_seal_hash_sha2_256 ... ok
test exec::tests::balance_too_low ... ok
test exec::tests::address_returns_proper_values ... ok
test exec::tests::call_deny_reentry ... ok
test exec::tests::call_reentry_direct_recursion ... ok
test exec::tests::call_runtime_works ... ok
test exec::tests::call_runtime_filter ... ok
test exec::tests::code_hash_returns_proper_values ... ok
test exec::tests::caller_is_origin_returns_proper_values ... ok
test benchmarking::bench_seal_hash_keccak_256 ... ok
test exec::tests::caller_returns_proper_values ... ok
test exec::tests::correct_transfer_on_call ... ok
test exec::tests::changes_are_reverted_on_failing_call ... ok
test exec::tests::correct_transfer_on_delegate_call ... ok
test exec::tests::ecdsa_to_eth_address_returns_proper_value ... ok
test exec::tests::get_storage_size_varsized_key_works ... ok
test exec::tests::get_storage_size_works ... ok
test exec::tests::get_storage_works ... ok
test exec::tests::get_storage_varsized_key_works ... ok
test exec::tests::input_data_to_call ... ok
test exec::tests::in_memory_changes_not_discarded ... ok
test benchmarking::bench_reinstrument ... ok
test exec::tests::instantiation_fails_with_failing_output ... ok
test exec::tests::instantiation_work_with_success_output ... ok
test exec::tests::instantiation_from_contract ... ok
test benchmarking::bench_solang_erc20_transfer ... ok
test exec::tests::is_contract_returns_proper_values ... ok
test exec::tests::input_data_to_instantiate ... ok
test exec::tests::max_depth ... ok
test exec::tests::it_works ... ok
test exec::tests::instantiation_traps ... ok
test benchmarking::bench_seal_instantiate_per_transfer_input_salt_byte ... ok
test exec::tests::own_code_hash_returns_proper_values ... ok
test exec::tests::output_is_returned_on_failure ... ok
test exec::tests::output_is_returned_on_success ... ok
test exec::tests::printing_works_on_fail ... ok
test exec::tests::randomness_works ... ok
test exec::tests::printing_works ... ok
test exec::tests::nonce_api_works ... ok
test exec::tests::set_storage_varsized_key_works ... ok
test gas::tests::charge_exact_amount ... ok
test exec::tests::refuse_instantiate_with_value_below_existential_deposit ... ok
test gas::tests::it_works ... ok
test exec::tests::set_storage_works ... ok
test gas::tests::overcharge_does_not_charge ... ok
test exec::tests::recursive_call_during_constructor_fails ... ok
test gas::tests::refuse_to_execute_anything_if_zero ... ok
test exec::tests::nonce ... ok
test gas::tests::tracing ... ok
test exec::tests::termination_from_instantiate_fails ... ok
test schedule::test::print_test_schedule ... ok
test storage::meter::tests::charging_works ... ok
test storage::meter::tests::new_reserves_balance_works ... ok
test storage::meter::tests::empty_charge_works ... ok
test storage::meter::tests::termination_works ... ok
test benchmarking::bench_seal_clear_storage ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::calling_plain_account_fails ... ok
test benchmarking::bench_seal_value_transferred ... ok
test exec::tests::transfer_works ... ok
test benchmarking::bench_seal_weight_to_fee ... ok
test tests::cannot_self_destruct_while_live ... ok
test tests::cannot_self_destruct_through_draning ... ok
test tests::cannot_self_destruct_in_constructor ... ok
test tests::cannot_set_code_indeterministic_code ... ok
test tests::chain_extension_temp_storage_works ... ok
test tests::cannot_instantiate_indeterministic_code ... ok
test benchmarking::bench_seal_random ... ok
test tests::account_reentrance_count_works ... ok
test tests::code_rejected_error_works ... ok
test tests::cannot_self_destruct_through_storage_refund_after_price_change ... ok
test tests::call_return_code ... ok
test tests::debug_message_works ... ok
test tests::debug_message_invalid_utf8 ... ok
test tests::debug_message_logging_disabled ... ok
test tests::crypto_hashes ... ok
test tests::deletion_queue_full ... ok
test tests::contract_reverted ... ok
test tests::chain_extension_works ... ok
test tests::delegate_call ... ok
test tests::deposit_event_max_value_limit ... ok
test tests::deposit_limit_honors_existential_deposit ... ok
test tests::delegate_call_indeterministic_code ... ok
test tests::disabled_chain_extension_wont_deploy ... ok
test tests::deposit_limit_honors_liquidity_restrictions ... ok
test tests::deposit_limit_honors_min_leftover ... ok
test benchmarking::bench_on_initialize_per_trie_key ... ok
test benchmarking::bench_seal_contains_storage ... ok
test tests::disabled_chain_extension_errors_on_call ... ok
test benchmarking::bench_seal_deposit_event ... ok
test tests::gas_call_runtime_reentrancy_guarded ... ok
test tests::gas_estimation_nested_call_fixed_limit ... ok
test tests::destroy_contract_and_transfer_funds ... ok
test tests::instantiate_with_below_existential_deposit_works ... ok
test tests::ecdsa_recover ... ok
test tests::gas_estimation_call_runtime ... ok
test tests::deploy_and_call_other_contract ... ok
test tests::instantiate_with_zero_balance_works ... ok
test tests::lazy_removal_does_no_run_on_full_queue_and_full_block ... ok
test tests::instantiate_and_call_and_deposit_event ... ok
test tests::instantiate_unique_trie_id ... ok
test tests::remove_code_not_found ... ok
test tests::instantiate_return_code ... ok
test tests::lazy_removal_works ... ok
test tests::lazy_removal_does_no_run_on_low_remaining_weight ... ok
test tests::lazy_removal_on_full_queue_works_on_initialize ... ok
test tests::remove_code_in_use ... ok
test tests::lazy_removal_partial_remove_works ... ok
test tests::lazy_removal_does_not_use_all_weight ... ok
test tests::lazy_batch_removal_works ... ok
test tests::remove_code_works ... ok
test tests::self_destruct_works ... ok
test tests::slash_cannot_kill_account ... ok
test tests::remove_code_wrong_origin ... ok
test tests::reinstrument_does_charge ... ok
test tests::storage_deposit_limit_is_enforced ... ok
test tests::refcounter ... ok
test tests::transfer_allow_death_cannot_kill_account ... ok
test tests::set_code_extrinsic ... ok
test tests::set_code_hash ... ok
test wasm::prepare::tests::entrypoints::omit_call ... ok
test wasm::prepare::tests::entrypoints::it_works ... ok
test wasm::prepare::tests::entrypoints::global_float ... ok
test exec::tests::debug_buffer_is_limited ... ok
test tests::storage_deposit_works ... ok
test wasm::prepare::tests::entrypoints::local_float ... ok
test wasm::prepare::tests::entrypoints::omit_deploy ... ok
test wasm::prepare::tests::entrypoints::param_float ... ok
test tests::upload_code_limit_too_low ... ok
test tests::upload_code_works ... ok
test wasm::prepare::tests::entrypoints::result_float ... ok
test tests::reentrance_count_works_with_delegated_call ... ok
test tests::reentrance_count_works_with_call ... ok
test tests::upload_code_not_enough_balance ... ok
test tests::transfer_return_code ... ok
test wasm::prepare::tests::entrypoints::try_sneak_export_as_entrypoint ... ok
test wasm::prepare::tests::entrypoints::unknown_exports ... ok
test wasm::prepare::tests::entrypoints::wrong_signature ... ok
test wasm::prepare::tests::entrypoints::try_sneak_export_as_global ... ok
test wasm::prepare::tests::functions::param_number_invalid ... ok
test wasm::prepare::tests::globals::global_number_too_high ... ok
test wasm::prepare::tests::imports::function_in_other_module_works ... ok
test wasm::prepare::tests::functions::param_number_valid ... ok
test wasm::prepare::tests::globals::global_number_valid ... ok
test wasm::prepare::tests::locals::local_number_too_high ... ok
test tests::storage_max_value_limit ... ok
test wasm::prepare::tests::imports::wrong_signature ... ok
test wasm::prepare::tests::imports::unknown_func_name ... ok
test wasm::prepare::tests::imports::memory_not_in_arbitrary_module ... ok
test wasm::prepare::tests::imports::can_not_import_gas_function ... ok
test wasm::prepare::tests::locals::local_number_valid ... ok
test wasm::prepare::tests::imports::memory_not_in_seal0 ... ok
test wasm::prepare::tests::imports::can_import_legit_function ... ok
test wasm::prepare::tests::memories::field_name_not_memory ... ok
test wasm::prepare::tests::memories::initial_exceeds_maximum ... ok
test wasm::prepare::tests::memories::internal_memory_declaration ... ok
test wasm::prepare::tests::memories::global_import ... ok
test wasm::prepare::tests::tables::br_table_too_big ... ok
test wasm::prepare::tests::memories::multiple_memory_imports ... ok
test wasm::prepare::tests::memories::table_import ... ok
test wasm::prepare::tests::no_floats ... ok
test wasm::prepare::tests::memories::requested_maximum_exceeds_configured_maximum ... ok
test benchmarking::bench_seal_get_storage ... ok
test wasm::prepare::tests::memories::no_maximum ... ok
test wasm::prepare::tests::memories::requested_maximum_valid ... ok
test wasm::prepare::tests::memories::no_memory_import ... ok
test wasm::prepare::tests::memories::memory_with_one_page ... ok
test wasm::prepare::tests::tables::table_too_big ... ok
test wasm::prepare::tests::tables::no_tables ... ok
test wasm::prepare::tests::tables::table_valid_size ... ok
test wasm::prepare::tests::tables::br_table_valid_size ... ok
test wasm::tests::can_reinstrument_deprecated ... ok
test wasm::tests::account_reentrance_count_works ... ok
test wasm::tests::address ... ok
test wasm::tests::code_hash_works ... ok
test wasm::tests::caller ... ok
test wasm::tests::call_runtime_panics_on_invalid_call ... ok
test wasm::tests::block_number ... ok
test wasm::tests::balance ... ok
test wasm::tests::call_runtime_works ... ok
test wasm::tests::caller_is_origin_works ... ok
test wasm::tests::contract_call ... ok
test wasm::tests::contract_call_forward_input ... ok
test wasm::tests::contract_call_clone_input ... ok
test wasm::tests::contract_call_tail_call ... ok
test wasm::tests::contract_out_of_bounds_access ... ok
test wasm::tests::contract_ecdsa_recover ... ok
test wasm::tests::contract_decode_length_ignored ... ok
test wasm::tests::contract_ecdsa_to_eth_address ... ok
test wasm::tests::contract_instantiate ... ok
test wasm::tests::contract_delegate_call ... ok
test wasm::tests::contract_terminate ... ok
test wasm::tests::contract_transfer ... ok
test tests::storage_deposit_limit_is_enforced_late ... ok
test wasm::tests::contract_call_limited_gas ... ok
test wasm::tests::contains_storage_works ... ok
test wasm::tests::debug_message_invalid_utf8_fails ... ok
test wasm::tests::debug_message_works ... ok
test wasm::tests::deposit_event ... ok
test wasm::tests::deposit_event_duplicates_allowed ... ok
test wasm::tests::deposit_event_max_topics ... ok
test wasm::tests::gas_price ... ok
test wasm::tests::random ... ok
test wasm::tests::gas_left ... ok
test wasm::tests::random_v1 ... ok
test wasm::tests::clear_storage_works ... ok
test wasm::tests::instantiation_nonce_works ... ok
test wasm::tests::is_contract_works ... ok
test wasm::tests::get_storage_puts_data_into_buf ... ok
test wasm::tests::minimum_balance ... ok
test wasm::tests::reentrance_count_works ... ok
test wasm::tests::start_fn_illegal ... ok
test wasm::tests::own_code_hash_works ... ok
test wasm::tests::return_with_revert_status ... ok
test wasm::tests::seal_return_with_success_status ... ok
test wasm::tests::now ... ok
test wasm::tests::value_transferred ... ok
test wasm::tests::set_code_hash ... ok
test wasm::tests::get_storage_works ... ok
test wasm::tests::take_storage_works ... ok
test wasm::tests::set_storage_works ... ok
test benchmarking::bench_seal_take_storage ... ok
test benchmarking::bench_seal_is_contract ... ok
test benchmarking::bench_seal_code_hash ... ok
test benchmarking::bench_seal_set_storage ... ok
test benchmarking::bench_upload_code ... ok
test benchmarking::bench_seal_debug_message_per_byte ... ok
test benchmarking::bench_instantiate_with_code ... ok
test benchmarking::bench_seal_transfer ... ok
test benchmarking::bench_seal_set_code_hash ... ok
test benchmarking::bench_seal_delegate_call ... ok
test benchmarking::bench_seal_instantiate ... ok
test benchmarking::bench_on_initialize_per_queue_item ... ok
test benchmarking::bench_seal_call ... ok
test benchmarking::bench_seal_account_reentrance_count ... ok
test tests::run_out_of_gas ... ok
test benchmarking::bench_seal_ecdsa_to_eth_address ... ok
test benchmarking::bench_seal_ecdsa_recover ... ok

test result: ok. 329 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 33.15s

     Running unittests src/lib.rs (target/debug/deps/pallet_contracts_primitives-3a8501f69e1e1845)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_contracts_proc_macro-a30ff5c1bd0e8b69)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_conviction_voting-30d751edaa6bd623)

running 31 tests
test tests::completed_poll_should_panic ... ignored
test tests::unknown_poll_should_panic ... ignored
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_stuff ... ok
test tests::params_should_work ... ok
test tests::split_voting_works ... ok
test tests::successful_but_zero_conviction_vote_balance_can_be_unlocked ... ok
test tests::voting_balance_gets_locked ... ok
test tests::unsuccessful_conviction_vote_balance_can_be_unlocked ... ok
test tests::abstain_voting_works ... ok
test tests::redelegation_after_vote_ending_should_keep_lock ... ok
test tests::basic_voting_works ... ok
test tests::lock_amalgamation_valid_with_multiple_delegations ... ok
test tests::lock_amalgamation_valid_with_move_roundtrip_to_casting ... ok
test tests::lock_amalgamation_valid_with_move_roundtrip_to_delegation ... ok
test tests::lock_amalgamation_valid_with_multiple_removed_votes ... ok
test tests::lock_aggregation_over_different_classes_with_casting_works ... ok
test tests::lock_aggregation_over_different_classes_with_delegation_works ... ok
test tests::errors_with_remove_vote_work ... ok
test benchmarking::bench_vote_new ... ok
test tests::remove_other_vote_works ... ok
test tests::errors_with_delegating_work ... ok
test benchmarking::bench_remove_other_vote ... ok
test benchmarking::bench_vote_existing ... ok
test benchmarking::bench_unlock ... ok
test benchmarking::bench_remove_vote ... ok
test tests::errors_with_vote_work ... ok
test tests::classwise_delegation_works ... ok
test benchmarking::bench_undelegate ... ok
test benchmarking::bench_delegate ... ok
test tests::successful_conviction_vote_balance_stays_locked_for_correct_time ... ok

test result: ok. 29 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/pallet_core_fellowship-5def9716a5c96b56)

running 14 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_stuff ... ok
test tests::set_params_works ... ok
test tests::get_salary_works ... ok
test tests::promote_postpones_auto_demote ... ok
test tests::sync_works ... ok
test tests::proof_postpones_auto_demote ... ok
test tests::auto_demote_works ... ok
test tests::induct_works ... ok
test tests::auto_demote_offboard_works ... ok
test tests::active_changing_get_salary_works ... ok
test tests::offboard_works ... ok
test tests::promote_works ... ok
test benchmarking::benchmarks::benchmark_tests::test_benchmarks ... ok

test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_democracy-dc18015a89384b55)

running 92 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_external_propose_default ... ok
test benchmarking::bench_external_propose ... ok
test benchmarking::bench_external_propose_majority ... ok
test tests::cancellation::cancel_referendum_should_work ... ok
test tests::cancellation::emergency_cancel_should_work ... ok
test benchmarking::bench_set_external_metadata ... ok
test benchmarking::bench_cancel_referendum ... ok
test benchmarking::bench_veto_external ... ok
test benchmarking::bench_emergency_cancel ... ok
test benchmarking::bench_fast_track ... ok
test benchmarking::bench_clear_public_proposals ... ok
test benchmarking::bench_set_referendum_metadata ... ok
test benchmarking::bench_clear_referendum_metadata ... ok
test benchmarking::bench_clear_external_metadata ... ok
test tests::decoders::len_of_deposit_of ... ok
test tests::decoders::test_decode_compact_u32_at ... ok
test tests::delegation::conviction_should_be_honored_in_delegation ... ok
test tests::delegation::cyclic_delegation_should_unwind ... ok
test tests::delegation::self_delegation_not_allowed ... ok
test tests::delegation::single_proposal_should_work_with_delegation ... ok
test tests::external_proposing::external_majority_referendum_works ... ok
test benchmarking::bench_on_initialize_external ... ok
test tests::external_proposing::external_default_referendum_works ... ok
test tests::delegation::split_vote_delegation_should_be_ignored ... ok
test tests::delegation::single_proposal_should_work_with_undelegation ... ok
test tests::external_proposing::external_blacklisting_should_work ... ok
test tests::delegation::single_proposal_should_work_with_vote_and_delegation ... ok
test tests::delegation::single_proposal_should_work_with_delegation_and_vote ... ok
test tests::external_proposing::external_referendum_works ... ok
test tests::fast_tracking::fast_track_referendum_fails_when_no_simple_majority ... ok
test tests::external_proposing::external_and_public_interleaving_works ... ok
test tests::fast_tracking::fast_track_referendum_works ... ok
test tests::delegation::redelegation_keeps_lock ... ok
test tests::fast_tracking::instant_referendum_works ... ok
test tests::external_proposing::veto_external_works ... ok
test tests::lock_voting::locks_should_persist_from_voting_to_delegation ... ok
test tests::fast_tracking::instant_next_block_referendum_backed ... ok
test tests::lock_voting::lock_voting_should_work_with_delegation ... ok
test tests::lock_voting::multi_consolidation_of_lockvotes_should_be_conservative ... ok
test tests::lock_voting::no_locks_without_conviction_should_work ... ok
test tests::lock_voting::locks_should_persist_from_delegation_to_voting ... ok
test tests::params_should_work ... ok
test tests::metadata::clear_metadata_works ... ok
test tests::metadata::set_referendum_metadata_by_root ... ok
test tests::metadata::clear_proposal_metadata_works ... ok
test tests::public_proposals::backing_for_should_work ... ok
test tests::metadata::set_external_metadata_works ... ok
test tests::metadata::clear_referendum_metadata_works ... ok
test tests::lock_voting::single_consolidation_of_lockvotes_should_work_as_before ... ok
test tests::public_proposals::deposit_for_proposals_should_be_returned ... ok
test tests::lock_voting::lock_voting_should_work ... ok
test tests::public_proposals::cancel_proposal_should_work ... ok
test tests::metadata::set_proposal_metadata_works ... ok
test tests::public_proposals::deposit_for_proposals_should_be_taken ... ok
test tests::set_balance_proposal_is_correctly_filtered_out ... ok
test tests::lock_voting::prior_lockvotes_should_be_enforced ... ok
test tests::public_proposals::blacklisting_should_work ... ok
test tests::public_proposals::proposal_with_deposit_below_minimum_should_not_work ... ok
test tests::public_proposals::poor_proposer_should_not_work ... ok
test vote_threshold::tests::should_work ... ok
test tests::scheduling::simple_passing_should_work ... ok
test tests::scheduling::simple_failing_should_work ... ok
test tests::scheduling::lowest_unbaked_should_be_sensible ... ok
test tests::scheduling::ooo_inject_referendums_should_work ... ok
test tests::public_proposals::poor_seconder_should_not_work ... ok
test tests::voting::controversial_low_turnout_voting_should_work ... ok
test tests::voting::passing_low_turnout_voting_should_work ... ok
test tests::public_proposals::runners_up_should_come_after ... ok
test tests::scheduling::delayed_enactment_should_work ... ok
test tests::voting::overvoting_should_fail ... ok
test tests::voting::split_vote_cancellation_should_work ... ok
test tests::voting::single_proposal_should_work ... ok
test tests::voting::controversial_voting_should_work ... ok
test tests::voting::split_voting_should_work ... ok
test benchmarking::bench_blacklist ... ok
test benchmarking::bench_clear_proposal_metadata ... ok
test benchmarking::bench_cancel_proposal ... ok
test benchmarking::bench_set_proposal_metadata ... ok
test benchmarking::bench_propose ... ok
test benchmarking::bench_vote_new ... ok
test benchmarking::bench_vote_existing ... ok
test benchmarking::bench_on_initialize_base ... ok
test benchmarking::bench_on_initialize_base_with_launch_period ... ok
test benchmarking::bench_on_initialize_public ... ok
test benchmarking::bench_remove_other_vote ... ok
test benchmarking::bench_remove_vote ... ok
test benchmarking::bench_undelegate ... ok
test benchmarking::bench_delegate ... ok
test benchmarking::bench_unlock_remove ... ok
test benchmarking::bench_unlock_set ... ok
test benchmarking::bench_second ... ok

test result: ok. 92 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.28s

     Running unittests src/lib.rs (target/debug/deps/pallet_election_provider_multi_phase-843b552eab827bcd)

running 85 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_on_initialize_nothing ... ok
test signed::tests::data_provider_should_respect_target_limits ... ok
test benchmarking::bench_finalize_signed_phase_accept_solution ... ok
test signed::tests::desired_targets_greater_than_max_winners ... ok
test signed::tests::data_provider_should_respect_voter_limits ... ok
test feasibility_check::desired_targets_gets_capped ... ok
test signed::tests::cannot_submit_too_early ... ok
test benchmarking::bench_on_initialize_open_signed ... ok
test benchmarking::bench_on_initialize_open_unsigned ... ok
test feasibility_check::snapshot_is_there ... ok
test feasibility_check::voter_votes ... ok
test feasibility_check::round ... ok
test feasibility_check::less_than_desired_targets_fails ... ok
test feasibility_check::voter_indices ... ok
test feasibility_check::winner_indices ... ok
test benchmarking::bench_finalize_signed_phase_reject_solution ... ok
test feasibility_check::score ... ok
test signed::tests::all_equal_score ... ok
test benchmarking::bench_submit ... ok
test signed::tests::all_in_one_signed_submission_scenario ... ok
test signed::tests::bad_solution_is_slashed ... ok
test signed::tests::cannot_submit_worse_with_full_queue_depends_on_threshold ... ok
test signed::tests::cannot_consume_too_much_future_weight ... ok
test signed::tests::cannot_submit_worse_with_full_queue ... ok
test signed::tests::call_fee_refund_is_limited_by_signed_max_refunds ... ok
test signed::tests::early_ejected_solution_gets_bond_back ... ok
test signed::tests::equally_good_solution_is_not_accepted_when_queue_full ... ok
test signed::tests::equally_good_solution_is_accepted_when_queue_not_full ... ok
test signed::tests::good_solution_is_rewarded ... ok
test signed::tests::insufficient_deposit_does_not_store_submission ... ok
test unsigned::max_weight::find_max_voter_binary_search_works ... ok
test tests::early_termination ... ok
test signed::tests::suppressed_solution_gets_bond_back ... ok
[2mMar 24 12:46:53.150[0m [31mERROR[0m runtime::election-provider: [#25] 🗳  Entering emergency mode: ElectionError::Fallback("NoFallback.")    
test tests::snapshot_too_big_truncate ... ok
test tests::unsigned_phase_void ... ok
test signed::tests::finalize_signed_phase_is_idempotent_given_submissions ... ok
test tests::both_phases_void ... ok
test tests::check_events_with_compute_unsigned ... ok
test tests::signed_phase_void ... ok
test signed::tests::should_pay_deposit ... ok
test signed::tests::replace_weakest_by_score_works ... ok
test tests::check_events_with_compute_signed ... ok
test signed::tests::weakest_is_removed_if_better_provided ... ok
test tests::governance_fallback_works ... ok
[2mMar 24 12:46:53.153[0m [31mERROR[0m runtime::election-provider: [#25] 🗳  Entering emergency mode: ElectionError::Fallback("NoFallback.")    
test tests::untrusted_score_verification_is_respected ... ok
test tests::phase_rotation_works ... ok
test tests::early_termination_with_submissions ... ok
test tests::fallback_strategy_works ... ok
test signed::tests::insufficient_deposit_with_full_queue_works_properly ... ok
test unsigned::tests::miner_trims_weight ... ok
test unsigned::tests::mine_solution_solutions_always_within_acceptable_length ... ok
test unsigned::tests::miner_will_not_submit_if_not_enough_winners ... ok
test signed::tests::finalize_signed_phase_is_idempotent_given_no_submissions ... ok
test unsigned::tests::ocw_lock_prevents_frequent_execution ... ok
test unsigned::tests::miner_works ... ok
test unsigned::tests::ocw_regenerates_and_resubmits_after_offchain_repeat ... ok
test unsigned::tests::ocw_can_submit_to_pool ... ok
test unsigned::tests::trim_assignments_length_does_not_modify_when_short_enough ... ok
test unsigned::tests::validate_unsigned_retracts_low_score ... ok
test unsigned::tests::trim_assignments_length_modifies_when_too_long ... ok
test unsigned::tests::priority_is_set ... ok
[2mMar 24 12:46:53.160[0m [31mERROR[0m runtime::election-provider: [#29] 🗳  Entering emergency mode: ElectionError::Fallback("NoFallback.")    
test unsigned::tests::ocw_resubmits_after_offchain_repeat ... ok
test unsigned::tests::ocw_lock_released_after_successful_execution ... ok
test unsigned::tests::ocw_solution_must_have_correct_round ... ok
test unsigned::tests::ocw_only_runs_when_unsigned_open_now ... ok
test unsigned::tests::trim_assignments_length_trims_lowest_stake ... ok
test unsigned::tests::ocw_lock_prevents_overlapping_execution ... ok
test unsigned::tests::validate_unsigned_retracts_incorrect_winner_count ... ok
test unsigned::tests::trim_assignments_length_wont_panic ... ok
test unsigned::tests::ocw_clears_cache_on_unsigned_phase_open ... ok
test unsigned::tests::unsigned_per_dispatch_checks_can_only_submit_threshold_better ... ok
test unsigned::tests::validate_unsigned_retracts_wrong_phase ... ok
test tests::snapshot_too_big_failure_no_fallback ... ok
test unsigned::tests::wrong_witness_panics - should panic ... ok
test unsigned::tests::unfeasible_solution_panics - should panic ... ok
test benchmarking::bench_create_snapshot_memory ... ok
test benchmarking::bench_mine_solution_offchain_memory ... ok
test benchmarking::bench_elect_queued ... ok
test tests::number_of_voters_allowed_2sec_block ... ok
test benchmarking::bench_feasibility_check ... ok
test tests::snapshot_too_big_failure_onchain_fallback ... ok
test benchmarking::bench_trim_assignments_length ... ok
test benchmarking::bench_submit_unsigned ... ok
test benchmarking::bench_create_snapshot_internal ... ok

test result: ok. 85 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.87s

     Running unittests src/lib.rs (target/debug/deps/pallet_election_provider_support_benchmarking-46493fd3ee4014ce)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_elections_phragmen-b093e12f030f8229)

running 82 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
[2mMar 24 12:46:54.017[0m [31mERROR[0m pallet_elections_phragmen::benchmarking: WARNING: benchmark error overrided - remove_member_without_replacement    
test tests::can_renounce_candidacy_candidate ... ok
test tests::can_vote_with_custom_stake ... ok
test tests::cannot_vote_for_no_candidate ... ok
test benchmarking::bench_remove_member_without_replacement ... ok
test tests::can_update_votes_and_stake ... ok
test tests::can_vote_for_more_than_free_balance_but_moot ... ok
test tests::candidates_are_always_sorted ... ok
test tests::cannot_vote_for_less_than_ed ... ok
test tests::dupe_candidate_submission_should_not_work ... ok
test tests::can_vote_for_old_members_even_when_no_new_candidates ... ok
test tests::candidates_lose_the_bond_when_outgoing ... ok
test tests::can_renounce_candidacy_member_without_runners_bond_is_refunded ... ok
test tests::dupe_vote_is_moot ... ok
test tests::can_renounce_candidacy_runner_up ... ok
test tests::all_outgoing ... ok
test tests::dupe_remove_should_fail ... ok
test tests::can_renounce_candidacy_member_with_runners_bond_is_refunded ... ok
test tests::defunct_voter_will_be_counted ... ok
test tests::current_members_are_always_next_candidate ... ok
test tests::cannot_vote_for_more_than_candidates_and_members_and_runners ... ok
test tests::genesis_members_cannot_be_duplicate - should panic ... ok
test tests::genesis_members_cannot_too_many - should panic ... ok
test tests::genesis_members_cannot_over_stake_0 - should panic ... ok
test tests::empty_term ... ok
test tests::election_state_is_uninterrupted ... ok
test benchmarking::bench_remove_voter ... ok
test tests::poor_candidate_submission_should_not_work ... ok
test tests::genesis_members_unsorted_should_work ... ok
test tests::genesis_voters_can_remove_lock ... ok
test tests::phragmen_should_not_self_vote ... ok
test tests::genesis_members_should_work ... ok
test tests::invalid_votes_are_moot ... ok
test tests::prime_is_gone_if_renouncing ... ok
test tests::only_desired_seats_are_chosen ... ok
test tests::non_voter_remove_should_not_work ... ok
test tests::members_are_sorted_based_on_id_runners_on_merit ... ok
test tests::members_lose_bond_once_outgoing ... ok
test tests::member_to_runner_up_wont_slash ... ok
test tests::incoming_outgoing_are_reported ... ok
test tests::params_should_work ... ok
test tests::member_candidacy_submission_should_not_work ... ok
test tests::non_member_renounce_member_should_fail ... ok
test benchmarking::bench_vote_more ... ok
test tests::non_runner_up_renounce_runner_up_should_fail ... ok
test tests::prime_votes_for_exiting_members_are_removed ... ok
test benchmarking::bench_remove_member_with_replacement ... ok
test tests::prime_is_kept_if_other_members_leave ... ok
test benchmarking::bench_renounce_candidacy_members ... ok
test benchmarking::bench_vote_equal ... ok
test benchmarking::bench_renounce_candidacy_runners_up ... ok
test benchmarking::bench_vote_less ... ok
test tests::prime_works ... ok
test tests::renounce_candidacy_count_can_overestimate ... ok
test tests::remove_voter_should_work ... ok
test tests::remove_members_triggers_election ... ok
test tests::removed_voter_should_not_be_counted ... ok
test tests::remove_and_replace_member_works ... ok
test tests::runner_candidate_submission_should_not_work ... ok
test tests::remove_defunct_voter_works ... ok
test tests::no_desired_members ... ok
test tests::term_duration_zero_is_passive ... ok
test tests::simple_voting_should_work ... ok
test tests::runner_up_replacement_maintains_members_order ... ok
test tests::runners_up_should_be_kept ... ok
test tests::runners_up_should_be_next_candidates ... ok
test tests::runner_up_replacement_works_when_out_of_order ... ok
test tests::runner_up_to_member_wont_slash ... ok
test tests::unsorted_runners_up_are_detected ... ok
test tests::runners_up_lose_bond_once_outgoing ... ok
test tests::wrong_renounce_candidacy_should_fail ... ok
test tests::simple_candidate_submission_should_work ... ok
test tests::updated_voting_bond_works ... ok
test tests::simple_voting_rounds_should_work ... ok
test tests::updating_candidacy_bond_works ... ok
test tests::voting_reserves_bond_per_vote ... ok
test tests::wrong_candidate_count_renounce_should_fail ... ok
test tests::seats_should_be_released_when_no_vote ... ok
test benchmarking::bench_submit_candidacy ... ok
test benchmarking::bench_renounce_candidacy_candidate ... ok
test benchmarking::bench_election_phragmen ... ok
test benchmarking::bench_clean_defunct_voters ... ok

test result: ok. 82 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 6.48s

     Running unittests src/lib.rs (target/debug/deps/pallet_example_basic-bf4626f0785bb3df)

running 8 tests
test tests::weights_work ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::counted_map_works ... ok
test tests::it_works_for_default_value ... ok
test tests::set_dummy_works ... ok
test tests::signed_ext_watch_dummy_works ... ok
test tests::it_works_for_optional_value ... ok
test benchmarking::benchmarks::benchmark_tests::test_benchmarks ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_example_offchain_worker-a835ac6e66c838b6)

running 9 tests
test tests::parse_price_works ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::should_make_http_call_and_parse_result ... ok
test tests::should_submit_raw_unsigned_transaction_on_chain ... ok
test tests::knows_how_to_mock_several_http_calls ... ok
test tests::it_aggregates_the_price ... ok
test tests::should_submit_signed_transaction_on_chain ... ok
test tests::should_submit_unsigned_transaction_on_chain_for_any_account ... ok
test tests::should_submit_unsigned_transaction_on_chain_for_all_accounts ... ok

test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.15s

     Running unittests src/lib.rs (target/debug/deps/pallet_fast_unstake-e38bd23cd06e471b)

running 41 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test tests::kusama_estimate ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::deregister_works ... ok
test tests::control_works ... ok
test tests::polkadot_estimate ... ok
test tests::on_idle::early_exit ... ok
test benchmarking::bench_control ... ok
test tests::cannot_deregister_if_not_queued ... ok
test tests::cannot_register_if_in_queue ... ok
test tests::deregister_disabled_fails ... ok
test benchmarking::bench_register_fast_unstake ... ok
test tests::cannot_register_if_not_bonded ... ok
test benchmarking::bench_deregister ... ok
test tests::control_must_be_control_origin ... ok
test benchmarking::bench_on_idle_unstake ... ok
test tests::on_idle::exposed_nominator_cannot_unstake ... ok
test tests::cannot_register_if_has_unlocking_chunks ... ok
test tests::on_idle::successful_unstake ... ok
test tests::cannot_deregister_if_not_controller ... ok
test tests::on_idle::unexposed_validator_can_fast_unstake ... ok
test tests::cannot_register_if_head ... ok
test tests::on_idle::exposed_nominator_cannot_unstake_multi_check ... ok
test tests::on_idle::successful_unstake_all_eras_per_block ... ok
test tests::on_idle::unstake_paused_mid_election ... ok
test tests::cannot_deregister_already_head ... ok
test tests::batched::multi_block_batched_all_fail_early_exit ... ok
test tests::on_idle::successful_unstake_one_era_per_block ... ok
test tests::on_idle::old_checked_era_pruned ... ok
test tests::on_idle::validators_cannot_bail ... ok
test tests::on_idle::if_head_not_set_one_random_fetched_from_queue ... ok
test tests::test_setup_works ... ok
test tests::on_idle::successful_multi_queue ... ok
test tests::register_works ... ok
test tests::register_insufficient_funds_fails ... ok
test tests::batched::single_block_batched_successful ... ok
test tests::batched::multi_block_batched_some_fail ... ok
test tests::register_disabled_fails ... ok
test tests::batched::multi_block_batched_successful ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test benchmarking::bench_on_idle_check ... ok

test result: ok. 41 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.41s

     Running unittests src/lib.rs (target/debug/deps/pallet_glutton-56523150fa8f568d)

running 19 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_empty_on_idle ... ok
test tests::on_idle_works ... ok
test tests::setting_compute_works ... ok
test benchmarking::bench_set_storage ... ok
test benchmarking::bench_set_compute ... ok
test tests::setting_storage_works ... ok
test tests::initialize_pallet_works ... ok
test tests::waste_at_most_proof_size_weight_close_enough ... ok
test benchmarking::bench_initialize_pallet_shrink ... ok
test benchmarking::bench_waste_ref_time_iter ... ok
test benchmarking::bench_initialize_pallet_grow ... ok
test benchmarking::bench_on_idle_high_proof_waste ... ok
test benchmarking::bench_on_idle_low_proof_waste ... ok
test tests::expand_and_shrink_trash_data_works ... ok
test benchmarking::bench_waste_proof_size_some ... ok
test tests::on_idle_weight_high_proof_is_close_enough_works ... ok
test tests::on_idle_weight_low_proof_is_close_enough_works ... ok
test tests::waste_at_most_ref_time_weight_close_enough ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.60s

     Running unittests src/lib.rs (target/debug/deps/pallet_grandpa-ce26ab3ac6201e69)

running 25 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test tests::time_slot_have_sane_ord ... ok
test tests::report_equivocation_has_valid_weight ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
[2mMar 24 12:47:02.710[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.710[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.710[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test benchmarking::bench_check_equivocation_proof ... ok
test benchmarking::bench_note_stalled ... ok
test tests::authorities_change_logged ... ok
test tests::authorities_change_logged_after_delay ... ok
test tests::schedule_pause_only_when_live ... ok
test tests::schedule_resume_only_when_paused ... ok
test tests::cannot_schedule_change_when_one_pending ... ok
test tests::always_schedules_a_change_on_new_session_when_stalled ... ok
test tests::dispatch_forced_change ... ok
test tests::on_new_session_doesnt_start_new_set_if_schedule_change_failed ... ok
[2mMar 24 12:47:02.819[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.820[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.820[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.821[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.824[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.854[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.873[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:02.873[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::cleans_up_old_set_id_session_mappings ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
[2mMar 24 12:47:03.100[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::report_equivocation_invalid_set_id ... ok
test tests::valid_equivocation_reports_dont_pay_fees ... ok
test benchmarking::tests::test_generate_equivocation_report_blob ... ok
test tests::report_equivocation_validate_unsigned_prevents_duplicates ... ok
test tests::report_equivocation_invalid_session ... ok
test tests::report_equivocation_invalid_key_owner_proof ... ok
test tests::report_equivocation_current_set_works ... ok
test tests::report_equivocation_old_set_works ... ok
test tests::report_equivocation_invalid_equivocation_proof ... ok

test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.82s

     Running unittests src/lib.rs (target/debug/deps/pallet_identity-c7c226bb66f32fd9)

running 36 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::field_deposit_should_work ... ok
test tests::adding_registrar_should_work ... ok
test tests::clearing_judgement_should_work ... ok
test tests::clearing_account_should_remove_subaccounts_and_refund ... ok
test tests::killing_account_should_remove_subaccounts_and_not_refund ... ok
test tests::setting_account_id_should_work ... ok
test tests::trailing_zeros_decodes_into_default_data ... ok
test benchmarking::bench_rename_sub ... ok
test benchmarking::bench_quit_sub ... ok
test benchmarking::bench_set_subs_new ... ok
test tests::amount_of_registrars_is_limited ... ok
test types::tests::manual_data_type_info ... ok
test tests::provide_judgement_should_return_judgement_payment_failed_error ... ok
test tests::killing_slashing_should_work ... ok
test benchmarking::bench_remove_sub ... ok
test tests::cancelling_requested_judgement_should_work ... ok
test tests::registration_should_work ... ok
test benchmarking::bench_set_subs_old ... ok
test tests::setting_subaccounts_should_work ... ok
test tests::requesting_judgement_should_work ... ok
test benchmarking::bench_add_sub ... ok
test tests::resolving_subaccount_ownership_works ... ok
test tests::test_has_identity ... ok
test tests::editing_subaccounts_should_work ... ok
test tests::uninvited_judgement_should_work ... ok
test benchmarking::bench_set_fee ... ok
test benchmarking::bench_set_fields ... ok
test benchmarking::bench_add_registrar ... ok
test benchmarking::bench_set_account_id ... ok
test benchmarking::bench_provide_judgement ... ok
test benchmarking::bench_request_judgement ... ok
test benchmarking::bench_cancel_request ... ok
test benchmarking::bench_set_identity ... ok
test benchmarking::bench_kill_identity ... ok
test benchmarking::bench_clear_identity ... ok

test result: ok. 36 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

     Running unittests src/lib.rs (target/debug/deps/pallet_im_online-b63695d7fca345c0)

running 16 tests
test tests::test_unresponsiveness_slash_fraction ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::test_does_not_heartbeat_early_in_the_session ... ok
test tests::test_probability_of_heartbeating_increases_with_session_progress ... ok
test tests::should_handle_non_linear_session_progress ... ok
test tests::should_generate_heartbeats ... ok
test tests::should_not_send_a_report_if_already_online ... ok
test tests::should_handle_missing_progress_estimates ... ok
test tests::should_mark_online_validator_when_block_is_authored ... ok
test tests::should_cleanup_received_heartbeats_on_session_end ... ok
test tests::should_mark_online_validator_when_heartbeat_is_received ... ok
test tests::late_heartbeat_and_invalid_keys_len_should_fail ... ok
test tests::should_report_offline_validators ... ok
test benchmarking::bench_validate_unsigned ... ok
test benchmarking::bench_validate_unsigned_and_then_heartbeat ... ok
test benchmarking::bench_heartbeat ... ok

test result: ok. 16 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/pallet_indices-55ff54c5a63d4051)

running 14 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::force_transfer_index_on_free_should_work ... ok
test tests::force_transfer_index_on_preowned_should_work ... ok
test benchmarking::bench_freeze ... ok
test tests::indexing_lookup_should_work ... ok
test benchmarking::bench_free ... ok
test tests::reclaim_index_on_accounts_should_work ... ok
test benchmarking::bench_claim ... ok
test tests::claiming_should_work ... ok
test benchmarking::bench_force_transfer ... ok
test benchmarking::bench_transfer ... ok
test tests::transfer_index_on_accounts_should_work ... ok
test tests::freezing_should_work ... ok
test tests::freeing_should_work ... ok

test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_insecure_randomness_collective_flip-f53492ccf3e6f3b2)

running 6 tests
test tests::test_block_number_to_index ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::test_random_material_partial ... ok
test tests::test_random_material_filled ... ok
test tests::test_random_material_filled_twice ... ok
test tests::test_random ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.19s

     Running unittests src/lib.rs (target/debug/deps/pallet_lottery-45f5a4402dc5bc51)

running 24 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::initial_state ... ok
test tests::call_to_indices_works ... ok
test tests::choose_ticket_trivial_cases ... ok
test tests::start_lottery_will_create_account ... ok
test tests::set_calls_works ... ok
test tests::no_participants_works ... ok
test tests::choose_account_one_participant ... ok
test benchmarking::bench_on_initialize_end ... ok
test tests::buy_ticket_insufficient_balance ... ok
test benchmarking::bench_stop_repeat ... ok
test benchmarking::bench_start_lottery ... ok
test tests::do_buy_ticket_keep_alive ... ok
test benchmarking::bench_buy_ticket ... ok
test benchmarking::bench_set_calls ... ok
test tests::do_buy_ticket_already_participating ... ok
test tests::start_lottery_works ... ok
test tests::do_buy_ticket_insufficient_balance ... ok
test benchmarking::bench_on_initialize_repeat ... ok
test tests::buy_ticket_already_participating ... ok
test tests::buy_ticket_works_as_simple_passthrough ... ok
test tests::buy_ticket_works ... ok
test tests::stop_repeat_works ... ok
test tests::basic_end_to_end_works ... ok

test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_membership-110d5fe44fbb8751)

running 19 tests
test tests::genesis_build_panics_with_duplicate_members - should panic ... ok
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::query_membership_works ... ok
test tests::swap_member_works_that_does_not_change_order ... ok
test tests::change_key_works_that_does_not_change_order ... ok
test tests::add_member_works ... ok
test tests::prime_member_works ... ok
test tests::remove_member_works ... ok
test tests::migration_v4 ... ok
test tests::swap_member_works ... ok
test tests::change_key_works ... ok
test tests::reset_members_works ... ok
test benchmark::bench_clear_prime ... ok
test benchmark::bench_set_prime ... ok
test benchmark::bench_swap_member ... ok
test benchmark::bench_add_member ... ok
test benchmark::bench_remove_member ... ok
test benchmark::bench_change_key ... ok
test benchmark::bench_reset_member ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_message_queue-d886b6d8929f2126)

running 48 tests
test integration_test::stress_test_enqueue_and_service ... ignored
test integration_test::stress_test_queue_suspension ... ignored
test tests::page_from_message_max_len_works ... ok
test tests::page_try_append_message_max_msg_len_works_works ... ok
test tests::page_from_message_basic_works ... ok
test tests::page_try_append_message_with_remaining_size_works_works ... ok
test tests::note_processed_at_pos_idempotent ... ok
test tests::page_try_append_message_basic_works ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::footprint_invalid_works ... ok
test tests::footprint_works ... ok
test tests::bump_service_head_trivial_works ... ok
test tests::footprint_on_swept_works ... ok
test tests::ready_ring_knit_basic_works ... ok
test tests::ready_ring_knit_and_unknit_works ... ok
test integration_test::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::service_page_item_consumes_correct_weight ... ok
test tests::enqueue_messages_works ... ok
test tests::enqueue_message_works ... ok
test tests::service_page_item_bails ... ok
test tests::queue_priority_reset_once_serviced ... ok
test tests::permanently_overweight_book_unknits ... ok
test tests::permanently_overweight_book_unknits_multiple ... ok
test tests::queue_priority_retains ... ok
test tests::enqueue_within_one_page_works ... ok
test tests::bump_service_head_works ... ok
test tests::service_page_item_skips_perm_overweight_message ... ok
test tests::bump_service_head_bails ... ok
test tests::bump_service_head_no_head_noops ... ok
test tests::execute_overweight_works ... ok
test tests::reap_page_permanent_overweight_works ... ok
test tests::service_page_bails ... ok
test tests::reaping_overweight_fails_properly ... ok
test tests::mocked_weight_works ... ok
test tests::sweep_queue_wraps_works ... ok
test tests::sweep_queue_works ... ok
test tests::service_queue_bails ... ok
test tests::sweep_queue_invalid_noops ... ok
test tests::service_queues_failing_messages_works ... ok
test tests::service_queues_suspension_works ... ok
test tests::service_queues_basic_works ... ok
test benchmarking::benchmarks::benchmark_tests::test_benchmarks ... ok
test tests::service_page_suspension_works ... ok
test tests::service_page_works ... ok
test tests::peek_index_works ... ok
test tests::peek_first_and_skip_first_works ... ok
test tests::is_complete_works ... ok
test tests::note_processed_at_pos_works ... ok

test result: ok. 46 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 1.22s

     Running unittests src/lib.rs (target/debug/deps/pallet_mmr-3f59a53fcec11dc0)

running 15 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::should_start_empty ... ok
test tests::should_append_to_mmr_when_on_initialize_is_called ... ok
test tests::should_construct_larger_mmr_correctly ... ok
test tests::verification_should_be_stateless ... ok
test tests::should_verify_on_the_next_block_since_there_is_no_pruning_yet ... ok
[2023-03-24T11:47:05Z ERROR runtime::mmr] [Error::GenerateProof] MMR error: InconsistentStore
test tests::does_not_panic_when_generating_historical_proofs ... ok
test tests::should_generate_batch_proof_correctly ... ok
test tests::should_verify_batch_proof_statelessly ... ok
test tests::should_verify ... ok
test tests::should_generate_proofs_correctly ... ok
test tests::should_calculate_the_size_correctly ... ok
test tests::should_verify_canonicalized ... ok
test benchmarking::bench_on_initialize ... ok
test tests::should_verify_batch_proofs ... ok

test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.96s

     Running unittests src/lib.rs (target/debug/deps/pallet_multisig-8c238dade3670f30)

running 24 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::too_many_signatories_fails ... ok
test tests::multisig_filters ... ok
test tests::minimum_threshold_check_works ... ok
test tests::cancel_multisig_returns_deposit ... ok
test tests::multisig_2_of_3_works ... ok
test tests::multisig_deposit_is_taken_and_returned ... ok
test tests::duplicate_approvals_are_ignored ... ok
test tests::multisig_2_of_3_as_multi_with_many_calls_works ... ok
test tests::cancel_multisig_works ... ok
test tests::multisig_handles_no_preimage_after_all_approve ... ok
test benchmarking::bench_approve_as_multi_approve ... ok
test tests::multisig_1_of_3_works ... ok
test tests::multisig_2_of_3_as_multi_works ... ok
test benchmarking::bench_cancel_as_multi ... ok
test tests::multisig_3_of_3_works ... ok
test benchmarking::bench_approve_as_multi_create ... ok
test tests::multisig_2_of_3_cannot_reissue_same_call ... ok
test tests::weight_check_works ... ok
test tests::timepoint_checking_works ... ok
test benchmarking::bench_as_multi_threshold_1 ... ok
test benchmarking::bench_as_multi_create ... ok
test benchmarking::bench_as_multi_approve ... ok
test benchmarking::bench_as_multi_complete ... ok

test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_nfts-195f2f1c03c10715)

running 83 tests
test benchmarking::bench_create ... ok
test benchmarking::bench_set_collection_metadata ... ok
test benchmarking::bench_force_create ... ok
test benchmarking::bench_set_accept_ownership ... ok
test benchmarking::bench_set_collection_max_supply ... ok
test benchmarking::bench_lock_collection ... ok
test benchmarking::bench_force_collection_config ... ok
test benchmarking::bench_set_attribute ... ok
test benchmarking::bench_clear_collection_metadata ... ok
test benchmarking::bench_burn ... ok
test benchmarking::bench_force_mint ... ok
test benchmarking::bench_force_collection_owner ... ok
test benchmarking::bench_lock_item_transfer ... ok
test benchmarking::bench_approve_transfer ... ok
test benchmarking::bench_mint ... ok
test benchmarking::bench_approve_item_attributes ... ok
test benchmarking::bench_force_set_attribute ... ok
test benchmarking::bench_clear_metadata ... ok
test benchmarking::bench_buy_item ... ok
test benchmarking::bench_cancel_approval ... ok
test benchmarking::bench_clear_all_transfer_approvals ... ok
test benchmarking::bench_create_swap ... ok
test benchmarking::bench_lock_item_properties ... ok
test benchmarking::bench_clear_attribute ... ok
test benchmarking::bench_pay_tips ... ok
test benchmarking::bench_claim_swap ... ok
test benchmarking::bench_cancel_swap ... ok
test tests::basic_setup_works ... ok
test tests::basic_minting_should_work ... ok
test benchmarking::bench_update_mint_settings ... ok
test benchmarking::bench_set_team ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_transfer ... ok
test benchmarking::bench_set_price ... ok
test benchmarking::bench_unlock_item_transfer ... ok
test benchmarking::bench_transfer_ownership ... ok
test tests::add_remove_item_attributes_approval_should_work ... ok
test tests::collection_locking_should_work ... ok
test tests::approval_deadline_works ... ok
test benchmarking::bench_set_metadata ... ok
test tests::cancel_approval_works_with_force ... ok
test tests::approving_multiple_accounts_works ... ok
test tests::create_cancel_swap_should_work ... ok
test tests::cancel_approval_works_with_admin ... ok
test tests::burn_works ... ok
test tests::group_roles_by_account_should_work ... ok
test tests::approval_lifecycle_works ... ok
test tests::destroy_with_bad_witness_should_not_work ... ok
test tests::approvals_limit_works ... ok
test tests::cancel_approval_works ... ok
test tests::destroy_should_work ... ok
test tests::locking_transfer_should_work ... ok
test tests::clear_all_transfer_approvals_works ... ok
test tests::force_update_collection_should_work ... ok
test tests::claim_swap_should_work ... ok
test tests::various_collection_settings ... ok
test tests::mint_settings_should_work ... ok
test tests::pay_tips_should_work ... ok
test tests::validate_deposit_required_setting ... ok
test tests::buy_item_should_work ... ok
test tests::pallet_level_feature_flags_should_work ... ok
test tests::set_collection_owner_attributes_should_work ... ok
test tests::max_supply_should_work ... ok
test tests::lifecycle_should_work ... ok
test tests::preserve_config_for_frozen_items ... ok
test tests::transfer_should_work ... ok
test tests::set_price_should_work ... ok
test tests::set_team_should_work ... ok
test tests::set_external_account_attributes_should_work ... ok
test tests::origin_guards_should_work ... ok
test tests::set_attribute_should_respect_lock ... ok
test tests::transfer_owner_should_work ... ok
test tests::set_collection_metadata_should_work ... ok
test tests::set_item_metadata_should_work ... ok
test tests::set_item_owner_attributes_should_work ... ok
test tests::mint_should_work ... ok
test tests::pre_signed_mints_should_work ... ok
test tests::pre_signed_attributes_should_work ... ok
test benchmarking::bench_mint_pre_signed ... ok
test benchmarking::bench_set_attributes_pre_signed ... ok
test benchmarking::bench_cancel_item_attributes_approval ... ok
test benchmarking::bench_redeposit ... ok
test benchmarking::bench_destroy ... ok

test result: ok. 83 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 14.20s

     Running unittests src/lib.rs (target/debug/deps/pallet_nfts_runtime_api-dde5ad110e32a041)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_nicks-7406c2eb1d26791e)

running 5 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::kill_name_should_work ... ok
test tests::normal_operation_should_work ... ok
test tests::force_name_should_work ... ok
test tests::error_catching_should_work ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_nis-93a970c2a5b7e8dc)

running 36 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_setup_works ... ok
test tests::enlarge_respects_amount_limit_and_will_split ... ok
test benchmarking::bench_process_queue ... ok
test tests::retract_single_item_queue_works ... ok
test tests::basic_enlarge_works ... ok
test tests::enlarge_respects_bids_limit ... ok
test benchmarking::bench_process_bid ... ok
test tests::place_bid_works ... ok
test tests::multiple_place_bids_works ... ok
test tests::enlargement_to_target_works ... ok
test benchmarking::bench_thaw_communal ... ok
test tests::retract_non_existent_item_fails ... ok
test benchmarking::bench_place_bid_max ... ok
test benchmarking::bench_place_bid ... ok
test tests::privatize_and_thaw_with_another_receipt_works ... ok
test tests::private_thaw_when_issuance_higher_works ... ok
test benchmarking::bench_retract_bid ... ok
test tests::place_bid_queuing_works ... ok
test tests::place_bid_fails_when_queue_full ... ok
test benchmarking::bench_process_queues ... ok
test benchmarking::bench_privatize ... ok
test benchmarking::bench_thaw_private ... ok
test tests::partial_thaw_works ... ok
test benchmarking::bench_communify ... ok
test benchmarking::bench_fund_deficit ... ok
test tests::basic_thaw_works ... ok
test tests::multiple_thaws_works_in_alternative_thaw_order ... ok
test tests::privatize_works ... ok
test tests::retract_with_other_and_duplicate_works ... ok
test tests::communify_works ... ok
test tests::multiple_thaws_works ... ok
test tests::communal_thaw_when_issuance_higher_works ... ok
test tests::thaw_when_issuance_lower_works ... ok
test tests::thaw_respects_transfers ... ok
test tests::thaw_with_ignored_issuance_works ... ok

test result: ok. 36 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/pallet_node_authorization-e37cc49d7d20bd7a)

running 11 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::get_authorized_nodes_works ... ok
test tests::reset_well_known_nodes_works ... ok
test tests::transfer_node_works ... ok
test tests::add_connections_works ... ok
test tests::claim_node_works ... ok
test tests::remove_connections_works ... ok
test tests::remove_well_known_node_works ... ok
test tests::remove_claim_works ... ok
test tests::swap_well_known_node_works ... ok
test tests::add_well_known_node_works ... ok

test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_nomination_pools-4950cf7550ece38a)

running 108 tests
test mock::test::balance_to_u256_convert_works ... ok
test mock::test::u256_to_balance_convert_works ... ok
test mock::test::u256_to_balance_convert_panics_correctly - should panic ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::bonded_pool::api_balance_to_points_works ... ok
test tests::bonded_pool::balance_to_point_works ... ok
test tests::bonded_pool::api_points_to_balance_works ... ok
test tests::bonded_pool::points_to_balance_works ... ok
test tests::bond_extra::bond_extra_from_rewards_creator ... ok
test tests::claim_payout::claim_payout_bounds_commission_above_global ... ok
test tests::claim_payout::do_reward_payout_works_with_a_pool_of_1 ... ok
test tests::bond_extra::bond_extra_from_free_balance_creator ... ok
test tests::bonded_pool::ok_to_join_with_works ... ok
test tests::claim_payout::rewards_distribution_is_fair_basic_with_fractions ... ok
test migration::v2::migration_assumption_is_correct ... ok
test tests::claim_payout::bond_extra_pending_rewards_works ... ok
test tests::claim_payout::rewards_distribution_is_fair_basic ... ok
test tests::bond_extra::bond_extra_from_rewards_joiner ... ok
test tests::claim_payout::join_updates_recorded_data ... ok
test tests::claim_payout::bond_extra_and_delayed_claim ... ok
test tests::claim_payout::bond_extra_updates_recorded_data ... ok
test tests::claim_payout::pending_rewards_per_member_works ... ok
test tests::claim_payout::do_reward_payout_works_with_a_pool_of_3 ... ok
test tests::claim_payout::rewards_distribution_is_fair_unbond ... ok
test tests::claim_payout::rewards_are_rounded_down_depositor_collects_them ... ok
test tests::claim_payout::create_sets_recorded_data ... ok
test tests::claim_payout::claim_payout_other_works ... ok
test tests::claim_payout::rewards_distribution_is_fair_3 ... ok
test tests::claim_payout::unbond_updates_recorded_data ... ok
test tests::claim_payout::claim_payout_large_numbers ... ok
test tests::claim_payout::rewards_distribution_is_fair_bond_extra ... ok
test tests::claim_payout::reward_payout_errors_if_a_member_is_fully_unbonding ... ok
test tests::claim_payout::unclaimed_reward_is_safe ... ok
test tests::commission::change_rate_does_not_apply_to_decreasing_commission ... ok
test tests::bond_extra::bond_extra_other ... ok
test tests::claim_payout::claim_payout_works ... ok
test tests::commission::commission_accumulates_on_multiple_rewards ... ok
test tests::join::join_works ... ok
test tests::reward_counter_precision::massive_reward_in_small_pool ... ok
test tests::pool_withdraw_unbonded::pool_withdraw_unbonded_works ... ok
[2mMar 24 12:47:23.456[0m [31mERROR[0m runtime: a defensive failure has been triggered; please report the block number at https://github.com/paritytech/substrate/issues: Defensive    
test tests::commission::do_reward_payout_with_100_percent_commission ... ok
test tests::reward_counter_precision::reward_counter_update_can_fail_if_pool_is_highly_slashed ... ok
test tests::commission::global_max_prevents_100_percent_commission_payout ... ok
test tests::commission::last_recorded_total_payouts_needs_commission ... ok
test tests::commission::commission_reward_counter_works_one_member ... ok
test tests::reward_pool::current_balance_only_counts_balance_over_existential_deposit ... ok
test tests::join::join_panics_when_reward_pool_not_found - should panic ... ok
test tests::commission::set_commission_change_rate_zero_min_delay_works ... ok
test tests::create::create_works ... ok
test tests::commission::set_commission_change_rate_zero_max_increase_works ... ok
test tests::commission::set_commission_change_rate_zero_value_works ... ok
test tests::commission::set_commission_max_to_zero_works ... ok
test tests::commission::claim_commission_works ... ok
test tests::reward_counter_precision::reward_counter_calc_wont_fail_in_normal_polkadot_future ... ok
test tests::commission::set_commission_change_rate_works_with_errors ... ok
test tests::commission::set_commission_works ... ok
test tests::commission::set_commission_max_works_with_error_tests ... ok
test tests::commission::do_reward_payout_with_various_commissions ... ok
test tests::set_claimable_actor_works ... ok
test tests::reward_counter_precision::if_small_member_waits_long_enough_they_will_earn_rewards ... ok
test tests::reward_counter_precision::zero_reward_claim_does_not_update_reward_counter ... ok
test tests::reward_counter_precision::smallest_claimable_reward ... ok
test tests::set_configs::set_configs_works ... ok
test tests::sub_pools::maybe_merge_pools_works ... ok
test tests::create::create_errors_correctly ... ok
test tests::unbond_pool::balance_to_unbond_works ... ok
test tests::nominate::nominate_works ... ok
test tests::create::create_with_pool_id_works ... ok
test tests::join::join_max_member_limits_are_respected ... ok
test tests::commission::set_commission_handles_errors ... ok
test tests::join::join_errors_correctly ... ok
test tests::set_state::set_state_works ... ok
test tests::test_setup_works ... ok
[2mMar 24 12:47:23.470[0m [31mERROR[0m runtime: a defensive failure has been triggered; please report the block number at https://github.com/paritytech/substrate/issues: DefensiveError::PoolNotFound    
test tests::unbond_pool::points_to_issue_works ... ok
[2mMar 24 12:47:23.471[0m [31mERROR[0m runtime: a defensive failure has been triggered; please report the block number at https://github.com/paritytech/substrate/issues: DefensiveError::PoolNotFound    
test tests::unbond::depositor_permissioned_partial_unbond ... ok
test tests::unbond::unbond_panics_when_reward_pool_not_found - should panic ... ok
test tests::unbond::unbond_merges_older_pools ... ok
test tests::unbond::unbond_of_1_works ... ok
test tests::unbond::unbond_errors_correctly - should panic ... ok
test tests::unbond::depositor_permissioned_partial_unbond_slashed ... ok
test tests::set_metadata::set_metadata_works ... ok
test tests::unbond::every_unbonding_triggers_payout ... ok
test tests::unbond::depositor_kick ... ok
test tests::unbond::partial_unbond_era_tracking ... ok
test tests::unbond::partial_unbond_max_chunks ... ok
test tests::unbond::depositor_unbond_destroying_last_member ... ok
test tests::withdraw_unbonded::out_of_sync_unbonding_chunks ... ok
test tests::unbond::depositor_unbond_destroying_permissionless ... ok
test tests::unbond::member_unbond_open ... ok
test tests::unbond::depositor_unbond_open ... ok
test tests::withdraw_unbonded::full_multi_step_withdrawing_non_depositor ... ok
test tests::unbond::unbond_of_3_works ... ok
test tests::update_roles::update_roles_works ... ok
test tests::withdraw_unbonded::withdraw_unbonded_handles_faulty_sub_pool_accounting ... ok
test tests::withdraw_unbonded::withdraw_unbonded_destroying_permissionless ... ok
test tests::unbond::unbond_kick_works ... ok
test tests::withdraw_unbonded::partial_withdraw_unbonded_depositor ... ok
test tests::unbond::member_unbond_destroying ... ok
test tests::unbond::member_kicked ... ok
test tests::withdraw_unbonded::partial_withdraw_unbonded_non_depositor ... ok
test tests::withdraw_unbonded::full_multi_step_withdrawing_depositor ... ok
test tests::unbond::depositor_unbond_destroying_not_last_member ... ok
test tests::withdraw_unbonded::withdraw_unbonded_errors_correctly ... ok
test tests::withdraw_unbonded::withdraw_unbonded_removes_claim_permissions_on_leave ... ok
test tests::withdraw_unbonded::withdraw_unbonded_kick ... ok
test tests::unbond::unbond_permissionless_works ... ok
test tests::withdraw_unbonded::withdraw_unbonded_works_against_slashed_with_era_sub_pools ... ok
test tests::withdraw_unbonded::withdraw_unbonded_works_against_slashed_no_era_sub_pool ... ok

test result: ok. 108 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

     Running unittests src/lib.rs (target/debug/deps/pallet_nomination_pools_benchmarking-8ce76d61ce4ca352)

running 23 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test bench_set_configs ... ok
test bench_claim_commission ... ok
test bench_set_commission ... ok
test bench_set_commission_change_rate ... ok
test bench_claim_payout ... ok
test bench_set_state ... ok
test bench_update_roles ... ok
test bench_create ... ok
test bench_chill ... ok
test bench_set_claim_permission ... ok
test bench_set_commission_max ... ok
test bench_bond_extra_transfer ... ok
test bench_bond_extra_other ... ok
test bench_join ... ok
test bench_unbond ... ok
test bench_set_metadata ... ok
test bench_withdraw_unbonded_kill ... ok
test bench_nominate ... ok
test bench_pool_withdraw_unbonded ... ok
test bench_withdraw_unbonded_update ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.24s

     Running unittests src/call.rs (target/debug/deps/call-ea0d4ea9fb8fb407)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_nomination_pools_runtime_api-358b6c5266e037da)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_nomination_pools_test_staking-1f22cd588effadae)

running 8 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test pool_slash_non_proportional_only_bonded_pool ... ok
test pool_slash_proportional ... ok
test pool_slash_non_proportional_bonded_pool_and_chunks ... ok
test pool_slash_e2e ... ok
test pool_lifecycle_e2e ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.22s

     Running unittests src/lib.rs (target/debug/deps/pallet_offences-f2d42d27e8b688b6)

running 10 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test migration::test::should_resubmit_deferred_offences ... ok
test tests::should_report_an_authority_and_trigger_on_offence ... ok
test tests::doesnt_deposit_event_for_dups ... ok
test tests::should_deposit_event ... ok
test tests::should_not_report_the_same_authority_twice_in_the_same_slot ... ok
test tests::should_report_in_different_time_slot ... ok
test tests::reports_if_an_offence_is_dup ... ok
test tests::should_properly_count_offences ... ok
test tests::should_properly_sort_offences ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_offences_benchmarking-f7b9b553a647162a)

running 6 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test bench_report_offence_grandpa ... ok
test bench_report_offence_babe ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test bench_report_offence_im_online ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 16.22s

     Running unittests src/lib.rs (target/debug/deps/pallet_preimage-415c218d8c523bb7)

running 31 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::requested_then_user_noted_preimage_is_free ... ok
test tests::manager_note_preimage_works ... ok
test tests::requested_then_noted_preimage_cannot_be_unnoted ... ok
test tests::query_preimage_request_works ... ok
test tests::manager_unnote_preimage_works ... ok
test tests::store_preimage_basic_works ... ok
test tests::query_and_store_preimage_workflow ... ok
test tests::query_preimage_hold_and_drop_work ... ok
test tests::unrequest_preimage_works ... ok
test tests::user_noted_then_requested_preimage_is_refunded_once_only ... ok
test tests::user_note_preimage_works ... ok
test tests::user_unnote_preimage_works ... ok
test tests::manager_unnote_user_preimage_works ... ok
test tests::request_user_note_order_makes_no_difference ... ok
test tests::request_note_order_makes_no_difference ... ok
test tests::store_preimage_note_too_large_errors ... ok
test tests::store_preimage_bound_too_large_errors ... ok
test tests::noted_preimage_use_correct_map ... ok
test benchmarking::bench_request_unnoted_preimage ... ok
test benchmarking::bench_request_requested_preimage ... ok
test benchmarking::bench_unnote_no_deposit_preimage ... ok
test benchmarking::bench_unrequest_preimage ... ok
test benchmarking::bench_request_preimage ... ok
test benchmarking::bench_request_no_deposit_preimage ... ok
test benchmarking::bench_unrequest_unnoted_preimage ... ok
test benchmarking::bench_unrequest_multi_referenced_preimage ... ok
test benchmarking::bench_unnote_preimage ... ok
test benchmarking::bench_note_preimage ... ok
test benchmarking::bench_note_requested_preimage ... ok
test benchmarking::bench_note_no_deposit_preimage ... ok

test result: ok. 31 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.21s

     Running unittests src/lib.rs (target/debug/deps/pallet_proxy-bdf11fd1382c203e)

running 23 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::announcer_must_be_proxy ... ok
test tests::calling_proxy_doesnt_remove_announcement ... ok
test tests::announcement_works ... ok
test tests::remove_announcement_works ... ok
test tests::cannot_add_proxy_without_balance ... ok
test tests::proxy_announced_removes_announcement_and_returns_deposit ... ok
test tests::delayed_requires_pre_announcement ... ok
test benchmarking::bench_remove_proxy ... ok
test tests::reject_announcement_works ... ok
test benchmarking::bench_remove_proxies ... ok
test tests::proxying_works ... ok
test benchmarking::bench_add_proxy ... ok
test benchmarking::bench_create_pure ... ok
test tests::add_remove_proxies_works ... ok
test benchmarking::bench_proxy ... ok
test benchmarking::bench_kill_pure ... ok
test tests::filtering_works ... ok
test tests::pure_works ... ok
test benchmarking::bench_announce ... ok
test benchmarking::bench_proxy_announced ... ok
test benchmarking::bench_reject_announcement ... ok
test benchmarking::bench_remove_announcement ... ok

test result: ok. 23 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_ranked_collective-cf8f5b441eb26d08)

running 18 tests
test tests::completed_poll_should_panic ... ignored
test tests::unknown_poll_should_panic ... ignored
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_stuff ... ok
test tests::member_lifecycle_works ... ok
test benchmarking::bench_add_member ... ok
test benchmarking::bench_vote ... ok
test tests::ensure_ranked_works ... ok
test tests::do_add_member_to_rank_works ... ok
test tests::add_remove_works ... ok
test tests::voting_works ... ok
test tests::promote_demote_works ... ok
test tests::cleanup_works ... ok
test benchmarking::bench_promote_member ... ok
test benchmarking::bench_demote_member ... ok
test benchmarking::bench_remove_member ... ok
test tests::promote_demote_by_rank_works ... ok
test benchmarking::bench_cleanup_poll ... ok

test result: ok. 16 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.06s

     Running unittests src/lib.rs (target/debug/deps/pallet_recovery-aec9cf1809f831a5)

running 24 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_setup_works ... ok
test tests::create_recovery_works ... ok
test benchmarking::bench_set_recovered ... ok
test tests::initiate_recovery_works ... ok
test tests::vouch_recovery_works ... ok
test tests::close_recovery_handles_basic_errors ... ok
test benchmarking::bench_as_recovered ... ok
test benchmarking::bench_cancel_recovered ... ok
test tests::set_recovered_works ... ok
test tests::claim_recovery_works ... ok
test tests::create_recovery_handles_basic_errors ... ok
test tests::initiate_recovery_handles_basic_errors ... ok
test tests::recovery_life_cycle_works ... ok
test tests::vouch_recovery_handles_basic_errors ... ok
test tests::remove_recovery_works ... ok
test tests::malicious_recovery_fails ... ok
test tests::claim_recovery_handles_basic_errors ... ok
test benchmarking::bench_initiate_recovery ... ok
test benchmarking::bench_create_recovery ... ok
test benchmarking::bench_close_recovery ... ok
test benchmarking::bench_remove_recovery ... ok
test benchmarking::bench_claim_recovery ... ok
test benchmarking::bench_vouch_recovery ... ok

test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

     Running unittests src/lib.rs (target/debug/deps/pallet_referenda-971eed3b39a220dc)

running 62 tests
test migration::test::referendum_status_v0 ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test migration::test::migration_v0_to_v1_works ... ok
test benchmarking::bench_submit ... ok
test benchmarking::bench_nudge_referendum_no_deposit ... ok
test benchmarking::bench_place_decision_deposit_preparing ... ok
test benchmarking::bench_nudge_referendum_timed_out ... ok
test benchmarking::bench_clear_metadata ... ok
test benchmarking::bench_set_some_metadata ... ok
test benchmarking::bench_place_decision_deposit_failing ... ok
test tests::alarm_interval_works ... ok
test tests::curve_handles_all_inputs ... ok
test benchmarking::bench_place_decision_deposit_passing ... ok
test benchmarking::bench_refund_submission_deposit ... ok
test benchmarking::bench_nudge_referendum_rejected ... ok
test benchmarking::bench_cancel ... ok
test benchmarking::bench_one_fewer_deciding_queue_empty ... ok
test benchmarking::bench_kill ... ok
test benchmarking::bench_nudge_referendum_begin_deciding_passing ... ok
test benchmarking::bench_nudge_referendum_end_confirming ... ok
test benchmarking::bench_nudge_referendum_preparing ... ok
test benchmarking::bench_nudge_referendum_begin_deciding_failing ... ok
test benchmarking::bench_nudge_referendum_begin_confirming ... ok
test benchmarking::bench_nudge_referendum_continue_confirming ... ok
test benchmarking::bench_nudge_referendum_approved ... ok
test benchmarking::bench_refund_decision_deposit ... ok
test benchmarking::bench_nudge_referendum_continue_not_confirming ... ok
test tests::auto_timeout_should_happen_with_nothing_but_submit ... ok
test benchmarking::bench_place_decision_deposit_queued ... ok
test benchmarking::bench_nudge_referendum_queued ... ok
test benchmarking::bench_nudge_referendum_requeued_slide ... ok
test benchmarking::bench_nudge_referendum_not_queued ... ok
test benchmarking::bench_one_fewer_deciding_failing ... ok
test benchmarking::bench_place_decision_deposit_not_queued ... ok
test benchmarking::bench_one_fewer_deciding_passing ... ok
test benchmarking::bench_nudge_referendum_requeued_insertion ... ok
test tests::set_balance_proposal_is_correctly_filtered_out ... ok
test types::tests::insert_sorted_works ... ok
test types::tests::check_curves - should panic ... ok
test tests::params_should_work ... ok
test tests::submit_errors_work ... ok
test tests::clear_metadata_works ... ok
test tests::cancel_works ... ok
test tests::confirming_then_fail_works ... ok
test tests::should_instafail_during_extension_confirmation ... ok
test tests::confirm_then_reconfirm_with_elapsed_trigger_works ... ok
test tests::instaconfirm_then_reconfirm_with_voting_trigger_works ... ok
test tests::insta_confirm_then_kill_works ... ok
test tests::tracks_are_distinguished ... ok
test tests::decision_deposit_errors_work ... ok
test tests::basic_happy_path_works ... ok
test tests::instaconfirm_then_reconfirm_with_elapsed_trigger_works ... ok
test tests::kill_errors_works ... ok
test tests::voting_should_extend_for_late_confirmation ... ok
test tests::kill_works ... ok
test tests::cancel_errors_works ... ok
test tests::refund_deposit_works ... ok
test tests::refund_submission_deposit_works ... ok
test tests::set_metadata_works ... ok
test tests::queueing_works ... ok
test types::tests::stepped_decreasing_works ... ok
test types::tests::translated_reciprocal_works ... ok

test result: ok. 62 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 7.42s

     Running unittests src/lib.rs (target/debug/deps/pallet_remark-cf06279e9637afde)

running 4 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::generates_event ... ok
test tests::does_not_store_empty ... ok
test benchmarking::bench_store ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_root_offences-40fdb10c53637859)

running 7 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::create_offence_fails_given_signed_origin ... ok
[2mMar 24 12:47:48.055[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:48.055[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
[2mMar 24 12:47:48.055[0m [31mERROR[0m runtime::timestamp: `pallet_timestamp::UnixTime::now` is called at genesis, invalid value returned: 0    
test tests::create_offence_wont_slash_idle ... ok
test tests::create_offence_works_given_root_origin ... ok
test tests::create_offence_wont_slash_non_active_validators ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.23s

     Running unittests src/lib.rs (target/debug/deps/pallet_root_testing-1205868e6ce1e8d8)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_salary-6c4f463f347d9557)

running 18 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::can_start ... ok
test tests::basic_stuff ... ok
test tests::registered_bankrupcy_fails_gracefully ... ok
test tests::retry_payment_later_without_bump_is_allowed ... ok
test tests::retry_registered_payment_works ... ok
test tests::zero_payment_fails ... ok
test tests::unregistered_bankrupcy_fails_gracefully ... ok
test tests::mixed_bankrupcy_fails_gracefully ... ok
test tests::induct_works ... ok
test tests::bump_works ... ok
test tests::other_mixed_bankrupcy_fails_gracefully ... ok
test tests::retry_payment_to_other_works ... ok
test tests::unregistered_payment_works ... ok
test tests::retry_payment_works ... ok
test tests::registered_payment_works ... ok
test tests::retry_payment_later_is_not_allowed ... ok
test benchmarking::benchmarks::benchmark_tests::test_benchmarks ... ok

test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_scheduler-89535ef2d1683299)

running 55 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::cancel_last_task_removes_agenda ... ok
test tests::reschedule_last_task_removes_agenda ... ok
test tests::cancel_named_last_task_removes_agenda ... ok
test tests::reschedule_named_last_task_removes_agenda ... ok
test tests::migration_to_v4_works ... ok
test tests::on_initialize_weight_is_correct ... ok
test benchmarking::bench_service_agendas_base ... ok
test benchmarking::bench_execute_dispatch_unsigned ... ok
test benchmarking::bench_service_task_named ... ok
test benchmarking::bench_execute_dispatch_signed ... ok
test tests::fails_to_schedule_task_in_the_past ... ok
test tests::cancel_named_scheduling_works_with_normal_cancel ... ok
test benchmarking::bench_service_task_base ... ok
test tests::schedule_after_zero_works ... ok
test tests::scheduler_does_not_delete_permanently_overweight_call ... ok
test tests::schedule_after_works ... ok
test benchmarking::bench_service_task_periodic ... ok
test tests::scheduler_v3_anon_reschedule_fills_holes ... ok
test tests::periodic_scheduling_works ... ok
test tests::basic_scheduling_works ... ok
test tests::cancel_named_periodic_scheduling_works ... ok
test tests::scheduler_respects_priority_ordering ... ok
test tests::root_calls_works ... ok
test tests::reschedule_named_perodic_works ... ok
test tests::scheduler_respects_priority_ordering_with_soft_deadlines ... ok
test tests::reschedule_named_works ... ok
test tests::reschedule_works ... ok
test benchmarking::bench_cancel_named ... ok
test tests::scheduler_v3_anon_reschedule_works ... ok
test tests::scheduler_respects_weight_limits ... ok
test tests::scheduler_v3_anon_cancel_and_schedule_fills_holes ... ok
test tests::scheduler_handles_periodic_failure ... ok
test benchmarking::bench_service_agenda_base ... ok
test tests::scheduler_v3_anon_basic_works ... ok
test tests::scheduler_v3_anon_reschedule_and_next_schedule_time_work ... ok
test tests::scheduler_v3_anon_next_schedule_time_works ... ok
test benchmarking::bench_cancel ... ok
test benchmarking::bench_schedule_named ... ok
test tests::scheduler_handles_periodic_unavailable_preimage ... ok
test benchmarking::bench_schedule ... ok
test tests::should_check_origin ... ok
test tests::test_migrate_origin ... ok
test tests::scheduler_v3_named_next_schedule_time_works ... ok
test tests::scheduler_v3_named_reschedule_named_works ... ok
test tests::scheduler_v3_anon_schedule_agenda_overflows ... ok
test tests::should_check_origin_for_cancel ... ok
test tests::scheduler_v3_anon_cancel_works ... ok
test tests::scheduler_v3_named_cancel_without_name_works ... ok
test tests::should_use_origin ... ok
test tests::scheduler_v3_named_basic_works ... ok
test tests::scheduling_with_preimages_works ... ok
test tests::scheduler_v3_named_cancel_named_works ... ok
test tests::postponed_named_task_cannot_be_rescheduled ... ok
test benchmarking::bench_service_task_fetched ... ok

test result: ok. 55 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s

     Running unittests src/lib.rs (target/debug/deps/pallet_scored_pool-81c9bf2dca9ff954)

running 18 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::query_membership_works ... ok
test tests::withdraw_candidacy_must_only_work_for_members ... ok
test tests::kicking_works_only_for_authorized ... ok
test tests::submit_candidacy_works ... ok
test tests::submit_candidacy_must_not_work ... ok
test tests::withdraw_unscored_candidacy_must_work ... ok
test tests::index_mismatches_should_abort ... ok
test tests::oob_index_should_abort ... ok
test tests::scoring_same_element_with_same_score_works ... ok
test tests::refreshing_works ... ok
test tests::candidacy_resubmitting_works ... ok
test tests::scoring_works ... ok
test tests::withdraw_scored_candidacy_must_work ... ok
test tests::kicking_works ... ok
test tests::refreshing_happens_every_period ... ok
test tests::unscored_entities_must_not_be_used_for_filling_members ... ok
test tests::pool_candidates_exceeded ... ok

test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_session-e17b23f5090d6f0a)

running 20 tests
test tests::periodic_session_works ... ok
test historical::offchain::tests::encode_decode_roundtrip ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::simple_setup_should_work ... ok
test tests::put_get_keys ... ok
test historical::offchain::tests::onchain_to_offchain ... ok
[2mMar 24 12:47:48.414[0m [31mERROR[0m runtime::system: Logic error: Unexpected underflow in reducing consumer    
test tests::keys_cleared_on_kill ... ok
test tests::session_keys_generate_output_works_as_set_keys_input ... ok
test tests::should_work_with_early_exit ... ok
test tests::disable_index_returns_false_if_already_disabled ... ok
test tests::test_migration_v1 ... ok
test historical::offchain::tests::historical_proof_offchain ... ok
test tests::upgrade_keys ... ok
test tests::authorities_should_track_validators ... ok
test historical::tests::generated_proof_is_good ... ok
test tests::duplicates_are_not_allowed ... ok
test tests::purge_keys_works_for_stash_id ... ok
test tests::session_change_should_work ... ok
test tests::session_changed_flag_works ... ok
test historical::tests::prune_up_to_works ... ok

test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

     Running unittests src/lib.rs (target/debug/deps/pallet_session_benchmarking-c8f7cb9ce7506599)

running 7 tests
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
[2mMar 24 12:47:48.455[0m [31mERROR[0m pallet_session_benchmarking: INFO: extra benchmark skipped - check_membership_proof_historical_session    
[2mMar 24 12:47:48.455[0m [31mERROR[0m pallet_session_benchmarking: INFO: extra benchmark skipped - check_membership_proof_current_session    
test bench_check_membership_proof_historical_session ... ok
test bench_check_membership_proof_current_session ... ok
test bench_purge_keys ... ok
test bench_set_keys ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.23s

     Running unittests src/lib.rs (target/debug/deps/pallet_society-95e331ceda7dbdd4)

running 27 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::slash_payout_multi_works ... ok
test tests::unbid_vouch_works ... ok
test tests::vouching_handles_removed_member_with_bid ... ok
test tests::basic_new_member_skeptic_works ... ok
test tests::basic_new_member_works ... ok
test tests::basic_new_member_reject_works ... ok
test tests::founding_works ... ok
test tests::bad_vote_slash_works ... ok
test tests::vouching_handles_removed_member_with_candidate ... ok
test tests::voucher_cannot_win_more_than_bid ... ok
test tests::unbidding_works ... ok
test tests::zero_bid_works ... ok
test tests::vouch_works ... ok
test tests::unfounding_works ... ok
test tests::user_cannot_bid_twice ... ok
test tests::unvouch_works ... ok
test tests::slash_payout_works ... ok
test tests::payout_works ... ok
test tests::bidding_works ... ok
test tests::challenges_work ... ok
test tests::votes_are_working ... ok
test tests::suspended_member_life_cycle_works ... ok
test tests::suspended_candidate_rejected_works ... ok
test tests::founder_and_head_cannot_be_removed ... ok
test tests::bids_ordered_correctly ... ok
test tests::max_limits_work ... ok

test result: ok. 27 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.42s

     Running unittests src/lib.rs (target/debug/deps/pallet_staking-c59cf6121de8a7c2)

running 161 tests
test benchmarking::bench_set_min_commission ... ok
test benchmarking::bench_force_no_eras ... ok
test benchmarking::bench_force_new_era_always ... ok
test benchmarking::bench_set_staking_configs_all_remove ... ok
test benchmarking::bench_set_staking_configs_all_set ... ok
test benchmarking::bench_set_validator_count ... ok
test benchmarking::bench_bond ... ok
test benchmarking::bench_set_payee ... ok
test benchmarking::bench_force_new_era ... ok
test benchmarking::bench_set_invulnerables ... ok
test benchmarking::bench_force_apply_min_commission ... ok
test benchmarking::bench_set_controller ... ok
test benchmarking::bench_validate ... ok
test inflation::test::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test slashing::tests::many_prior_spans ... ok
test inflation::test::npos_curve_is_sensible ... ok
test benchmarking::bench_chill ... ok
test benchmarking::bench_bond_extra ... ok
test slashing::tests::single_slashing_span ... ok
test slashing::tests::span_contains_era ... ok
test slashing::tests::ending_span ... ok
test slashing::tests::pruning_spans ... ok
test benchmarking::bench_unbond ... ok
test benchmarking::bench_chill_other ... ok
test benchmarking::bench_do_slash ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarking::bench_withdraw_unbonded_update ... ok
test tests::add_reward_points_fns_works ... ok
test tests::basic_setup_works ... ok
test tests::bond_extra_works ... ok
test tests::blocking_and_kicking_works ... ok
test benchmarking::bench_rebond ... ok
test tests::bond_with_duplicate_vote_should_be_ignored_by_election_provider_elected ... ok
test tests::bond_with_duplicate_vote_should_be_ignored_by_election_provider ... ok
test tests::cannot_bond_extra_to_lower_than_ed ... ok
test benchmarking::bench_reap_stash ... ok
test benchmarking::bench_cancel_deferred_slash ... ok
test benchmarking::bench_force_unstake ... ok
test benchmarking::bench_withdraw_unbonded_kill ... ok
test tests::bond_with_little_staked_value_bounded ... ok
test tests::bond_with_no_staked_value ... ok
test tests::cannot_reserve_staked_balance ... ok
test tests::cannot_set_unsupported_validator_count ... ok
test tests::bond_extra_and_withdraw_unbonded_works ... ok
test tests::cannot_rebond_to_lower_than_ed ... ok
test tests::cannot_transfer_staked_balance_2 ... ok
test tests::cannot_transfer_staked_balance ... ok
test tests::change_controller_works ... ok
test tests::dont_slash_if_fraction_is_zero ... ok
test tests::auto_withdraw_may_not_unlock_all_chunks ... ok
test tests::double_controlling_should_fail ... ok
[2mMar 24 12:47:49.200[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.201[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
test tests::election_data_provider::set_minimum_active_stake_zero_correct ... ok
test tests::election_data_provider::voters_2sec_block ... ok
test tests::count_check_works - should panic ... ok
test tests::disabled_validators_are_kept_disabled_for_whole_era ... ok
[2mMar 24 12:47:49.204[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.204[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.204[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 76, 25, 92, 185, 119, 49, 206, 125, 101, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.204[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 76, 25, 92, 185, 119, 49, 206, 125, 101, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 235, 95, 111, 74, 228, 239, 173, 201, 61, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 175, 78, 224, 83, 28, 218, 230, 17, 71, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 161, 50, 92, 214, 22, 144, 115, 51, 81, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.205[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 3, 159, 223, 136, 51, 126, 47, 3, 70, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.206[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 76, 25, 92, 185, 119, 49, 206, 125, 101, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.206[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 161, 50, 92, 214, 22, 144, 115, 51, 81, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.206[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 76, 25, 92, 185, 119, 49, 206, 125, 101, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.206[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 175, 78, 224, 83, 28, 218, 230, 17, 71, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
[2mMar 24 12:47:49.206[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 76, 25, 92, 185, 119, 49, 206, 125, 101, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }`    
[2mMar 24 12:47:49.206[0m [31mERROR[0m frame_support::storage: (key, value) failed to decode at [95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 156, 106, 99, 127, 98, 174, 42, 241, 199, 227, 30, 237, 126, 150, 190, 4, 235, 95, 111, 74, 228, 239, 173, 201, 61, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `Nominations::targets`" }    
test tests::election_data_provider::targets_2sec_block ... ok
test tests::deferred_slashes_are_deferred ... ok
test tests::election_data_provider::only_iterates_max_2_times_max_allowed_len ... ok
test tests::change_of_max_nominations ... ok
test tests::double_staking_should_fail ... ok
test tests::do_not_die_when_active_is_ed ... ok
test tests::election_data_provider::respects_snapshot_len_limits ... ok
test tests::election_data_provider::estimate_next_election_works ... ok
test tests::election_data_provider::set_minimum_active_stake_is_correct ... ok
test benchmarking::tests::create_validator_with_nominators_works ... ok
test tests::increase_validator_count_errors ... ok
test benchmarking::tests::add_slashing_spans_works ... ok
test tests::election_data_provider::voters_include_self_vote ... ok
test tests::force_apply_min_commission_works ... ok
test benchmarking::bench_nominate ... ok
test tests::capped_stakers_works ... ok
test tests::garbage_collection_after_slashing ... ok
test tests::force_unstake_works ... ok
test tests::kill_stash_works ... ok
test tests::invulnerables_are_not_slashed ... ok
test tests::less_than_needed_candidates_works ... ok
test tests::era_is_always_same_length ... ok
test tests::min_commission_works ... ok
test tests::forcing_new_era_works ... ok
test tests::garbage_collection_on_window_pruning ... ok
test tests::new_era_elects_correct_number_of_validators ... ok
test tests::non_slashable_offence_doesnt_disable_validator ... ok
test tests::min_bond_checks_work ... ok
test tests::offence_ensures_new_era_without_clobbering ... ok
test tests::nominating_and_rewards_should_work ... ok
test tests::proportional_ledger_slash_works ... ok
test tests::proportional_slash_stop_slashing_if_remaining_zero ... ok
test tests::on_finalize_weight_is_nonzero ... ok
test tests::offence_forces_new_era ... ok
test tests::nominators_also_get_slashed_pro_rata ... ok
test tests::offences_weight_calculated_correctly ... ok
test tests::payout_to_any_account_works ... ok
test tests::payout_creates_controller ... ok
test tests::only_slash_for_max_in_era ... ok
test tests::offence_threshold_triggers_new_era ... ok
test tests::reap_stash_works ... ok
test tests::offence_deselects_validator_even_when_slash_is_zero ... ok
test tests::rebond_emits_right_value_in_event ... ok
test tests::phragmen_should_not_overflow ... ok
test tests::rebond_is_fifo ... ok
test tests::no_candidate_emergency_condition ... ok
test tests::reporters_receive_their_slice ... ok
test tests::remove_multi_deferred ... ok
test tests::retroactive_deferred_slashes_one_before ... ok
test tests::rebond_works ... ok
test tests::reward_destination_works ... ok
test tests::reward_to_stake_works ... ok
test tests::retroactive_deferred_slashes_two_eras_before ... ok
test tests::reward_from_authorship_event_handler_works ... ok
test tests::reward_validator_slashing_validator_does_not_overflow ... ok
test tests::scale_validator_count_errors ... ok
test tests::remove_deferred ... ok
test tests::rewards_should_work ... ok
test tests::set_min_commission_works_with_admin_origin ... ok
test tests::session_and_eras_work_complex ... ok
test tests::session_and_eras_work_simple ... ok
test tests::session_buffering_with_offset ... ok
test tests::set_staking_configs_works ... ok
test tests::six_session_delay ... ok
test tests::session_buffering_no_offset ... ok
test tests::slash_kicks_validators_not_nominators_and_disables_nominator_for_kicked_validator ... ok
test tests::sorted_list_provider::re_validate_does_not_change_counters_or_list ... ok
test tests::slashing_independent_of_disabling_validator ... ok
test tests::slash_in_old_span_does_not_deselect ... ok
test tests::chill_other_works ... ok
test tests::slashes_are_summed_across_spans ... ok
test tests::slashing_performed_according_exposure ... ok
test tests::slashing_nominators_by_span_max ... ok
[2mMar 24 12:47:49.315[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 66, 42, 219, 87, 159, 29, 191, 79, 56, 134, 197, 207, 163, 187, 140, 196, 164, 245, 206, 214, 102, 137, 87, 187, 42, 154, 149, 78, 126, 80, 245, 181, 4, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `StakingLedger::unlocking`" }`    
test tests::sorted_list_provider::re_nominate_does_not_change_counters_or_list ... ok
[2mMar 24 12:47:49.319[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 66, 42, 219, 87, 159, 29, 191, 79, 56, 134, 197, 207, 163, 187, 140, 196, 164, 245, 206, 214, 102, 137, 87, 187, 42, 154, 149, 78, 126, 80, 245, 181, 4, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `StakingLedger::unlocking`" }`    
test tests::staking_interface::force_unstake_with_slash_works ... ok
test tests::reducing_max_unlocking_chunks_abrupt ... ok
test benchmarking::tests::create_validators_with_nominators_for_era_works ... ok
test tests::subsequent_reports_in_same_span_pay_out_less ... ok
test tests::staking_interface::do_withdraw_unbonded_with_wrong_slash_spans_works_as_expected ... ok
test tests::unbonded_balance_is_not_slashable ... ok
test tests::staker_cannot_bail_deferred_slash ... ok
test tests::wrong_vote_is_moot ... ok
test tests::validator_payment_prefs_work ... ok
test tests::switching_roles ... ok
test tests::zero_slash_keeps_nominators ... ok
test tests::staking_should_work ... ok
test tests::payout_stakers_handles_weight_refund ... ok
test benchmarking::tests::test_payout_all ... ok
test tests::test_max_nominator_rewarded_per_validator_and_cant_steal_someone_else_reward ... ok
test inflation::test::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test tests::bond_during_era_correctly_populates_claimed_rewards ... ok
test tests::many_unbond_calls_should_work ... ok
[2mMar 24 12:47:49.473[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 66, 42, 219, 87, 159, 29, 191, 79, 56, 134, 197, 207, 163, 187, 140, 196, 164, 245, 206, 214, 102, 137, 87, 187, 42, 154, 149, 78, 126, 80, 245, 181, 4, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `StakingLedger::claimed_rewards`" }`    
[2mMar 24 12:47:49.473[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 66, 42, 219, 87, 159, 29, 191, 79, 56, 134, 197, 207, 163, 187, 140, 196, 164, 245, 206, 214, 102, 137, 87, 187, 42, 154, 149, 78, 126, 80, 245, 181, 4, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `StakingLedger::claimed_rewards`" }`    
test benchmarking::bench_payout_stakers_alive_staked ... ok
test tests::pre_bonding_era_cannot_be_claimed ... ok
test benchmarking::bench_payout_stakers_dead_controller ... ok
test mock::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test tests::claim_reward_at_the_last_era_and_no_double_claim_and_invalid_claim ... ok
[2mMar 24 12:47:49.500[0m [31mERROR[0m runtime::storage: Corrupted state at `[95, 62, 73, 7, 247, 22, 172, 137, 182, 52, 125, 21, 236, 236, 237, 202, 66, 42, 219, 87, 159, 29, 191, 79, 56, 134, 197, 207, 163, 187, 140, 196, 164, 245, 206, 214, 102, 137, 87, 187, 42, 154, 149, 78, 126, 80, 245, 181, 4, 0, 0, 0, 0, 0, 0, 0]: Error { cause: Some(Error { cause: None, desc: "BoundedVec exceeds its limit" }), desc: "Could not decode `StakingLedger::claimed_rewards`" }`    
test tests::reducing_history_depth_abrupt ... ok
test benchmarking::bench_kick ... ok
test tests::test_payout_stakers ... ok
test benchmarking::bench_get_npos_targets ... ok
test tests::payout_stakers_handles_basic_errors ... ok
test benchmarking::bench_new_era ... ok
test benchmarking::bench_payout_all ... ok
test benchmarking::bench_get_npos_voters ... ok

test result: ok. 161 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.56s

     Running unittests src/lib.rs (target/debug/deps/pallet_staking_reward_curve-0e6d6bcbcad7e102)

running 6 tests
test log::test_log_of_largest_input ... ok
test log::test_log_of_one_boundary ... ok
test log::test_log_p_must_be_greater_than_q - should panic ... ok
test log::test_log_p_upper_bound - should panic ... ok
test log::test_log_q_limit - should panic ... ok
test log::test_log ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.14s

     Running tests/test.rs (target/debug/deps/test-ffffc245b2121185)

running 4 tests
test test_big_falloff::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test test_small_falloff::__pallet_staking_reward_curve_test_module::reward_curve_piece_count ... ok
test test_big_falloff::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok
test test_small_falloff::__pallet_staking_reward_curve_test_module::reward_curve_precision ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.59s

     Running unittests src/lib.rs (target/debug/deps/pallet_staking_reward_fn-9b90a0ed255a556e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/test.rs (target/debug/deps/test-3cbfab0e555fefb4)

running 2 tests
test test_precision_for_minimum_falloff ... ok
test compute_inflation_works ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 6.33s

     Running unittests src/lib.rs (target/debug/deps/pallet_staking_runtime_api-d6c4754162d22a36)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_state_trie_migration-291de5d40440569f)

running 17 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test benchmarks::bench_continue_migrate_wrong_witness ... ok
test benchmarks::bench_continue_migrate ... ok
test benchmarks::bench_migrate_custom_child_success ... ok
[2mMar 24 12:47:57.765[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migrate_until_exhaustion failed: KeyTooLong    
[2mMar 24 12:47:57.765[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migrate_until_exhaustion failed: KeyTooLong    
[2mMar 24 12:47:57.766[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migration halted due to: KeyTooLong    
[2mMar 24 12:47:57.766[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migration halted due to: KeyTooLong    
test benchmarks::bench_migrate_custom_child_fail ... ok
[2mMar 24 12:47:57.766[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migrate_until_exhaustion failed: KeyTooLong    
[2mMar 24 12:47:57.766[0m [31mERROR[0m runtime::state-trie-migration: [1] 🤖 migrate_until_exhaustion failed: KeyTooLong    
test benchmarks::bench_migrate_custom_top_success ... ok
test test::halts_if_child_key_too_long ... ok
test benchmarks::bench_migrate_custom_top_fail ... ok
test test::halts_if_top_key_too_long ... ok
test test::custom_migrate_top_works ... ok
test test::signed_migrate_works ... ok
test test::custom_migrate_child_works ... ok
test test::fails_if_no_migration ... ok
test test::detects_value_in_first_child_key ... ok
test test::detects_value_in_empty_top_key ... ok
test benchmarks::bench_process_top_key ... ok
test test::auto_migrate_works ... ok

test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.26s

     Running unittests src/lib.rs (target/debug/deps/pallet_sudo-1fd8214e043baea2)

running 10 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::test_setup_works ... ok
test tests::set_key_emits_events_correctly ... ok
test tests::sudo_unchecked_weight_emits_events_correctly ... ok
test tests::sudo_as_emits_events_correctly ... ok
test tests::sudo_emits_events_correctly ... ok
test tests::set_key_basics ... ok
test tests::sudo_unchecked_weight_basics ... ok
test tests::sudo_basics ... ok
test tests::sudo_as_basics ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_template-3056466e0c1d8d50)

running 4 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::it_works_for_default_value ... ok
test tests::correct_error_for_none_value ... ok
test benchmarking::bench_do_something ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_timestamp-4b7772b46ea19d05)

running 6 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::timestamp_works ... ok
test benchmarking::bench_on_finalize ... ok
test benchmarking::bench_set ... ok
test tests::block_period_minimum_enforced - should panic ... ok
test tests::double_timestamp_should_fail - should panic ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/pallet_tips-f142c24ac6051833)

running 20 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::genesis_funding_works ... ok
test tests::genesis_config_works ... ok
test tests::test_last_reward_migration ... ok
test tests::tip_median_calculation_works ... ok
test tests::tip_changing_works ... ok
test tests::report_awesome_from_beneficiary_and_tip_works ... ok
test tests::tip_new_cannot_be_used_twice ... ok
test tests::slash_tip_works ... ok
test tests::test_migration_v4 ... ok
test benchmarking::bench_retract_tip ... ok
test benchmarking::bench_tip ... ok
test tests::retract_tip_works ... ok
test benchmarking::bench_report_awesome ... ok
test tests::close_tip_works ... ok
test tests::report_awesome_and_tip_works ... ok
test tests::report_awesome_and_tip_works_second_instance ... ok
test benchmarking::bench_slash_tip ... ok
test benchmarking::bench_close_tip ... ok
test benchmarking::bench_tip_new ... ok

test result: ok. 20 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_transaction_payment-315196925544eb87)

running 24 tests
test types::tests::should_serialize_and_deserialize_properly_with_string ... ok
test types::tests::should_serialize_and_deserialize_properly_large_value ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::compute_fee_works_with_multiplier ... ok
test tests::compute_fee_works_with_negative_multiplier ... ok
test tests::compute_fee_works_without_multiplier ... ok
test tests::compute_fee_does_not_overflow ... ok
test tests::signed_extension_allows_free_transactions ... ok
test tests::genesis_default_works ... ok
test tests::query_info_and_fee_details_works ... ok
test tests::signed_ext_length_fee_is_also_updated_per_congestion ... ok
test tests::genesis_config_works ... ok
test tests::zero_transfer_on_free_transaction ... ok
test tests::query_call_info_and_fee_details_works ... ok
test tests::signed_extension_transaction_payment_multiplied_refund_works ... ok
test tests::signed_extension_transaction_payment_is_bounded ... ok
test tests::post_info_can_change_pays_fee ... ok
test tests::actual_weight_higher_than_max_refunds_nothing ... ok
test tests::refund_consistent_with_actual_weight ... ok
test tests::signed_extension_transaction_payment_work ... ok
test tests::refund_does_not_recreate_account ... ok
test tests::no_tip_has_some_priority ... ok
test tests::should_alter_operational_priority ... ok
test tests::higher_tip_have_higher_priority ... ok

test result: ok. 24 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/pallet_transaction_payment_rpc-7a38d32bd102fff6)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_transaction_payment_rpc_runtime_api-cb0b0967bf7678f8)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/pallet_transaction_storage-9a0ee50f7bec8e93)

running 8 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::burns_fee ... ok
test tests::discards_data ... ok
test tests::renews_data ... ok
test benchmarking::bench_renew ... ok
test benchmarking::bench_store ... ok
test tests::checks_proof ... ok
test benchmarking::bench_check_proof_max has been running for over 60 seconds
test benchmarking::bench_check_proof_max ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 60.59s

     Running unittests src/lib.rs (target/debug/deps/pallet_treasury-2645daaa1d337d46)

running 29 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::genesis_funding_works ... ok
test tests::genesis_config_works ... ok
test tests::spend_proposal_takes_proportional_deposit ... ok
test tests::reject_non_existent_spend_proposal_fails ... ok
test tests::spend_origin_permissioning_works ... ok
test tests::accept_non_existent_spend_proposal_fails ... ok
test tests::minting_works ... ok
test tests::accepted_spend_proposal_ignored_outside_spend_period ... ok
test tests::spend_proposal_fails_when_proposer_poor ... ok
test tests::spend_proposal_takes_min_deposit ... ok
test tests::spending_in_batch_respects_max_total ... ok
test tests::unused_pot_should_diminish ... ok
test tests::pot_underflow_should_not_diminish ... ok
test tests::rejected_spend_proposal_ignored_on_spend_period ... ok
test tests::accepted_spend_proposal_enacted_on_spend_period ... ok
test tests::treasury_account_doesnt_get_deleted ... ok
test tests::inexistent_account_works ... ok
test tests::spend_origin_works ... ok
test benchmarking::bench_remove_approval ... ok
test benchmarking::bench_propose_spend ... ok
test benchmarking::bench_spend ... ok
test benchmarking::bench_reject_proposal ... ok
test tests::accept_already_rejected_spend_proposal_fails ... ok
test tests::reject_already_rejected_spend_proposal_fails ... ok
test tests::remove_already_removed_approval_fails ... ok
test tests::max_approvals_limited ... ok
test benchmarking::bench_approve_proposal ... ok
test benchmarking::bench_on_initialize_proposals ... ok

test result: ok. 29 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.12s

     Running unittests src/lib.rs (target/debug/deps/pallet_uniques-72085f000ad47796)

running 52 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::basic_setup_works ... ok
test tests::basic_minting_should_work ... ok
test benchmarking::bench_force_create ... ok
test benchmarking::bench_set_attribute ... ok
test benchmarking::bench_set_metadata ... ok
test benchmarking::bench_set_accept_ownership ... ok
test benchmarking::bench_thaw_collection ... ok
test benchmarking::bench_set_collection_max_supply ... ok
test benchmarking::bench_set_team ... ok
test benchmarking::bench_freeze_collection ... ok
test benchmarking::bench_thaw ... ok
test benchmarking::bench_set_price ... ok
test benchmarking::bench_buy_item ... ok
test benchmarking::bench_burn ... ok
test benchmarking::bench_create ... ok
test benchmarking::bench_transfer ... ok
test benchmarking::bench_approve_transfer ... ok
test benchmarking::bench_cancel_approval ... ok
test benchmarking::bench_mint ... ok
test benchmarking::bench_freeze ... ok
test benchmarking::bench_set_collection_metadata ... ok
test benchmarking::bench_transfer_ownership ... ok
test tests::approved_account_gets_reset_after_transfer ... ok
test tests::approved_account_gets_reset_after_buy_item ... ok
test benchmarking::bench_clear_metadata ... ok
test benchmarking::bench_clear_collection_metadata ... ok
test tests::approval_lifecycle_works ... ok
test benchmarking::bench_force_item_status ... ok
test benchmarking::bench_clear_attribute ... ok
test tests::burn_works ... ok
test tests::set_attribute_should_respect_freeze ... ok
test tests::set_team_should_work ... ok
test tests::mint_should_work ... ok
test tests::set_price_should_work ... ok
test tests::destroy_with_bad_witness_should_not_work ... ok
test tests::lifecycle_should_work ... ok
test tests::cancel_approval_works ... ok
test tests::cancel_approval_works_with_admin ... ok
test tests::transfer_should_work ... ok
test tests::freezing_should_work ... ok
test tests::force_item_status_should_work ... ok
test tests::max_supply_should_work ... ok
test tests::buy_item_should_work ... ok
test tests::set_collection_metadata_should_work ... ok
test tests::cancel_approval_works_with_force ... ok
test tests::set_attribute_should_work ... ok
test tests::transfer_owner_should_work ... ok
test tests::set_item_metadata_should_work ... ok
test tests::origin_guards_should_work ... ok
test benchmarking::bench_redeposit ... ok
test benchmarking::bench_destroy ... ok

test result: ok. 52 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 4.62s

     Running unittests src/lib.rs (target/debug/deps/pallet_utility-f43fd4a8fe93437e)

running 29 tests
test tests::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::batch_weight_calculation_doesnt_overflow ... ok
test tests::with_weight_works ... ok
test tests::batch_all_works_with_council_origin ... ok
test tests::force_batch_doesnt_work_with_inherents ... ok
test tests::as_derivative_filters ... ok
test tests::batch_doesnt_work_with_inherents ... ok
test tests::batch_with_signed_filters ... ok
test tests::batch_all_doesnt_work_with_inherents ... ok
test benchmarking::bench_as_derivative ... ok
test tests::as_derivative_handles_weight_refund ... ok
test tests::batch_early_exit_works ... ok
test tests::batch_works_with_council_origin ... ok
test tests::batch_with_signed_works ... ok
test tests::none_origin_does_not_work ... ok
test tests::batch_all_revert ... ok
test tests::force_batch_works_with_council_origin ... ok
test tests::batch_with_root_works ... ok
test tests::batch_all_handles_weight_refund ... ok
test tests::batch_all_does_not_nest ... ok
test tests::batch_handles_weight_refund ... ok
test tests::as_derivative_works ... ok
test tests::force_batch_works ... ok
test benchmarking::bench_dispatch_as ... ok
test tests::batch_all_works ... ok
test tests::batch_limit ... ok
test benchmarking::bench_batch ... ok
test benchmarking::bench_force_batch ... ok
test benchmarking::bench_batch_all ... ok

test result: ok. 29 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

     Running unittests src/lib.rs (target/debug/deps/pallet_vesting-0fb4bb1951cfe2de)

running 42 tests
test tests::per_block_works ... ok
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::multiple_schedules_from_genesis_config_errors - should panic ... ok
test tests::build_genesis_has_storage_version_v1 ... ok
test tests::merge_vesting_handles_per_block_0 ... ok
test tests::liquid_funds_should_transfer_with_delayed_vesting ... ok
test tests::merge_ongoing_schedules ... ok
test tests::unvested_balance_should_not_transfer ... ok
test tests::vested_balance_should_transfer ... ok
test tests::non_vested_cannot_vest ... ok
test tests::merge_finishing_schedules_does_not_create_a_new_one ... ok
test tests::check_vesting_status_for_multi_schedule_account ... ok
test tests::extra_balance_should_transfer ... ok
test tests::check_vesting_status ... ok
test tests::merging_shifts_other_schedules_index ... ok
test tests::merge_ongoing_and_yet_to_be_started_schedules ... ok
test tests::merge_finished_and_ongoing_schedules ... ok
test tests::generates_multiple_schedules_from_genesis_config ... ok
test tests::merge_finished_and_yet_to_be_started_schedules ... ok
test tests::force_vested_transfer_correctly_fails ... ok
test tests::force_vested_transfer_works ... ok
test tests::non_vested_cannot_vest_other ... ok
test tests::vesting_info_ending_block_as_balance_works ... ok
test tests::merge_schedules_that_have_not_started ... ok
test tests::vesting_info_validate_works ... ok
test tests::force_vested_transfer_allows_max_schedules ... ok
test tests::merge_schedules_throws_proper_errors ... ok
test tests::vested_balance_should_transfer_using_vest_other_with_multi_sched ... ok
test tests::vested_balance_should_transfer_using_vest_other ... ok
test tests::vested_transfer_correctly_fails ... ok
test tests::vested_transfer_less_than_existential_deposit_fails ... ok
test tests::vested_transfer_works ... ok
test tests::vested_balance_should_transfer_with_multi_sched ... ok
test tests::vested_transfer_allows_max_schedules ... ok
test benchmarking::bench_vest_other_unlocked ... ok
test benchmarking::bench_vest_unlocked ... ok
test benchmarking::bench_vest_other_locked ... ok
test benchmarking::bench_not_unlocking_merge_schedules ... ok
test benchmarking::bench_force_vested_transfer ... ok
test benchmarking::bench_vested_transfer ... ok
test benchmarking::bench_vest_locked ... ok
test benchmarking::bench_unlocking_merge_schedules ... ok

test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

     Running unittests src/lib.rs (target/debug/deps/pallet_whitelist-d9d3ad08299134db)

running 10 tests
test mock::__construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::test_whitelist_call_and_execute_failing_call ... ok
test benchmarking::bench_remove_whitelisted_call ... ok
test tests::test_whitelist_call_and_execute_decode_consumes_all ... ok
test tests::test_whitelist_call_and_execute_without_note_preimage ... ok
test benchmarking::bench_whitelist_call ... ok
test tests::test_whitelist_call_and_remove ... ok
test benchmarking::bench_dispatch_whitelisted_call_with_preimage ... ok
test tests::test_whitelist_call_and_execute ... ok
test benchmarking::bench_dispatch_whitelisted_call ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.07s

     Running unittests src/lib.rs (target/debug/deps/sc_allocator-807781bac4e8357b)

running 25 tests
test freeing_bump::tests::deallocate_needs_to_maintain_linked_list ... ok
test freeing_bump::tests::doesnt_accept_shrinking_memory ... ok
test freeing_bump::tests::header_read_write ... ok
test freeing_bump::tests::should_allocate_properly ... ok
test freeing_bump::tests::should_always_align_pointers_to_multiples_of_8 ... ok
test freeing_bump::tests::poison_oom ... ok
test freeing_bump::tests::should_build_linked_list_of_free_areas_properly ... ok
test freeing_bump::tests::should_calculate_total_heap_size_to_zero ... ok
test freeing_bump::tests::should_calculate_total_size_of_zero ... ok
test freeing_bump::tests::should_deallocate_and_reallocate_properly ... ok
test freeing_bump::tests::should_free_properly ... ok
test freeing_bump::tests::should_get_item_size_from_order ... ok
test freeing_bump::tests::should_get_max_item_size_from_index ... ok
test freeing_bump::tests::should_include_prefixes_in_total_heap_size ... ok
test freeing_bump::tests::should_increment_pointers_properly ... ok
test freeing_bump::tests::should_not_allocate_if_full ... ok
test freeing_bump::tests::should_not_allocate_if_requested_size_too_large ... ok
test freeing_bump::tests::should_not_allocate_if_too_large ... ok
test freeing_bump::tests::should_read_and_write_u64_correctly ... ok
test freeing_bump::tests::test_n_orders ... ok
test freeing_bump::tests::test_pages_from_size ... ok
test freeing_bump::tests::should_return_error_when_bumper_greater_than_heap_size ... ok
test freeing_bump::tests::accepts_growing_memory ... ok
test freeing_bump::tests::should_grow_memory_when_running_out_of_memory ... ok
test freeing_bump::tests::should_allocate_max_possible_allocation_size ... ok

test result: ok. 25 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.32s

     Running unittests src/lib.rs (target/debug/deps/sc_authority_discovery-3615304aed82b005)

running 21 tests
test worker::addr_cache::tests::adding_two_authority_ids_for_the_same_peer_id ... ok
test tests::cryptos_are_compatible ... ok
test worker::tests::terminate_when_event_stream_terminates ... ok
test worker::tests::addresses_to_publish_respects_existing_p2p_protocol ... ok
test worker::tests::addresses_to_publish_adds_p2p ... ok
test worker::tests::new_registers_metrics ... ok
test worker::schema::tests::v2_decodes_v1 ... ok
test worker::schema::tests::v1_decodes_v2 ... ok
test worker::tests::triggers_dht_get_query ... ok
test worker::addr_cache::tests::keeps_consistency_between_authority_id_and_peer_id ... ok
test worker::addr_cache::tests::retains_only_entries_of_provided_authority_ids ... ok
test tests::get_addresses_and_authority_id ... ok
test worker::tests::reject_address_without_peer_signature ... ok
test worker::tests::reject_address_with_rogue_peer_signature ... ok
test worker::tests::reject_address_with_invalid_peer_signature ... ok
test worker::tests::do_not_cache_addresses_without_peer_id ... ok
test worker::tests::limit_number_of_addresses_added_to_cache_per_authority ... ok
test worker::tests::dont_stop_polling_dht_event_stream_after_bogus_event ... ok
test worker::tests::strict_accept_address_with_peer_signature ... ok
test worker::tests::publish_discover_cycle ... ok
test worker::tests::lookup_throttling ... ok

test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.71s

     Running unittests src/lib.rs (target/debug/deps/sc_basic_authorship-966bf680b80cc709)

running 7 tests
test basic_authorship::tests::should_not_panic_when_deadline_is_reached ... ok
test basic_authorship::tests::proposed_storage_changes_should_match_execute_block_storage_changes ... ok
test basic_authorship::tests::should_cease_building_block_when_deadline_is_reached ... ok
test basic_authorship::tests::should_cease_building_block_when_block_limit_is_reached ... ok
test basic_authorship::tests::should_not_remove_invalid_transactions_when_skipping ... ok
test basic_authorship::tests::should_only_skip_up_to_some_limit_after_soft_deadline ... ok
test basic_authorship::tests::should_keep_adding_transactions_after_exhausts_resources_before_soft_deadline ... ok

test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.67s

     Running unittests src/lib.rs (target/debug/deps/sc_block_builder-01c3c8b9a97ccd4b)

running 1 test
test tests::block_building_storage_proof_does_not_include_runtime_by_default ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.98s

     Running unittests src/lib.rs (target/debug/deps/sc_chain_spec-b9bb5de9e42b0572)

running 4 tests
test extension::tests::forks_should_work_correctly ... ok
test chain_spec::tests::should_deserialize_chain_spec_with_extensions ... ok
test chain_spec::tests::should_deserialize_example_chain_spec ... ok
test chain_spec::tests::chain_spec_raw_output_should_be_deterministic ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/sc_chain_spec_derive-3adeb9cb00bf2653)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_cli-4db8cf435c14c3a4)

running 41 tests
test commands::vanity::tests::test_score_1_char_100 ... ok
test commands::vanity::tests::test_score_0 ... ok
test commands::vanity::tests::test_score_50_2 ... ok
test commands::vanity::tests::test_score_100 ... ok
test params::node_key_params::tests::test_node_key_config_default ... ok
test params::tests::parse_block_hash_fails ... ok
test params::tests::parse_block_number ... ok
test params::node_key_params::tests::test_node_key_config_input ... ok
test params::tests::parse_block_number_fails ... ok
test params::tests::parse_block_hash ... ok
test params::message_params::tests::message_decode_immediate ... ok
test params::message_params::tests::message_decode_stream ... ok
test params::node_key_params::tests::test_node_key_config_file ... ok
test commands::inspect_key::tests::inspect_public_key ... ok
test params::network_params::tests::sync_ingores_case ... ok
test params::network_params::tests::reserved_nodes_multiple_values_and_occurrences ... ok
test commands::run_cmd::tests::tests_node_name_good ... ok
test commands::generate_node_key::tests::generate_node_key ... ok
test commands::inspect_node_key::tests::inspect_node_key ... ok
test commands::run_cmd::tests::tests_node_name_bad ... ok
test runner::tests::ensure_run_until_exit_informs_tasks_to_end ... ok
test commands::verify::test::verify_immediate_hex ... ok
test commands::verify::test::verify_stdin ... ok
test commands::verify::test::verify_immediate ... ok
test commands::verify::test::verify_stdin_hex ... ok
test commands::vanity::tests::vanity ... ok
test commands::sign::test::sign_arg ... ok
test commands::sign::test::sign_stdin ... ok
test commands::test::sig_verify::sig_verify_stdin_invalid_utf8_work ... ok
test commands::test::sig_verify::sig_verify_stdin_hex_work ... ok
test commands::test::sig_verify::sig_verify_arg_hex_work ... ok
test commands::test::sig_verify::sig_verify_stdin_utf8_work ... ok
test commands::test::sig_verify::sig_verify_arg_utf8_work ... ok
test commands::inspect_key::tests::inspect ... ok
test commands::generate::tests::generate ... ok
test commands::insert_key::tests::insert_with_custom_base_path ... ok
test commands::test::sig_verify::sig_verify_stdin_non_utf8_work ... ok
test commands::vanity::tests::test_generation_with_single_char ... ok
test commands::vanity::tests::generate_key_respects_network_override ... ok
test commands::inspect_key::tests::inspect_with_expected_public_key ... ok
test runner::tests::ensure_run_until_exit_is_not_blocking_indefinitely has been running for over 60 seconds
test runner::tests::ensure_run_until_exit_is_not_blocking_indefinitely ... ok

test result: ok. 41 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 60.01s

     Running unittests src/lib.rs (target/debug/deps/sc_client_api-a28a389ef258ce0d)

running 13 tests
test leaves::tests::two_leaves_same_height_can_be_included ... ok
test leaves::tests::removal_works ... ok
test leaves::tests::finalization_works ... ok
test leaves::tests::import_works ... ok
test leaves::tests::finalization_consistent_with_disk ... ok
test leaves::tests::flush_to_disk ... ok
test in_mem::tests::store_duplicate_justifications_is_forbidden ... ok
test in_mem::tests::append_and_retrieve_justifications ... ok
test notifications::tests::should_cleanup_subscriber_if_stream_is_dropped ... ok
test notifications::tests::should_not_send_empty_notifications ... ok
test notifications::tests::should_cleanup_subscribers_if_dropped ... ok
test notifications::tests::triggering_change_should_notify_wildcard_listeners ... ok
test notifications::tests::should_only_notify_interested_listeners ... ok

test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_client_db-2dd9154c3a0992ec)

running 49 tests
test offchain::tests::should_compare_and_set_and_clear_the_locks_map ... ok
test offchain::tests::should_compare_and_set_on_empty_field ... ok
test children::tests::children_write_read_remove ... ok
test tests::test_aux ... ok
test bench::test::iteration_is_also_counted_in_rw_counts ... ok
test bench::test::read_to_main_and_child_tries ... ok
test tests::index_invalid_size ... ok
test tests::test_finalize_block_with_justification ... ok
test tests::test_append_justification_to_finalized_block ... ok
test tests::storage_hash_is_cached_correctly ... ok
test tests::test_import_existing_block_as_final ... ok
test tests::test_finalize_non_sequential ... ok
test tests::test_import_existing_state_fails ... ok
test tests::test_no_duplicated_leaves_allowed ... ok
test utils::tests::database_type_as_str_works ... ok
test tests::indexed_data_block_body ... ok
test utils::tests::number_index_key_doesnt_panic ... ok
test tests::test_leaves_not_created_for_ancient_blocks ... ok
test utils::tests::join_input_works ... ok
test tests::tree_route_child ... ok
test upgrade::tests::downgrade_never_happens ... ok
test tests::remove_leaf_block_works ... ok
test tests::lowest_common_ancestor_works ... ok
test tests::delete_only_when_negative_rc ... ok
test tests::revert_non_best_blocks ... ok
test tests::test_leaves_pruned_on_finality ... ok
test tests::test_finalize_multiple_blocks_in_single_op ... ok
test tests::block_hash_inserted_correctly ... ok
test tests::prune_blocks_on_finalize_and_reorg ... ok
test tests::test_import_existing_block_as_new_head ... ok
test tests::set_state_data ... ok
test tests::tree_route_works ... ok
test tests::test_pinned_blocks_on_finalize_with_fork ... ok
test tests::test_pinned_blocks_on_finalize ... ok
test tests::force_delayed_canonicalize_waiting_for_blocks_to_be_finalized ... ok
test tests::renew_transaction_storage ... ok
test tests::prune_blocks_on_finalize ... ok
test tests::prune_blocks_on_finalize_with_fork ... ok
test upgrade::tests::open_empty_database_works ... ok
test utils::tests::test_open_database_auto_new ... ok
test utils::tests::test_open_database_paritydb_new ... ok
test utils::tests::test_open_database_rocksdb_new ... ok
test utils::tests::database_type_subdir_migration ... ok
test upgrade::tests::upgrade_to_3_works ... ok
test upgrade::tests::upgrade_to_4_works ... ok
test tests::test_blockchain_query_by_number_gets_canonical ... ok
test tests::test_children_with_complex_block_tree ... ok
test tests::test_leaves_with_complex_block_tree ... ok
test tests::test_tree_route_regression ... ok

test result: ok. 49 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.39s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus-6fb3ac46b51244e3)

running 3 tests
test import_queue::buffered_link::tests::is_closed ... ok
test import_queue::basic_queue::tests::prioritizes_finality_work_over_block_import ... ok
test shared_data::tests::shared_data_locking_works ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.61s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_aura-269f69730be77514)

running 4 tests
test tests::authorities_call_works ... ok
test tests::on_slot_returns_correct_block ... ok
test tests::current_node_authority_should_claim_slot ... ok
test tests::authoring_blocks ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 4.53s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_babe-bb07e9ebda78e912)

running 21 tests
test tests::malformed_pre_digest_rejected ... ok
test tests::wrong_consensus_engine_id_rejected ... ok
test tests::sig_is_not_pre_digest ... ok
test tests::babe_transcript_generation_match ... ok
test authorship::tests::claim_secondary_plain_slot_works ... ok
test tests::claim_vrf_check ... ok
test aux_schema::test::load_decode_from_v0_epoch_changes ... ok
test tests::claim_epoch_slots ... ok
test tests::verify_slots_are_strictly_increasing - should panic ... ok
test tests::importing_block_one_sets_genesis_epoch ... ok
test tests::revert_not_allowed_for_finalized ... ok
test tests::obsolete_blocks_aux_data_cleanup ... ok
test tests::allows_skipping_epochs_on_some_forks ... ok
test tests::allows_skipping_epochs ... ok
test tests::revert_prunes_epoch_changes_and_removes_weights ... ok
test tests::importing_epoch_change_block_prunes_tree ... ok
test tests::rejects_empty_block - should panic ... ok
test tests::rejects_missing_consensus_digests - should panic ... ok
test tests::rejects_missing_inherent_digest - should panic ... ok
test tests::rejects_missing_seals - should panic ... ok
test tests::authoring_blocks ... ok

test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 12.05s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_babe_rpc-cc1b07fe855464f9)

running 2 tests
test tests::epoch_authorship_is_unsafe ... ok
test tests::epoch_authorship_works ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.40s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_beefy-1fa8339ecc2286d1)

running 47 tests
test round::tests::vote_threshold ... ok
test metrics::tests::should_register_metrics ... ok
test communication::gossip::tests::known_votes_insert_remove ... ok
test communication::tests::beefy_protocols_names ... ok
test communication::peers::tests::should_track_known_peers_progress ... ok
test keystore::tests::sign_no_keystore ... ok
test keystore::tests::verify_works ... ok
test keystore::tests::sign_error ... ok
test worker::tests::extract_authorities_change_digest ... ok
test keystore::tests::authority_id_works ... ok
test keystore::tests::sign_works ... ok
test communication::gossip::tests::should_avoid_verifying_signatures_twice ... ok
test worker::tests::vote_on_mandatory_block ... ok
test worker::tests::vote_on_min_block_delta ... ok
test worker::tests::vote_on_power_of_two ... ok
test worker::tests::vote_on_target_block ... ok
test worker::tests::test_oracle_accepted_interval ... ok
test keystore::tests::verify_should_work ... ok
test worker::tests::should_vote_target ... ok
test justification::tests::should_decode_and_verify_finality_proof ... ok
test communication::gossip::tests::messages_rebroadcast ... ok
test round::tests::old_rounds_not_accepted ... ok
test round::tests::round_tracker ... ok
test round::tests::should_provide_equivocation_proof ... ok
test round::tests::new_rounds ... ok
test justification::tests::should_verify_with_validator_set ... ok
test round::tests::multiple_rounds ... ok
test keystore::tests::public_keys_works ... ok
test communication::gossip::tests::messages_allowed_and_expired ... ok
test keystore::tests::pair_works ... ok
test round::tests::add_and_conclude_votes ... ok
test aux_schema::tests::should_load_persistent_sanity_checks ... ok
test tests::should_initialize_voter_at_latest_finalized ... ok
test tests::should_initialize_voter_at_custom_genesis ... ok
test worker::tests::keystore_vs_validator_set ... ok
test worker::tests::should_init_session ... ok
test worker::tests::should_finalize_correctly ... ok
test tests::should_initialize_voter_at_genesis ... ok
test tests::should_initialize_voter_when_last_final_is_session_boundary ... ok
test worker::tests::should_not_report_bad_old_or_self_equivocations ... ok
test tests::beefy_importing_justifications ... ok
test tests::beefy_finalizing_after_pallet_genesis ... ok
test tests::beefy_finalizing_blocks ... ok
test tests::beefy_reports_equivocations ... ok
test tests::correct_beefy_payload ... ok
test tests::lagging_validators ... ok
test tests::on_demand_beefy_justification_sync ... ok

test result: ok. 47 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 5.83s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_beefy_rpc-9f6b0019f1b1d36f)

running 4 tests
test tests::latest_finalized_rpc ... ok
test tests::uninitialized_rpc_handler ... ok
test tests::subscribe_and_unsubscribe_with_wrong_id ... ok
test tests::subscribe_and_listen_to_one_justification ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_epochs-84424a0e33b5fae1)

running 5 tests
test tests::epoch_changes_between_blocks ... ok
test tests::genesis_epoch_is_created_but_not_imported ... ok
test tests::two_block_ones_dont_conflict ... ok
test tests::near_genesis_prune_works ... ok
test tests::prune_removes_stale_nodes ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_grandpa-c7e22c377760b669)

running 87 tests
test authorities::tests::authority_set_changes_for_complete_data ... ok
test authorities::tests::authority_set_changes_insert ... ok
test authorities::tests::authority_set_changes_for_incomplete_data ... ok
test authorities::tests::forced_changes_with_no_delay ... ok
test authorities::tests::maintains_authority_list_invariants ... ok
test authorities::tests::iter_from_works ... ok
test authorities::tests::current_limit_filters_min ... ok
test authorities::tests::forced_changes ... ok
test authorities::tests::apply_change ... ok
test communication::gossip::tests::view_vote_rules ... ok
test communication::gossip::tests::view_global_message_rules ... ok
test authorities::tests::disallow_multiple_changes_being_finalized_at_once ... ok
test authorities::tests::changes_iterated_in_pre_order ... ok
test authorities::tests::next_change_works ... ok
test authorities::tests::forced_changes_blocked_by_standard_changes ... ok
test authorities::tests::cleans_up_stale_forced_changes_when_applying_standard_change ... ok
test authorities::tests::enacts_standard_change_works ... ok
test finality_proof::tests::finality_proof_check_fails_when_proof_decode_fails ... ok
test finality_proof::tests::finality_proof_check_fails_when_proof_is_empty ... ok
test communication::gossip::tests::invalid_view_change ... ok
test communication::gossip::tests::update_peer_state ... ok
test communication::gossip::tests::unknown_peer_cannot_be_updated ... ok
test communication::gossip::tests::doesnt_expire_next_round_messages ... ok
test communication::gossip::tests::sends_neighbor_packets_to_non_light_peers_when_starting_a_new_round ... ok
test communication::gossip::tests::unsolicited_catch_up_messages_discarded ... ok
test communication::gossip::tests::messages_not_expired_immediately ... ok
test communication::gossip::tests::unanswerable_catch_up_requests_discarded ... ok
test communication::gossip::tests::detects_honest_out_of_scope_catch_requests ... ok
test communication::gossip::tests::sends_catch_up_requests_to_non_authorities_when_observer_disabled ... ok
test communication::gossip::tests::doesnt_send_catch_up_requests_to_non_authorities_when_observer_enabled ... ok
test communication::gossip::tests::issues_catch_up_request_on_neighbor_packet_import ... ok
test communication::gossip::tests::sends_neighbor_packets_to_all_peers_when_starting_a_new_set ... ok
test communication::gossip::tests::allow_noting_different_authorities_for_same_set ... ok
test communication::gossip::tests::doesnt_send_catch_up_requests_when_disabled ... ok
test communication::gossip::tests::never_gossips_round_messages_to_light_clients ... ok
test communication::gossip::tests::only_gossip_commits_to_peers_on_same_set ... ok
test communication::gossip::tests::expire_commits_from_older_rounds ... ok
test communication::tests::grandpa_protocol_name ... ok
test communication::gossip::tests::message_from_unknown_authority_discarded ... ok
test communication::tests::peer_with_higher_view_leads_to_catch_up_request ... ok
test communication::tests::bad_commit_leads_to_report ... ok
test communication::tests::good_commit_leads_to_relay ... ok
test communication::gossip::tests::progressively_gossips_to_more_peers_as_round_duration_increases ... ok
test aux_schema::test::load_decode_from_v0_migrates_data_format ... ok
test aux_schema::test::write_read_concluded_rounds ... ok
test until_imported::tests::block_global_message_wait_completed_return_none_on_block_number_missmatch ... ok
test until_imported::tests::block_global_message_wait_completed_return_when_all_awaited ... ok
test aux_schema::test::load_decode_from_v2_migrates_data_format ... ok
test aux_schema::test::load_decode_from_v1_migrates_data_format ... ok
test until_imported::tests::catch_up_message_all_known ... ok
test until_imported::tests::commit_message_all_known ... ok
test until_imported::tests::metrics_cleans_up_after_itself ... ok
test observer::tests::observer_work_polls_underlying_network_bridge ... ok
test tests::grandpa_environment_never_overwrites_round_voter_state ... ok
test until_imported::tests::blocking_catch_up_message ... ok
test until_imported::tests::blocking_commit_message ... ok
test finality_proof::tests::finality_proof_fails_if_no_more_last_finalized_blocks ... ok
test finality_proof::tests::finality_proof_using_authority_set_changes_fails_with_undefined_start ... ok
test tests::justification_with_equivocation ... ok
test finality_proof::tests::finality_proof_is_none_if_no_justification_known ... ok
test finality_proof::tests::finality_proof_in_last_set_fails_without_latest ... ok
test finality_proof::tests::finality_proof_check_fails_with_incomplete_justification ... ok
test tests::imports_justification_for_regular_blocks_on_import ... ok
test tests::grandpa_environment_checks_if_best_block_is_descendent_of_finality_target ... ok
test tests::grandpa_environment_respects_voting_rules ... ok
test finality_proof::tests::finality_proof_in_last_set_using_latest_justification_works ... ok
test finality_proof::tests::finality_proof_using_authority_set_changes_works ... ok
test finality_proof::tests::finality_proof_check_works_with_correct_justification ... ok
test tests::grandpa_environment_passes_actual_best_block_to_voting_rules ... ok
test tests::grandpa_environment_doesnt_send_equivocation_reports_for_itself ... ok
test voting_rule::tests::before_best_by_has_cutoff_at_base ... ok
test voting_rule::tests::multiple_voting_rules_cannot_restrict_past_base ... ok
test tests::test_bad_justification ... ok
test tests::allows_reimporting_change_blocks ... ok
test tests::revert_prunes_authority_changes ... ok
test tests::voter_persists_its_votes ... ok
test tests::justification_is_generated_periodically ... ok
test tests::finalize_3_voters_no_observers ... ok
test tests::finalize_3_voters_1_light_observer ... ok
test tests::force_change_to_new_set ... ok
test tests::finalize_3_voters_1_full_observer ... ok
test warp_proof::tests::warp_sync_proof_generate_verify ... ok
test tests::voter_catches_up_to_latest_round_when_behind ... ok
test tests::finalizes_multiple_pending_changes_in_order ... ok
test tests::sync_justifications_on_change_blocks ... ok
test until_imported::tests::request_block_sync_for_needed_blocks ... ok
test tests::transition_3_voters_twice_1_full_observer ... ok

test result: ok. 87 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 22.68s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_grandpa_rpc-a22df020fd340700)

running 5 tests
test tests::uninitialized_rpc_handler ... ok
test tests::working_rpc_handler ... ok
test tests::subscribe_and_unsubscribe_with_wrong_id ... ok
test tests::subscribe_and_listen_to_one_justification ... ok
test tests::prove_finality_with_test_finality_proof_provider ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.13s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_manual_seal-08b299c4a9a684aa)

running 4 tests
test tests::manual_seal_post_hash ... ok
test tests::manual_seal_and_finalization ... ok
test tests::instant_seal ... ok
test tests::manual_seal_fork_blocks ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.53s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_pow-268072049747479e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_consensus_slots-0be430688c8828bf)

running 12 tests
test test::exponential_slot_lenience ... ok
test test::linear_slot_lenience ... ok
test test::proposing_remaining_duration_should_apply_lenience_based_on_proposal_slot_proportion ... ok
test test::proposing_remaining_duration_should_never_exceed_max_proposal_slot_proportion ... ok
test test::should_never_backoff_if_max_interval_is_reached ... ok
test test::should_never_backoff_when_head_not_advancing ... ok
test test::should_stop_authoring_if_blocks_are_still_produced_when_finality_stalled ... ok
test test::should_backoff_authoring_when_finality_stalled ... ok
test test::time_to_reach_upper_bound_for_smaller_slack ... ok
test test::time_to_reach_upper_bound_for_larger_slack ... ok
test test::should_never_wait_more_than_max_interval ... ok
test aux_schema::test::check_equivocation_works ... ok

test result: ok. 12 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.93s

     Running unittests src/lib.rs (target/debug/deps/sc_executor-72bca1828e4769d7)

running 214 tests
test integration_tests::call_not_existing_function_interpreted ... ok
test integration_tests::allocate_two_gigabyte_interpreted ... ok
test integration_tests::abort_on_panic_interpreted ... ok
test integration_tests::blake2_256_should_work_interpreted ... ok
test integration_tests::blake2_128_should_work_interpreted ... ok
test integration_tests::call_yet_another_not_existing_function_interpreted ... ok
test integration_tests::blake2_128_should_work_compiled_pooling_cow ... ok
test integration_tests::call_yet_another_not_existing_function_compiled_recreate_instance_vanilla ... ok
test integration_tests::call_yet_another_not_existing_function_compiled_recreate_instance_cow ... ok
test integration_tests::call_yet_another_not_existing_function_compiled_pooling_vanilla ... ok
test integration_tests::clear_prefix_should_work_compiled_pooling_cow ... ok
test integration_tests::clear_prefix_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::call_not_existing_function_compiled_pooling_vanilla ... ok
test integration_tests::abort_on_panic_compiled_pooling_cow ... ok
test integration_tests::call_not_existing_function_compiled_legacy_instance_reuse ... ok
test integration_tests::abort_on_panic_compiled_pooling_vanilla ... ok
test integration_tests::call_not_existing_function_compiled_recreate_instance_cow ... ok
test integration_tests::abort_on_panic_compiled_legacy_instance_reuse ... ok
test integration_tests::abort_on_panic_compiled_recreate_instance_cow ... ok
test integration_tests::call_yet_another_not_existing_function_compiled_pooling_cow ... ok
test integration_tests::call_not_existing_function_compiled_recreate_instance_vanilla ... ok
test integration_tests::call_not_existing_function_compiled_pooling_cow ... ok

running 1 test
test integration_tests::call_yet_another_not_existing_function_compiled_legacy_instance_reuse ... ok
test integration_tests::abort_on_panic_compiled_recreate_instance_vanilla ... ok
test integration_tests::allocate_two_gigabyte_compiled_legacy_instance_reuse ... ok
test integration_tests::allocate_two_gigabyte_compiled_recreate_instance_vanilla ... ok
test integration_tests::allocate_two_gigabyte_compiled_recreate_instance_cow ... ok
test integration_tests::allocate_two_gigabyte_compiled_pooling_vanilla ... ok
test integration_tests::allocate_two_gigabyte_compiled_pooling_cow ... ok
test integration_tests::memory_is_cleared_between_invocations_compiled_legacy_instance_reuse ... ok
test integration_tests::memory_is_cleared_between_invocations_compiled_pooling_cow ... ok
test integration_tests::memory_is_cleared_between_invocations_compiled_pooling_vanilla ... ok
test integration_tests::memory_is_cleared_between_invocations_interpreted ... ok
test integration_tests::memory_is_cleared_between_invocations_compiled_recreate_instance_vanilla ... ok
test integration_tests::memory_is_cleared_between_invocations_compiled_recreate_instance_cow ... ok
test integration_tests::heap_is_reset_between_calls_interpreted ... ok
test integration_tests::offchain_http_should_work_interpreted ... ok
test integration_tests::clear_prefix_should_work_interpreted ... ok
test integration_tests::ed25519_verify_should_work_interpreted ... ok
test integration_tests::linux::memory_consumption_interpreted ... ok
test integration_tests::offchain_index_interpreted ... ok
test integration_tests::offchain_index_compiled_recreate_instance_cow ... ok
test integration_tests::offchain_index_compiled_pooling_cow ... ok
test integration_tests::offchain_local_storage_should_work_compiled_pooling_cow ... ok
test integration_tests::offchain_index_compiled_pooling_vanilla ... ok
test integration_tests::offchain_local_storage_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::offchain_http_should_work_compiled_pooling_cow ... ok
test integration_tests::offchain_index_compiled_recreate_instance_vanilla ... ok
test integration_tests::offchain_local_storage_should_work_compiled_pooling_vanilla ... ok
test integration_tests::offchain_index_compiled_legacy_instance_reuse ... ok
test integration_tests::offchain_local_storage_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::offchain_http_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::offchain_http_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::blake2_256_should_work_compiled_pooling_cow ... ok
test integration_tests::blake2_128_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::blake2_256_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::blake2_256_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::offchain_http_should_work_compiled_pooling_vanilla ... ok
test integration_tests::blake2_256_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::blake2_128_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::offchain_http_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::blake2_256_should_work_compiled_pooling_vanilla ... ok
test integration_tests::blake2_128_should_work_compiled_pooling_vanilla ... ok
test integration_tests::blake2_128_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::clear_prefix_should_work_compiled_pooling_vanilla ... ok
test integration_tests::clear_prefix_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::offchain_local_storage_should_work_interpreted ... ok
test integration_tests::ordered_trie_root_should_work_interpreted ... ok
test integration_tests::ordered_trie_root_should_work_compiled_pooling_cow ... ok
test integration_tests::linux::memory_consumption_compiled ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 213 filtered out; finished in 0.51s

test integration_tests::linux::memory_consumption_compiled ... ok
test integration_tests::clear_prefix_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::panicking_should_work_interpreted ... ok
test integration_tests::parallel_execution_interpreted ... ok
test integration_tests::return_huge_len_interpreted ... ok
test integration_tests::restoration_of_globals_interpreted ... ok
test integration_tests::return_i8_compiled_legacy_instance_reuse ... ok
test integration_tests::return_huge_len_compiled_legacy_instance_reuse ... ok
test integration_tests::return_huge_len_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_i8_compiled_pooling_cow ... ok
test integration_tests::return_huge_len_compiled_pooling_cow ... ok
test integration_tests::return_huge_len_compiled_pooling_vanilla ... ok
test integration_tests::return_huge_len_compiled_recreate_instance_cow ... ok
test integration_tests::ed25519_verify_should_work_compiled_pooling_vanilla ... ok
test integration_tests::ed25519_verify_should_work_compiled_pooling_cow ... ok
test integration_tests::ordered_trie_root_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::ordered_trie_root_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::offchain_local_storage_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::ed25519_verify_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::parallel_execution_compiled_recreate_instance_cow ... ok
test integration_tests::ed25519_verify_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::ordered_trie_root_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::parallel_execution_compiled_recreate_instance_vanilla ... ok
test integration_tests::parallel_execution_compiled_pooling_cow ... ok
test integration_tests::return_i8_compiled_pooling_vanilla ... ok
test integration_tests::ordered_trie_root_should_work_compiled_pooling_vanilla ... ok
test integration_tests::ed25519_verify_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_max_memory_offset_plus_one_interpreted ... ok
test integration_tests::parallel_execution_compiled_pooling_vanilla ... ok
test integration_tests::parallel_execution_compiled_legacy_instance_reuse ... ok
test integration_tests::restoration_of_globals_compiled_legacy_instance_reuse ... ok
test integration_tests::restoration_of_globals_compiled_recreate_instance_cow ... ok
test integration_tests::return_i8_interpreted ... ok
test integration_tests::restoration_of_globals_compiled_pooling_cow ... ok
test integration_tests::restoration_of_globals_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_max_memory_offset_interpreted ... ok
test integration_tests::restoration_of_globals_compiled_pooling_vanilla ... ok
test integration_tests::return_overflow_interpreted ... ok
test integration_tests::return_value_interpreted ... ok
test integration_tests::returning_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::returning_should_work_compiled_pooling_vanilla ... ok
test integration_tests::return_overflow_compiled_pooling_cow ... ok
test integration_tests::return_value_compiled_pooling_vanilla ... ok
test integration_tests::return_i8_compiled_recreate_instance_vanilla ... ok
test integration_tests::returning_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::returning_should_work_compiled_pooling_cow ... ok
test integration_tests::returning_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_max_memory_offset_plus_one_compiled_pooling_vanilla ... ok
test integration_tests::return_value_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_value_compiled_recreate_instance_cow ... ok
test integration_tests::return_max_memory_offset_plus_one_compiled_recreate_instance_cow ... ok
test integration_tests::return_overflow_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_overflow_compiled_legacy_instance_reuse ... ok
test integration_tests::return_value_compiled_legacy_instance_reuse ... ok
test integration_tests::return_max_memory_offset_plus_one_compiled_pooling_cow ... ok
test integration_tests::return_overflow_compiled_recreate_instance_cow ... ok
test integration_tests::return_value_compiled_pooling_cow ... ok
test integration_tests::return_max_memory_offset_plus_one_compiled_legacy_instance_reuse ... ok
test integration_tests::return_max_memory_offset_plus_one_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_max_memory_offset_compiled_recreate_instance_vanilla ... ok
test integration_tests::return_overflow_compiled_pooling_vanilla ... ok
test integration_tests::return_i8_compiled_recreate_instance_cow ... ok
test integration_tests::return_max_memory_offset_compiled_legacy_instance_reuse ... ok
test integration_tests::return_max_memory_offset_compiled_pooling_vanilla ... ok
test integration_tests::return_max_memory_offset_compiled_pooling_cow ... ok
test integration_tests::returning_should_work_interpreted ... ok
test integration_tests::return_max_memory_offset_compiled_recreate_instance_cow ... ok
test integration_tests::returns_mutable_static_bss_interpreted ... ok
test integration_tests::returns_mutable_static_interpreted ... ok
test integration_tests::sha2_256_should_work_interpreted ... ok
test integration_tests::should_trap_when_heap_exhausted_interpreted ... ok
test integration_tests::sr25519_verify_should_work_interpreted ... ok
test integration_tests::should_trap_when_heap_exhausted_compiled_recreate_instance_vanilla ... ok
test integration_tests::should_trap_when_heap_exhausted_compiled_legacy_instance_reuse ... ok
test integration_tests::returns_mutable_static_compiled_legacy_instance_reuse ... ok
test integration_tests::storage_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::storage_should_work_compiled_pooling_cow ... ok
test integration_tests::returns_mutable_static_compiled_recreate_instance_cow ... ok
test integration_tests::panicking_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::panicking_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::should_trap_when_heap_exhausted_compiled_recreate_instance_cow ... ok
test integration_tests::returns_mutable_static_bss_compiled_pooling_vanilla ... ok
test integration_tests::should_trap_when_heap_exhausted_compiled_pooling_vanilla ... ok
test integration_tests::panicking_should_work_compiled_pooling_vanilla ... ok
test integration_tests::panicking_should_work_compiled_pooling_cow ... ok
test integration_tests::panicking_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::returns_mutable_static_compiled_recreate_instance_vanilla ... ok
test integration_tests::returns_mutable_static_compiled_pooling_vanilla ... ok
test integration_tests::returns_mutable_static_bss_compiled_legacy_instance_reuse ... ok
test integration_tests::returns_mutable_static_bss_compiled_pooling_cow ... ok
test integration_tests::returns_mutable_static_compiled_pooling_cow ... ok
test integration_tests::returns_mutable_static_bss_compiled_recreate_instance_vanilla ... ok
test integration_tests::returns_mutable_static_bss_compiled_recreate_instance_cow ... ok
test integration_tests::should_trap_when_heap_exhausted_compiled_pooling_cow ... ok
test integration_tests::storage_should_work_interpreted ... ok
test integration_tests::twox_128_should_work_interpreted ... ok
test integration_tests::take_i8_interpreted ... ok
test integration_tests::twox_256_should_work_interpreted ... ok
test integration_tests::unreachable_intrinsic_compiled_recreate_instance_cow ... ok
test integration_tests::unreachable_intrinsic_compiled_pooling_cow ... ok
test integration_tests::take_i8_compiled_recreate_instance_vanilla ... ok
test integration_tests::unreachable_intrinsic_compiled_legacy_instance_reuse ... ok
test integration_tests::take_i8_compiled_pooling_cow ... ok
test integration_tests::take_i8_compiled_legacy_instance_reuse ... ok
test integration_tests::unreachable_intrinsic_compiled_pooling_vanilla ... ok
test integration_tests::take_i8_compiled_pooling_vanilla ... ok
test integration_tests::sr25519_verify_should_work_compiled_recreate_instance_cow ... ok
test native_executor::tests::native_executor_registers_custom_interface ... ok
test integration_tests::sha2_256_should_work_compiled_pooling_vanilla ... ok
test integration_tests::sha2_256_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::sha2_256_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::sha2_256_should_work_compiled_pooling_cow ... ok
test integration_tests::sr25519_verify_should_work_compiled_pooling_cow ... ok
test integration_tests::sr25519_verify_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::sr25519_verify_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::sha2_256_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::sr25519_verify_should_work_compiled_pooling_vanilla ... ok
test integration_tests::storage_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::take_i8_compiled_recreate_instance_cow ... ok
test wasm_runtime::tests::host_functions_are_equal ... ok
test wasm_runtime::tests::new_runtime_version_decodes ... ok
test wasm_runtime::tests::old_runtime_version_decodes_fails_with_version_3 ... ok
test wasm_runtime::tests::old_runtime_version_decodes ... ok
test integration_tests::storage_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::storage_should_work_compiled_pooling_vanilla ... ok
test integration_tests::unreachable_intrinsic_interpreted ... ok
test tests::call_in_interpreted_wasm_works ... ok
test integration_tests::wasm_tracing_should_work_interpreted ... ok
test integration_tests::twox_256_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::unreachable_intrinsic_compiled_recreate_instance_vanilla ... ok
test integration_tests::twox_128_should_work_compiled_pooling_cow ... ok
test integration_tests::twox_256_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::twox_256_should_work_compiled_pooling_vanilla ... ok
test integration_tests::twox_128_should_work_compiled_pooling_vanilla ... ok
test integration_tests::twox_128_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::twox_128_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::twox_256_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::twox_256_should_work_compiled_pooling_cow ... ok
test integration_tests::twox_128_should_work_compiled_recreate_instance_vanilla ... ok
test wasm_runtime::tests::embed_runtime_version_works ... ok
test integration_tests::wasm_tracing_should_work_compiled_recreate_instance_cow ... ok
test integration_tests::wasm_tracing_should_work_compiled_pooling_vanilla ... ok
test integration_tests::wasm_tracing_should_work_compiled_legacy_instance_reuse ... ok
test integration_tests::wasm_tracing_should_work_compiled_recreate_instance_vanilla ... ok
test integration_tests::wasm_tracing_should_work_compiled_pooling_cow ... ok

test result: ok. 214 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.31s

     Running unittests src/lib.rs (target/debug/deps/sc_executor_common-5fcfdf12977b449e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_executor_wasmi-cfc0c9e8f2dd57be)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_executor_wasmtime-b71fd911ef7ae2bd)

running 42 tests
test tests::test_instances_without_reuse_are_not_leaked ... ignored
test instance_wrapper::decommit_works ... ok
test tests::test_consume_under_1mb_of_stack_does_not_trap_pooling_cow ... ok
test tests::test_consume_under_1mb_of_stack_does_not_trap_pooling_vanilla ... ok
test tests::test_max_memory_pages_exported_memory_without_precompilation_recreate_instance_vanilla ... ok
test tests::test_max_memory_pages_imported_memory_without_precompilation_recreate_instance_vanilla ... ok
test tests::test_max_memory_pages_exported_memory_without_precompilation_legacy_instance_reuse ... ok
test tests::test_max_memory_pages_imported_memory_without_precompilation_pooling_cow ... ok
test tests::test_max_memory_pages_exported_memory_without_precompilation_recreate_instance_cow ... ok
test tests::test_max_memory_pages_imported_memory_without_precompilation_recreate_instance_cow ... ok
test util::test_is_madvise_working_check_does_not_fail ... ok
test tests::test_max_memory_pages_imported_memory_without_precompilation_pooling_vanilla ... ok
test tests::test_max_memory_pages_imported_memory_with_precompilation_recreate_instance_cow ... ok
test tests::test_max_memory_pages_imported_memory_with_precompilation_recreate_instance_vanilla ... ok
test tests::test_max_memory_pages_exported_memory_without_precompilation_pooling_cow ... ok
test tests::test_max_memory_pages_exported_memory_with_precompilation_recreate_instance_cow ... ok
test tests::test_max_memory_pages_exported_memory_with_precompilation_recreate_instance_vanilla ... ok
test tests::test_max_memory_pages_imported_memory_with_precompilation_pooling_cow ... ok
test tests::test_max_memory_pages_imported_memory_with_precompilation_pooling_vanilla ... ok
test tests::test_max_memory_pages_exported_memory_with_precompilation_pooling_vanilla ... ok
test tests::test_consume_under_1mb_of_stack_does_not_trap_legacy_instance_reuse ... ok
test tests::test_consume_under_1mb_of_stack_does_not_trap_recreate_instance_vanilla ... ok
test tests::test_consume_under_1mb_of_stack_does_not_trap_recreate_instance_cow ... ok
test tests::test_nan_canonicalization_recreate_instance_vanilla ... ok
test tests::test_nan_canonicalization_pooling_vanilla ... ok
test tests::test_nan_canonicalization_recreate_instance_cow ... ok
test tests::test_nan_canonicalization_pooling_cow ... ok
test tests::test_max_memory_pages_imported_memory_without_precompilation_legacy_instance_reuse ... ok
test tests::test_nan_canonicalization_legacy_instance_reuse ... ok
test tests::test_max_memory_pages_exported_memory_without_precompilation_pooling_vanilla ... ok
test tests::test_max_memory_pages_exported_memory_with_precompilation_pooling_cow ... ok
test tests::test_stack_depth_reaching_recreate_instance_vanilla ... ok
test tests::test_stack_depth_reaching_recreate_instance_cow ... ok
test tests::test_stack_depth_reaching_pooling_vanilla ... ok
test tests::test_stack_depth_reaching_legacy_instance_reuse ... ok
test tests::test_stack_depth_reaching_pooling_cow ... ok
test tests::test_consume_over_1mb_of_stack_does_trap_pooling_vanilla ... ok
test tests::test_consume_over_1mb_of_stack_does_trap_pooling_cow ... ok
test tests::test_consume_over_1mb_of_stack_does_trap_recreate_instance_cow ... ok
test tests::test_consume_over_1mb_of_stack_does_trap_recreate_instance_vanilla ... ok
test tests::test_consume_over_1mb_of_stack_does_trap_legacy_instance_reuse ... ok
test tests::test_rustix_version_matches_with_wasmtime ... ok

test result: ok. 41 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 1.32s

     Running unittests src/lib.rs (target/debug/deps/sc_informant-0e1cbeb8b40d7c05)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_keystore-f7720208577f1720)

running 10 tests
test local::tests::store_ignores_files_with_invalid_name ... ok
test local::tests::test_insert_ephemeral_from_seed ... ok
test local::tests::has_keys_works ... ok
test local::tests::uses_correct_file_permissions_on_unix ... ok
test local::tests::generate_with_seed_is_not_stored ... ok
test local::tests::generate_can_be_fetched_in_memory ... ok
test local::tests::basic_store ... ok
test local::tests::store_unknown_and_extract_it ... ok
test local::tests::password_being_used ... ok
test local::tests::public_keys_are_returned ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.38s

     Running unittests src/lib.rs (target/debug/deps/sc_network-688ae32b7714bf66)

running 83 tests
test config::tests::test_secret_new ... ok
test config::tests::test_secret_input ... ok
test config::tests::test_secret_file ... ok
test protocol::notifications::behaviour::tests::accept_non_existent_connection ... ok
test protocol::notifications::behaviour::tests::disconnect_non_existent_peer ... ok
test protocol::notifications::behaviour::tests::disconnect_backoff_peer ... ok
test protocol::notifications::behaviour::tests::disconnect_requested_peer ... ok
test protocol::notifications::behaviour::tests::disconnect_disabled_peer ... ok
test protocol::notifications::behaviour::tests::disconnect_pending_request ... ok
test protocol::notifications::behaviour::tests::peerset_disconnect_disable_pending_enable ... ok
test protocol::notifications::behaviour::tests::peerset_accept_peer_not_alive ... ok
test protocol::notifications::behaviour::tests::peerset_connect_incoming ... ok
test protocol::notifications::behaviour::tests::inject_dial_failure_for_pending_request ... ok
test protocol::notifications::behaviour::tests::peerset_disconnect_enabled ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_incoming_with_backoff ... ok
test protocol::notifications::behaviour::tests::peerset_disconnect_pending_request ... ok
test protocol::notifications::behaviour::tests::peer_is_backed_off_if_both_connections_get_closed_while_peer_is_disabled_with_back_off ... ok
test protocol::notifications::behaviour::tests::disconnect_remote_substream_before_handled_by_peerset ... ok
test protocol::notifications::behaviour::tests::dial_failure_for_requested_peer ... ok
test protocol::notifications::behaviour::tests::peerset_disconnect_requested ... ok
test protocol::notifications::behaviour::tests::close_connection_for_disabled_peer ... ok
test protocol::notifications::behaviour::tests::inject_non_existent_connection_closed_for_incoming_peer - should panic ... ok
test protocol::notifications::behaviour::tests::close_connection_for_incoming_peer_one_connection ... ok
test protocol::notifications::behaviour::tests::inject_non_existent_connection_closed_for_disabled_pending_enable - should panic ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_for_enabled_state_mismatch - should panic ... ok
test protocol::notifications::behaviour::tests::inject_non_existent_connection_closed_for_disabled_peer - should panic ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_for_incoming_peer_state_mismatch - should panic ... ok
test protocol::notifications::behaviour::tests::close_connection_for_incoming_peer_two_connections ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_for_backoff_peer - should panic ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_non_existent_peer - should panic ... ok
test protocol::notifications::behaviour::tests::reject_non_existent_connection ... ok
test protocol::notifications::behaviour::tests::inject_connection_closed_for_active_connection ... ok
test protocol::notifications::behaviour::tests::peerset_report_accept_incoming_peer - should panic ... ok
test protocol::notifications::behaviour::tests::open_result_ok_non_existent_peer - should panic ... ok
test protocol::notifications::behaviour::tests::connection_and_substream_open ... ok
test protocol::notifications::behaviour::tests::update_handshake ... ok
test protocol::notifications::behaviour::tests::connection_closed_sink_replaced ... ok
test protocol::notifications::behaviour::tests::two_connections_active_connection_gets_closed_peer_state_is_disabled ... ok
test protocol::notifications::behaviour::tests::peerset_report_disconnect_disabled ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_with_requested_peer - should panic ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_backoff ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_with_disabled_pending_enable_peer - should panic ... ok
test protocol::notifications::behaviour::tests::reject_non_active_connection ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_with_pending_requested - should panic ... ok
test protocol::notifications::behaviour::tests::secondary_connection_peer_state_incoming ... ok
test protocol::notifications::behaviour::tests::peerstate_incoming_open_desired_by_remote ... ok
test protocol::notifications::behaviour::tests::peerset_report_disconnect_backoff ... ok
test protocol::notifications::behaviour::tests::peerset_report_disconnect_with_incoming_peer - should panic ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_with_enabled_peer - should panic ... ok
test protocol::notifications::behaviour::tests::remote_opens_connection_and_substream ... ok
test protocol::notifications::behaviour::tests::peerset_report_accept_not_incoming_peer - should panic ... ok
test protocol::notifications::behaviour::tests::reject_non_existent_peer_but_alive_connection - should panic ... ok
test protocol::notifications::behaviour::tests::update_unknown_handshake - should panic ... ok
test discovery::tests::discovery_ignores_peers_with_unknown_protocols ... ok
test protocol::notifications::behaviour::tests::two_connections_inactive_connection_gets_closed_peer_state_is_still_incoming ... ok
test protocol::notifications::upgrade::collec::tests::protocol_info ... ok
test protocol::notifications::behaviour::tests::write_notification ... ok
test protocol::notifications::upgrade::collec::tests::nested_protocol_info ... ok
test utils::tests::maintains_limit ... ok
test types::tests::protocol_name_keys_are_equivalent_to_str_keys ... ok
test types::tests::different_protocol_names_do_not_compare_equal ... ok
test protocol::notifications::handler::tests::close_desired_by_remote ... ok
test protocol::notifications::handler::tests::sync_notifications_clogged ... ok
test protocol::notifications::handler::tests::fully_negotiated_resets_state_for_closed_substream ... ok
test protocol::notifications::handler::tests::fully_negotiated_resets_state_for_open_desired_substream ... ok
test protocol::notifications::handler::tests::dial_upgrade_error_resets_closed_outbound_state ... ok
test protocol::notifications::handler::tests::dial_upgrade_error_resets_open_desired_state ... ok
test protocol::notifications::handler::tests::second_open_desired_by_remote_rejected ... ok
test protocol::notifications::handler::tests::open_rejected_if_substream_already_open ... ok
test request_responses::tests::request_id_collision ... ok
test protocol::notifications::handler::tests::open_rejected_if_substream_is_opening ... ok
test protocol::notifications::upgrade::notifications::tests::empty_handshake ... ok
test protocol::notifications::upgrade::notifications::tests::large_initial_message_refused ... ok
test request_responses::tests::max_response_size_exceeded ... ok
test request_responses::tests::basic_request_response_works ... ok
test protocol::notifications::upgrade::notifications::tests::refused ... ok
test protocol::notifications::upgrade::notifications::tests::basic_works ... ok
test protocol::notifications::upgrade::notifications::tests::large_handshake_refused ... ok
test protocol::notifications::behaviour::tests::remove_backoff_peer_after_timeout ... ok
test protocol::notifications::behaviour::tests::peerset_report_connect_backoff_expired ... ok
test discovery::tests::discovery_working ... ok
test protocol::notifications::behaviour::tests::reschedule_disabled_pending_enable_when_connection_not_closed ... ok
test protocol::notifications::tests::reconnect_after_disconnect ... ok

test result: ok. 83 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 8.06s

     Running unittests src/lib.rs (target/debug/deps/sc_network_bitswap-cddb7ad5f9bfef24)

running 5 tests
[2mMar 24 12:51:16.139[0m [31mERROR[0m bitswap: Failed to process request from 1AYutMY34XEHtYDJmkytGJcRvhJZ7XaEzAWatBDLVXd8M7: Invalid WANT list.    
[2mMar 24 12:51:16.139[0m [31mERROR[0m bitswap: Failed to process request from 1Ag5PpQTkLfcjsBjCtiaWSuHk3qCXuqqUqFL3YSnXguVF3: Too many block entries in the request.    
[2mMar 24 12:51:16.139[0m [31mERROR[0m bitswap: Failed to process request from 1AmrVNCKJDNRBXKi5JQf7f8YzhQuuqXMeZYMNxuLndF4RL: Failed to decode request: failed to decode Protobuf message: Message.blocks: invalid wire type: StartGroup (expected LengthDelimited).    
test tests::transaction_not_found ... ok
test tests::empty_want_list ... ok
test tests::undecodeable_message ... ok
test tests::too_long_want_list ... ok
test tests::transaction_found ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.16s

     Running unittests src/lib.rs (target/debug/deps/sc_network_common-c07ea78e270224e7)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_network_gossip-7d4a46e3ef468c9b)

running 10 tests
test state_machine::tests::on_incoming_ignores_discarded_messages ... ok
test state_machine::tests::on_incoming_ignores_unregistered_peer ... ok
test state_machine::tests::can_keep_multiple_messages_per_topic ... ok
test state_machine::tests::message_stream_include_those_sent_before_asking ... ok
test state_machine::tests::peer_is_removed_on_disconnect ... ok
test bridge::tests::returns_when_network_event_stream_closes ... ok
test state_machine::tests::collects_garbage ... ok
test state_machine::tests::do_not_report_peer_for_first_time_duplicate_gossip_message ... ok
test bridge::tests::keeps_multiple_subscribers_per_topic_updated_with_both_old_and_new_messages ... ok
test bridge::tests::forwarding_to_different_size_and_topic_channels ... ok

test result: ok. 10 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.06s

     Running unittests src/lib.rs (target/debug/deps/sc_network_light-b14b89d3aab2cc40)

running 3 tests
test schema::tests::no_proof_encodes_correctly ... ok
test schema::tests::proof_encodes_correctly ... ok
test schema::tests::empty_proof_encodes_correctly ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_network_sync-41d58a20e96d2e99)

running 21 tests
test test::ancestor_search_repeat ... ok
test extra_requests::tests::ancestor_roots_are_finalized_when_finality_notification_is_missed ... ok
test blocks::test::large_gap ... ok
test blocks::test::create_clear ... ok
test blocks::test::no_duplicate_requests_on_fork ... ok
test blocks::test::clear_queued_subsequent_ranges ... ok
test blocks::test::insert_blocks ... ok
test extra_requests::tests::request_is_rescheduled_when_earlier_block_is_finalized ... ok
test service::network::tests::disconnect_and_report_peer ... ok
test extra_requests::tests::new_roots_schedule_new_request ... ok
test extra_requests::tests::requests_are_processed_in_order ... ok
test extra_requests::tests::disconnecting_implies_rescheduling ... ok
test extra_requests::tests::no_response_reschedules ... ok
test test::processes_empty_response_on_justification_request_for_unknown_block ... ok
test test::removes_target_fork_on_disconnect ... ok
test test::restart_doesnt_affect_peers_downloading_finality_data ... ok
test test::do_not_report_peer_on_block_response_for_block_request ... ok
test test::can_import_response_with_missing_blocks ... ok
test test::do_ancestor_search_when_common_block_to_best_qeued_gap_is_to_big ... ok
test test::can_sync_huge_fork has been running for over 60 seconds
test test::syncs_fork_without_duplicate_requests has been running for over 60 seconds
test test::syncs_fork_without_duplicate_requests ... ok
test test::can_sync_huge_fork ... ok

test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 172.76s

     Running unittests src/lib.rs (target/debug/deps/sc_network_test-432193af271c236e)

running 55 tests
test service::ensure_public_addresses_consistent_with_transport_not_memory - should panic ... ok
test service::ensure_boot_node_addresses_consistent_with_transport_not_memory - should panic ... ok
test service::ensure_listen_addresses_consistent_with_transport_not_memory - should panic ... ok
test service::ensure_listen_addresses_consistent_with_transport_memory - should panic ... ok
test service::ensure_reserved_node_addresses_consistent_with_transport_memory - should panic ... ok
test service::ensure_reserved_node_addresses_consistent_with_transport_not_memory - should panic ... ok
test service::ensure_boot_node_addresses_consistent_with_transport_memory - should panic ... ok
test service::ensure_public_addresses_consistent_with_transport_memory - should panic ... ok
test block_import::import_single_good_known_block_is_ignored ... ok
test service::fallback_name_working ... ok
test block_import::import_single_good_block_without_header_fails ... ok
test block_import::import_single_good_block_works ... ok
test sync::full_sync_requires_block_body ... ok
test sync::can_sync_forks_ahead_of_the_best_chain ... ok
test sync::imports_stale_once ... ok
test sync::can_sync_to_peers_with_wrong_common_block ... ok
test sync::can_sync_explicit_forks ... ok
test sync::own_blocks_are_announced ... ok
test sync::can_sync_small_non_best_forks ... ok
test sync::ancestry_search_works_when_backoff_is_one ... ok
test sync::block_announce_data_is_propagated ... ok
test sync::sync_justifications_across_forks ... ok
test sync::sync_blocks_when_block_announce_validator_says_it_is_new_best ... ok
test sync::sync_justifications ... ok
test sync::sync_peers_works ... ok
test sync::syncs_after_missing_announcement ... ok
test sync::sync_cycle_from_offline_to_syncing_to_offline ... ok
test sync::syncs_all_forks_from_single_peer ... ok
test sync::sync_from_two_peers_works ... ok
test sync::sync_to_tip_requires_that_sync_protocol_is_informed_about_best_block ... ok
[2mMar 24 12:54:17.706[0m [31mERROR[0m sc_service::client::client: Unable to pin block for import notification. hash: 0xa295…1caa, Error: UnknownBlock: State already discarded for `0xa295745b97327f0a4b92ba94f274af526f8f804d697d9faea84e74965e631caa`    
[2mMar 24 12:54:17.706[0m [31mERROR[0m sc_service::client::client: Unable to pin block for import notification. hash: 0xc98f…6414, Error: UnknownBlock: State already discarded for `0xc98fff2195e7989a9b1efb022dfe3f52f280aac69cccd53ef35b3f442dda6414`    
test sync::syncs_header_only_forks ... ok
test sync::wait_until_deferred_block_announce_validation_is_ready ... ok
[2mMar 24 12:54:18.131[0m [31mERROR[0m sc_service::client::client: Unable to pin block for finality notification. hash: 0x4aa9…6628, Error: UnknownBlock: State already discarded for `0x4aa9f28ea344ea31f406c0f88972653807a1d049db57eae98ee2202081416628`    
test sync::ancestry_search_works_when_common_is_two ... ok
test sync::ancestry_search_works_when_common_is_one ... ok
test sync::ancestry_search_works_when_ancestor_is_genesis ... ok
test sync::sync_from_two_peers_with_ancestry_search_works ... ok
test sync::sync_long_chain_works ... ok
test sync::syncing_node_not_major_syncing_when_disconnected ... ok
test sync::syncs_all_forks ... ok
test sync::ancestry_search_works_when_common_is_hundred ... ok
test sync::sync_no_common_longer_chain_fails ... ok
test sync::sync_after_fork_works ... ok
[2mMar 24 12:54:20.102[0m [31mERROR[0m sc_service::client::client: Unable to pin block for finality notification. hash: 0x4aa9…6628, Error: UnknownBlock: State already discarded for `0x4aa9f28ea344ea31f406c0f88972653807a1d049db57eae98ee2202081416628`    
test sync::syncs_state ... ok
test sync::does_not_sync_announced_old_best_block ... ok
test sync::warp_sync_to_target_block ... ok
test sync::warp_sync ... ok
test sync::syncs_indexed_blocks ... ok
test service::notifications_state_consistent ... ok
test service::lots_of_incoming_peers_works ... ok
test service::notifications_back_pressure ... ok
test block_import::async_import_queue_drops has been running for over 60 seconds
test sync::continue_to_sync_after_some_block_announcement_verifications_failed has been running for over 60 seconds
test sync::multiple_requests_are_accepted_as_long_as_they_are_not_fulfilled has been running for over 60 seconds
test sync::continue_to_sync_after_some_block_announcement_verifications_failed ... ok
test sync::sync_to_tip_when_we_sync_together_with_multiple_peers has been running for over 60 seconds
test sync::syncs_huge_blocks has been running for over 60 seconds
test sync::multiple_requests_are_accepted_as_long_as_they_are_not_fulfilled ... ok
test block_import::async_import_queue_drops ... ok
test sync::sync_to_tip_when_we_sync_together_with_multiple_peers ... ok
test sync::syncs_huge_blocks ... ok

test result: ok. 55 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 89.43s

     Running unittests src/lib.rs (target/debug/deps/sc_network_transactions-130f42d4f0a29fe3)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_offchain-3d5b4ee0471d06d9)

running 19 tests
test api::tests::should_set_and_get_local_storage ... ok
test api::tests::should_compare_and_set_local_storage ... ok
test api::tests::should_compare_and_set_local_storage_with_none ... ok
test api::tests::should_convert_network_states ... ok
test api::tests::should_get_timestamp ... ok
test api::tests::should_get_random_seed ... ok
[2mMar 24 12:55:40.800[0m [31mERROR[0m offchain-worker::http: Requested started id=39 method=lol uri=nope
test api::http::tests::shared_http_client_is_only_initialized_on_access ... ok
[2mMar 24 12:55:40.807[0m [31mERROR[0m offchain-worker::http: Requested started id=1533 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.807[0m [31mERROR[0m offchain-worker::http: Requested started id=455 method=POST uri=http://127.0.0.1:45587
test api::http::tests::request_start_invalid_call ... ok
[2mMar 24 12:55:40.807[0m [31mERROR[0m offchain-worker::http: Requested started id=1943 method=POST uri=http://127.0.0.1:38835
[2mMar 24 12:55:40.807[0m [31mERROR[0m offchain-worker::http: Requested started id=1944 method=POST uri=http://127.0.0.1:38835
[2mMar 24 12:55:40.807[0m [31mERROR[0m offchain-worker::http: Requested started id=507 method=POST uri=http://127.0.0.1:42017
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=271 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=508 method=POST uri=http://127.0.0.1:42017
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=950 method=GET uri=http://127.0.0.1:32803
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1467 method=POST uri=http://127.0.0.1:40139
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1851 method=GET uri=http://127.0.0.1:36607
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=509 method=GET uri=http://127.0.0.1:42017
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1852 method=POST uri=http://127.0.0.1:36607
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1853 method=POST uri=http://127.0.0.1:36607
test api::http::tests::response_header_invalid_call ... ok
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1854 method=GET uri=http://127.0.0.1:36607
[2mMar 24 12:55:40.808[0m [31mERROR[0m offchain-worker::http: Requested started id=1855 method=GET uri=http://127.0.0.1:36607
[2mMar 24 12:55:40.812[0m [31mERROR[0m offchain-worker::http: Requested started id=272 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.868[0m [31mERROR[0m offchain-worker::http: Requested started id=273 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.869[0m [31mERROR[0m offchain-worker::http: Requested started id=274 method=POST uri=http://127.0.0.1:33719
test api::http::tests::basic_http2_localhost ... ok
test api::http::tests::response_read_body_invalid_call ... ok
test api::http::tests::basic_localhost ... ok
test api::http::tests::request_add_header_invalid_call ... ok
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=1534 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=275 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=276 method=GET uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=277 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=1535 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.870[0m [31mERROR[0m offchain-worker::http: Requested started id=278 method=POST uri=http://127.0.0.1:33719
[2mMar 24 12:55:40.871[0m [31mERROR[0m offchain-worker::http: Requested started id=1536 method=POST uri=http://127.0.0.1:38907
test api::http::tests::request_write_body_invalid_call ... ok
[2mMar 24 12:55:40.871[0m [31mERROR[0m offchain-worker::http: Requested started id=1537 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.872[0m [31mERROR[0m offchain-worker::http: Requested started id=1538 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.872[0m [31mERROR[0m offchain-worker::http: Requested started id=1539 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.873[0m [31mERROR[0m offchain-worker::http: Requested started id=1540 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.873[0m [31mERROR[0m offchain-worker::http: Requested started id=1541 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.874[0m [31mERROR[0m offchain-worker::http: Requested started id=1542 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.874[0m [31mERROR[0m offchain-worker::http: Requested started id=1543 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.875[0m [31mERROR[0m offchain-worker::http: Requested started id=1544 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.875[0m [31mERROR[0m offchain-worker::http: Requested started id=1545 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.876[0m [31mERROR[0m offchain-worker::http: Requested started id=1546 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.877[0m [31mERROR[0m offchain-worker::http: Requested started id=1547 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.877[0m [31mERROR[0m offchain-worker::http: Requested started id=1548 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.878[0m [31mERROR[0m offchain-worker::http: Requested started id=1549 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.878[0m [31mERROR[0m offchain-worker::http: Requested started id=1550 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.879[0m [31mERROR[0m offchain-worker::http: Requested started id=1551 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.879[0m [31mERROR[0m offchain-worker::http: Requested started id=1552 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.879[0m [31mERROR[0m offchain-worker::http: Requested started id=1553 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.880[0m [31mERROR[0m offchain-worker::http: Requested started id=1554 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.880[0m [31mERROR[0m offchain-worker::http: Requested started id=1555 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.881[0m [31mERROR[0m offchain-worker::http: Requested started id=1556 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.881[0m [31mERROR[0m offchain-worker::http: Requested started id=1557 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.882[0m [31mERROR[0m offchain-worker::http: Requested started id=1558 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.882[0m [31mERROR[0m offchain-worker::http: Requested started id=1559 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.883[0m [31mERROR[0m offchain-worker::http: Requested started id=1560 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.883[0m [31mERROR[0m offchain-worker::http: Requested started id=1561 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.884[0m [31mERROR[0m offchain-worker::http: Requested started id=1562 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.884[0m [31mERROR[0m offchain-worker::http: Requested started id=1563 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.885[0m [31mERROR[0m offchain-worker::http: Requested started id=1564 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.885[0m [31mERROR[0m offchain-worker::http: Requested started id=1565 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.886[0m [31mERROR[0m offchain-worker::http: Requested started id=1566 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.886[0m [31mERROR[0m offchain-worker::http: Requested started id=1567 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.886[0m [31mERROR[0m offchain-worker::http: Requested started id=1568 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.887[0m [31mERROR[0m offchain-worker::http: Requested started id=1569 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.887[0m [31mERROR[0m offchain-worker::http: Requested started id=1570 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.888[0m [31mERROR[0m offchain-worker::http: Requested started id=1571 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.888[0m [31mERROR[0m offchain-worker::http: Requested started id=1572 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.889[0m [31mERROR[0m offchain-worker::http: Requested started id=1573 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.889[0m [31mERROR[0m offchain-worker::http: Requested started id=1574 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.890[0m [31mERROR[0m offchain-worker::http: Requested started id=1575 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.890[0m [31mERROR[0m offchain-worker::http: Requested started id=1576 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.890[0m [31mERROR[0m offchain-worker::http: Requested started id=1577 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.891[0m [31mERROR[0m offchain-worker::http: Requested started id=1578 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.891[0m [31mERROR[0m offchain-worker::http: Requested started id=1579 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.892[0m [31mERROR[0m offchain-worker::http: Requested started id=1580 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.892[0m [31mERROR[0m offchain-worker::http: Requested started id=1581 method=POST uri=http://127.0.0.1:38907
[2mMar 24 12:55:40.893[0m [31mERROR[0m offchain-worker::http: Requested started id=1582 method=POST uri=http://127.0.0.1:38907
test api::http::tests::fuzzing ... ok
test api::tests::should_sleep ... ok
[2mMar 24 12:55:40.908[0m [31mERROR[0m offchain-worker::http: Requested started id=1945 method=GET uri=http://127.0.0.1:38835
[2mMar 24 12:55:40.908[0m [31mERROR[0m offchain-worker::http: Requested started id=1946 method=GET uri=http://127.0.0.1:38835
test api::http::tests::response_headers_invalid_call ... ok
test tests::should_call_into_runtime_and_produce_extrinsic ... ok
test tests::offchain_index_set_and_clear_works ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.17s

     Running unittests src/lib.rs (target/debug/deps/sc_peerset-664603a81b2cdf08)

running 11 tests
test tests::test_peerset_reject_incoming_in_reserved_only ... ok
test peersstate::tests::disconnect_no_slot_doesnt_panic ... ok
test peersstate::tests::highest_not_connected_peer ... ok
test peersstate::tests::full_slots_in ... ok
test peersstate::tests::disconnecting_frees_slot ... ok
test peersstate::tests::no_slot_node_doesnt_use_slot ... ok
test tests::test_peerset_discovered ... ok
test tests::test_peerset_incoming ... ok
test tests::test_relloc_after_banned ... ok
test tests::test_peerset_add_reserved_peer ... ok
test tests::test_peerset_banned ... ok

test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.50s

     Running tests/fuzz.rs (target/debug/deps/fuzz-d1d780cd6839f7c0)

running 1 test
test run ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.06s

     Running unittests src/lib.rs (target/debug/deps/sc_proposer_metrics-e21b5eacabb5509b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_rpc-2aa8df025809f67b)

running 50 tests
test offchain::tests::offchain_calls_considered_unsafe ... ok
test state::tests::should_deserialize_storage_key ... ok
test offchain::tests::local_storage_should_work ... ok
test system::tests::system_chain_works ... ok
test system::tests::system_health ... ok
test system::tests::system_local_listen_addresses_works ... ok
test system::tests::system_local_peer_id_works ... ok
test system::tests::system_name_works ... ok
test system::tests::system_network_add_reserved ... ok
test system::tests::system_network_remove_reserved ... ok
test system::tests::system_network_reserved_peers ... ok
test system::tests::system_network_state ... ok
test system::tests::system_node_roles ... ok
test system::tests::system_peers ... ok
test system::tests::system_properties_works ... ok
test system::tests::system_sync_state ... ok
test system::tests::system_type_works ... ok
test system::tests::system_version_works ... ok

running 1 test
test state::utils::tests::spawn_blocking_with_timeout_works ... ok
test system::tests::test_add_reset_log_filter ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 49 filtered out; finished in 0.21s

test system::tests::test_add_reset_log_filter ... ok
test state::tests::concrete_storage_subscriptions_are_rpc_safe ... ok
test state::tests::should_call_contract ... ok
test state::tests::should_return_storage_entries ... ok
test chain::tests::should_return_header ... ok
test state::tests::should_return_child_storage_entries ... ok
test state::tests::wildcard_storage_subscriptions_are_rpc_unsafe ... ok
test state::tests::should_return_child_storage ... ok
test state::tests::should_return_storage ... ok
test author::tests::author_should_insert_key ... ok
test state::tests::should_return_runtime_version ... ok
test author::tests::author_has_key ... ok
test chain::tests::should_return_a_block ... ok
test chain::tests::should_notify_about_finalized_block ... ok
test dev::tests::deny_unsafe_works ... ok
test chain::tests::should_notify_about_best_block ... ok
test state::tests::should_notify_on_runtime_version_initially ... ok
test chain::tests::should_notify_about_latest_block ... ok
test chain::tests::should_return_block_hash ... ok
test author::tests::author_submit_transaction_should_not_cause_error ... ok
test chain::tests::should_return_finalized_hash ... ok
test dev::tests::block_stats_work ... ok
test state::tests::should_send_initial_storage_changes_and_notifications ... ok
test state::tests::should_notify_about_storage_changes ... ok
test author::tests::author_should_rotate_keys ... ok
test author::tests::author_should_return_pending_extrinsics ... ok
test author::tests::author_should_return_watch_validation_error ... ok
test author::tests::author_should_watch_extrinsic ... ok
test author::tests::author_should_remove_extrinsics ... ok
test author::tests::author_has_session_keys ... ok
test state::tests::should_query_storage ... ok

test result: ok. 50 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.78s

     Running unittests src/lib.rs (target/debug/deps/sc_rpc_api-5ff17cb9a646f82c)

running 3 tests
test system::helpers::tests::should_serialize_health ... ok
test system::helpers::tests::should_serialize_peer_info ... ok
test system::helpers::tests::should_serialize_sync_state ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_rpc_server-00ee7e165dea9ca9)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_rpc_spec_v2-6453ebe98c775e87)

running 42 tests
test chain_head::event::tests::chain_head_disjoint_event ... ok
test chain_head::event::tests::chain_head_error_event ... ok
test chain_head::event::tests::chain_head_inaccessible_event ... ok
test chain_head::event::tests::chain_head_done_event ... ok
test chain_head::event::tests::chain_head_network_config ... ok
test chain_head::event::tests::follow_best_block_changed_event ... ok
test chain_head::event::tests::follow_initialized_event_no_updates ... ok
test chain_head::event::tests::follow_new_block_event_no_updates ... ok
test chain_head::event::tests::follow_stop_event ... ok
test chain_head::event::tests::follow_finalized_event ... ok
test chain_head::event::tests::follow_initialized_event_with_updates ... ok
test chain_head::event::tests::follow_new_block_event_with_updates ... ok
test chain_head::subscription::tests::subscription_check_id ... ok
test chain_head::subscription::tests::subscription_check_data ... ok
test chain_head::subscription::tests::subscription_check_stop_event ... ok
test chain_head::subscription::tests::subscription_check_block ... ok
test chain_head::subscription::tests::subscription_check_max_pinned ... ok
test transaction::event::tests::broadcasted_event ... ok
test transaction::event::tests::validated_event ... ok
test transaction::event::tests::error_event ... ok
test transaction::event::tests::finalized_event ... ok
test transaction::event::tests::dropped_event ... ok
test transaction::event::tests::invalid_event ... ok
test transaction::event::tests::best_chain_event ... ok
test chain_spec::tests::chain_spec_genesis_hash_works ... ok
test chain_spec::tests::chain_spec_chain_name_works ... ok
test chain_spec::tests::chain_spec_properties_works ... ok
test chain_head::tests::get_genesis ... ok
test chain_head::tests::get_storage_wrong_key ... ok
test chain_head::tests::follow_with_unpin ... ok
test chain_head::tests::follow_subscription_produces_blocks ... ok
test chain_head::tests::call_runtime ... FAILED
test chain_head::tests::follow_generates_initial_blocks ... ok
test chain_head::tests::get_storage ... ok
test chain_head::tests::get_header ... ok
test chain_head::tests::follow_prune_best_block ... ok
test chain_head::tests::get_body ... ok
test chain_head::tests::call_runtime_without_flag ... ok
test chain_head::tests::follow_exceeding_pinned_blocks ... ok
test chain_head::tests::follow_report_multiple_pruned_block ... ok
test chain_head::tests::follow_forks_pruned_block ... ok
test chain_head::tests::follow_with_runtime ... ok

failures:

---- chain_head::tests::call_runtime stdout ----
thread 'chain_head::tests::call_runtime' panicked at 'assertion failed: `Done(ChainHeadResult { result: "0x0000000000000000000000000000000006000000000000000cd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d01000000000000008eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48010000000000000090b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe220100000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000a0000000000000001" })` does not match `ChainHeadEvent::Error(event) if event.error.contains("Execution failed")`', client/rpc-spec-v2/src/chain_head/tests.rs:435:5
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    chain_head::tests::call_runtime

test result: FAILED. 41 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.54s

error: test failed, to rerun pass `-p sc-rpc-spec-v2 --lib`
     Running unittests src/lib.rs (target/debug/deps/sc_runtime_test-68b173ba36a6b708)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_service-1d660929b967c350)

running 14 tests
test task_manager::tests::ensure_drop_tester_working ... ok
test client::wasm_override::tests::should_get_runtime_version ... ok
test client::wasm_override::tests::should_scrape_wasm ... ok
test client::wasm_override::tests::should_ignore_non_wasm ... ok
test client::wasm_override::tests::should_check_for_duplicates ... ok
test task_manager::tests::ensure_tasks_are_awaited_on_shutdown ... ok
test task_manager::tests::ensure_keep_alive_during_shutdown ... ok
test task_manager::tests::ensure_task_manager_future_ends_with_error_when_childs_essential_task_fails ... ok
test task_manager::tests::ensure_task_manager_future_ends_with_error_when_essential_task_fails ... ok
test client::call_executor::tests::should_get_override_if_exists ... ok
test client::call_executor::tests::returns_runtime_version_from_substitute ... ok
test tests::should_not_propagate_transactions_that_are_marked_as_such ... ok
test task_manager::tests::ensure_blocking_futures_are_awaited_on_shutdown ... ok
test task_manager::tests::ensure_task_manager_future_continues_when_childs_not_essential_task_fails ... ok

test result: ok. 14 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 4.01s

     Running unittests src/lib.rs (target/debug/deps/sc_service_test-0dbf6bb3059bd8aa)

running 32 tests
test client::db::in_memory_offchain_storage ... ok
[2mMar 24 12:55:57.038[0m [31mERROR[0m runtime: panicked at 'Inability to pay some fees (e.g. account balance too low)', /home/miszka/parity/09-test-runtime/substrate-2/frame/executive/src/lib.rs:506:17    
test client::construct_genesis_should_work_with_wasm ... ok
test client::construct_genesis_with_bad_transaction_should_panic ... ok
test client::construct_genesis_should_work_with_native ... ok
test client::uncles_with_only_ancestors ... ok
test client::storage_keys_prefix_and_start_key_works ... ok
test client::storage_keys_works ... ok
test client::get_block_by_bad_block_hash_returns_none ... ok
test client::best_containing_with_genesis_block ... ok
test client::expect_block_hash_by_block_number_doesnt_panic ... ok
test client::get_hash_by_block_number_doesnt_panic ... ok
test client::cleans_up_closed_notification_sinks_on_block_import ... ok
test client::finality_target_on_longest_chain_with_max_depth_higher_than_best ... ok
test client::finality_target_on_longest_chain_with_single_chain_3_blocks ... ok
test client::block_builder_works_with_no_transactions ... ok
test client::import_with_justification ... ok
test client::finalizing_diverged_block_should_trigger_reorg ... ok
test client::importing_diverged_finalized_block_should_trigger_reorg ... ok
test client::client_initializes_from_genesis_ok ... ok
test client::finality_target_with_best_not_on_longest_chain ... ok
test client::use_dalek_ext_works ... ok
test client::reorg_triggers_a_notification_even_for_sources_that_should_not_trigger_notifications ... ok
test client::block_builder_does_not_include_invalid ... ok
test client::block_builder_works_with_transactions ... ok
test client::doesnt_import_blocks_that_revert_finality ... ok
test client::db::test_blockchain_query_by_number_gets_canonical ... ok
test client::uncles_with_multiple_forks ... ok
test client::db::test_leaves_with_complex_block_tree ... ok
test client::finality_notifications_content ... ok
test client::state_reverted_on_reorg ... ok
test client::finality_target_on_longest_chain_with_multiple_forks ... ok
test client::respects_block_rules ... ok

test result: ok. 32 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.21s

     Running unittests src/lib.rs (target/debug/deps/sc_state_db-18442c6964ebbef7)

running 42 tests
test noncanonical::tests::created_from_empty_db ... ok
test pruning::tests::created_from_empty_db ... ok
test noncanonical::tests::insert_existing_fails ... ok
test noncanonical::tests::remove_works ... ok
test noncanonical::tests::insert_and_canonicalize ... ok
test noncanonical::tests::keeps_pinned ... ok
test noncanonical::tests::keeps_pinned_ref_count ... ok
test noncanonical::tests::insert_revert ... ok
test noncanonical::tests::insert_canonicalize_two ... ok
test noncanonical::tests::insert_same_key ... ok
test noncanonical::tests::insert_canonicalize_one ... ok
test noncanonical::tests::pins_canonicalized ... ok
test noncanonical::tests::insert_unknown_parent_panics - should panic ... ok
test noncanonical::tests::insert_behind_panics - should panic ... ok
test noncanonical::tests::canonicalize_empty_panics - should panic ... ok
test noncanonical::tests::canonicalize_unknown_panics - should panic ... ok
test noncanonical::tests::insert_ahead_panics - should panic ... ok
test noncanonical::tests::pin_keeps_parent ... ok
test pruning::tests::prune_empty ... ok
test noncanonical::tests::restore_from_journal_after_canonicalize ... ok
test noncanonical::tests::index_reuse ... ok
test pruning::tests::init_db_backed_queue ... ok
test noncanonical::tests::restore_from_journal ... ok
test noncanonical::tests::restore_from_journal_after_canonicalize_no_first ... ok
test pruning::tests::prune_one ... ok
test pruning::tests::prune_two_pending ... ok
test pruning::tests::reinserted_ignores ... ok
test pruning::tests::reinserted_survive_pending ... ok
test pruning::tests::prune_two ... ok
test tests::detects_incompatible_mode ... ok
test tests::prune_window_0 ... ok
test tests::block_record_unavailable ... ok
test tests::canonical_archive_keeps_canonical ... ok
test pruning::tests::reinserted_survives ... ok
test noncanonical::tests::complex_tree ... ok
test tests::prune_window_2 ... ok
test tests::pruning_mode_compatibility ... ok
test tests::full_archive_keeps_everything ... ok
test tests::prune_window_1 ... ok
test pruning::tests::get_block_from_queue ... ok
test pruning::tests::db_backed_queue ... ok
test pruning::tests::load_block_from_db ... ok

test result: ok. 42 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/sc_storage_monitor-062fe74f9469020b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_sync_state_rpc-872eadb8dc1ad76e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_sysinfo-7aedbd5d532fb8d5)

running 8 tests
test sysinfo::tests::throughput_works ... ok
test sysinfo::tests::hwbench_serialize_works ... ok
test sysinfo::tests::test_gather_sysinfo_linux ... ok
test sysinfo::tests::test_benchmark_cpu ... ok
test sysinfo::tests::test_benchmark_sr25519_verify ... ok
test sysinfo::tests::test_benchmark_disk_sequential_writes ... ok
test sysinfo::tests::test_benchmark_disk_random_writes ... ok
test sysinfo::tests::test_benchmark_memory ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.78s

     Running unittests src/lib.rs (target/debug/deps/sc_telemetry-db2fae2c9a9d5f2a)

running 3 tests
test endpoints::tests::invalid_endpoints ... ok
test endpoints::tests::valid_and_invalid_endpoints ... ok
test endpoints::tests::valid_endpoints ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_tracing-4f63053583d3a9bf)

running 18 tests
test logging::tests::do_not_write_with_colors_on_tty_entrypoint ... ok
test logging::tests::log_something_with_dash_target_name ... ok
test logging::tests::prefix_in_log_lines_entrypoint ... ok
test logging::fast_local_time::test_format_fast_local_time ... ok
test tests::test_span ... ok
test tests::test_span_values ... ok
test tests::test_span_parent_id ... ok
test tests::test_event ... ok
test tests::test_event_parent_id ... ok
test tests::test_parent_id_with_threads ... ok
test logging::tests::dash_in_target_name_works ... ok
test logging::tests::test_logger_filters ... ok
test logging::tests::control_characters_are_always_stripped_out_from_the_log_messages ... ok
test logging::tests::prefix_in_log_lines ... ok
test logging::tests::do_not_write_with_colors_on_tty ... ok
test logging::tests::log_max_level_is_set_properly ... ok
test logging::tests::parallel_logs_from_multiple_threads_are_properly_gathered ... ok
test logging::tests::huge_single_line_log_is_properly_printed_out ... ok

test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.70s

     Running unittests src/lib.rs (target/debug/deps/sc_tracing_proc_macro-c89937e69db0968c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_transaction_pool-510cae704b636fee)

running 68 tests
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_11 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_17 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_13 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_10 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_09 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_08 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_03 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_01 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_16 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_06 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_15 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_05 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_14 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_04 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_12 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_07 ... ok
test enactment_state::enactment_state_tests::mock_tree_route_tests::tree_route_mock_test_02 ... ok
test graph::base_pool::tests::transaction_propagation ... ok
test graph::base_pool::tests::transaction_debug ... ok
test graph::base_pool::tests::should_reject_future_transactions ... ok
test graph::base_pool::tests::should_import_transaction_to_ready ... ok
test graph::base_pool::tests::should_accept_future_transactions_when_explicitly_asked_to ... ok
test graph::base_pool::tests::should_not_import_same_transaction_twice ... ok
test graph::base_pool::tests::should_clear_future_queue ... ok
test graph::base_pool::tests::should_import_transaction_to_future_and_promote_it_later ... ok
test graph::base_pool::tests::should_remove_invalid_transactions ... ok
test graph::base_pool::tests::should_handle_a_cycle ... ok
test graph::base_pool::tests::should_handle_a_cycle_with_low_priority ... ok
test graph::base_pool::tests::should_prune_ready_transactions ... ok
test graph::base_pool::tests::should_promote_a_subgraph ... ok
test enactment_state::enactment_state_tests::test_enactment_skip_long_enacted_path ... ok
test enactment_state::enactment_state_tests::test_enactment_forced_update_finalize ... ok
test enactment_state::enactment_state_tests::test_enactment_proceed_with_enacted_path_at_threshold ... ok
test enactment_state::enactment_state_tests::test_enactment_forced_update_best_block ... ok
test enactment_state::enactment_state_tests::test_enactment_helper_3 ... ok
test enactment_state::enactment_state_tests::test_enactment_helper_2 ... ok
test enactment_state::enactment_state_tests::test_enactment_helper_4 ... ok
test enactment_state::enactment_state_tests::test_enactment_helper_6 ... ok
test enactment_state::enactment_state_tests::test_enactment_helper_5 ... ok
test graph::ready::tests::should_order_refs ... ok
test enactment_state::enactment_state_tests::test_enactment_helper ... ok
test graph::rotator::tests::should_ban_stale_extrinsic ... ok
test graph::ready::tests::should_return_best_transactions_in_correct_order ... ok
test graph::ready::tests::should_replace_transaction_that_provides_the_same_tag ... ok
test graph::rotator::tests::should_clear_banned ... ok
test graph::ready::tests::should_replace_multiple_transactions_correctly ... ok
test graph::rotator::tests::should_not_ban_if_not_stale ... ok
test graph::tracked_map::tests::basic ... ok
test graph::ready::tests::should_skip_invalid_transactions_while_iterating ... ok
test graph::rotator::tests::should_garbage_collect ... ok
test graph::pool::tests::should_error_if_reject_immediately ... ok
test graph::pool::tests::should_reject_if_temporarily_banned ... ok
test graph::pool::tests::listener::should_trigger_broadcasted ... ok
test graph::pool::tests::listener::should_trigger_ready_and_finalized ... ok
test revalidation::tests::revalidation_queue_works ... ok
test graph::pool::tests::listener::should_trigger_ready_and_finalized_when_pruning_via_hash ... ok
test graph::pool::tests::listener::should_trigger_invalid_and_ban ... ok
test graph::pool::tests::should_ban_mined_transactions ... ok
test graph::pool::tests::should_reject_unactionable_transactions ... ok
test graph::pool::tests::should_validate_and_import_transaction ... ok
test graph::pool::tests::should_reject_transactions_with_no_provides ... ok
test graph::pool::tests::listener::should_trigger_future_and_ready_after_promoted ... ok
test graph::pool::tests::listener::should_trigger_dropped_older ... ok
test graph::pool::tests::should_limit_futures ... ok
test graph::pool::tests::listener::should_handle_pruning_in_the_middle_of_import ... ok
test graph::pool::tests::should_clear_stale_transactions ... ok
test graph::pool::tests::should_notify_about_pool_events ... ok
test graph::pool::tests::listener::should_trigger_dropped_lower_priority ... ok

test result: ok. 68 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.37s

     Running tests/pool.rs (target/debug/deps/pool-9baa048e076640ca)

running 34 tests
test pruning_a_transaction_should_remove_it_from_best_transaction ... ok
test should_not_resubmit_from_retracted_during_maintenance_if_tx_is_also_in_enacted ... ok
test ready_set_should_eventually_resolve_when_block_update_arrives ... ok
test ready_set_should_resolve_after_block_update ... ok
test should_ban_invalid_transactions ... ok
test best_block_after_finalized_handled_correctly ... ok
test should_prune_old_during_maintenance ... ok
test finalized_only_handled_correctly ... ok
test early_nonce_should_be_culled ... ok
test only_prune_on_new_best ... ok
test ready_set_should_not_resolve_before_block_update ... ok
test finalization ... ok
test prune_and_retract_tx_at_same_time ... ok
test submission_should_work ... ok
test should_resubmit_from_retracted_during_maintenance ... ok
test should_correctly_prune_transactions_providing_more_than_one_tag ... ok
test multiple_submission_should_work ... ok
test prune_tags_should_work ... ok
test delayed_finalization_does_not_retract ... ok
test switching_fork_multiple_times_works ... ok
test best_block_after_finalization_does_not_retract ... ok
test late_nonce_should_be_queued ... ok
test resubmit_tx_of_fork_that_is_not_part_of_retracted ... ok
test should_not_retain_invalid_hashes_from_retracted ... ok
test switching_fork_with_finalized_works ... ok
test should_revalidate_across_many_blocks ... ok
test should_revalidate_during_maintenance ... ok
test two_blocks_delayed_finalization_works ... ok
test fork_aware_finalization ... ok
test stale_transactions_are_pruned ... ok
test resubmit_from_retracted_fork ... ok
test should_push_watchers_during_maintenance ... ok
test should_not_accept_old_signatures ... ok
test import_notification_to_pool_maintain_works ... ok

test result: ok. 34 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.40s

     Running unittests src/lib.rs (target/debug/deps/sc_transaction_pool_api-0d4471477106f7cd)

running 1 test
test tests::tx_status_compatibility ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sc_utils-af1caa57713effce)

running 13 tests
test pubsub::tests::panicking_registry::t01 ... ok
test pubsub::tests::normal_operation::positive_rx_receives_relevant_messages_and_terminates_upon_hub_drop ... ok
test notification::tests::notification_channel_simple ... ok
test pubsub::tests::normal_operation::positive_subs_count_is_correct_upon_drop_of_rxs_on_cloned_hubs ... ok
test pubsub::tests::normal_operation::positive_subs_count_is_correct_upon_drop_of_rxs ... ok
test pubsub::tests::panicking_registry::t04 ... ok
test pubsub::tests::panicking_registry::t03 ... ok
test pubsub::tests::panicking_registry::t07 ... ok
test pubsub::tests::panicking_registry::t02 ... ok
test pubsub::tests::panicking_registry::t08 ... ok
test pubsub::tests::panicking_registry::t05 ... ok
test pubsub::tests::panicking_registry::t06 ... ok
test status_sinks::tests::works ... ok

test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.30s

     Running unittests src/lib.rs (target/debug/deps/sp_api-63af36060b50b9ba)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_api_proc_macro-9d14a5b4cb5f8b55)

running 1 test
test impl_runtime_apis::tests::filter_non_cfg_attributes ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/decl_and_impl.rs (target/debug/deps/decl_and_impl-3d89fa11a2f0e92d)

running 6 tests
test mock_runtime_api_has_api ... ok
test test_client_side_function_signature ... ok
test check_runtime_api_info ... ok
test check_runtime_api_versions ... ok
test mock_runtime_api_works_with_advanced ... ok
test mock_runtime_api_panics_on_calling_old_version - should panic ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/runtime_calls.rs (target/debug/deps/runtime_calls-776e9f9369f97c0c)

running 8 tests
test disable_logging_works ... ok
test calling_wasm_runtime_function ... ok
test initialize_block_works ... ok
test calling_native_runtime_signature_changed_function ... ok
test call_runtime_api_with_multiple_arguments ... ok
test use_trie_function ... ok
test calling_native_runtime_function ... ok
test record_proof_works ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.32s

     Running tests/trybuild.rs (target/debug/deps/trybuild-4e446821f8290147)

running 1 test
test ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_application_crypto-826da32d34bdf5cb)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_application_crypto_test-3465c6b95adf6b41)

running 3 tests
test ecdsa::ecdsa_works_in_runtime ... ok
test sr25519::sr25519_works_in_runtime ... ok
test ed25519::ed25519_works_in_runtime ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.38s

     Running unittests src/lib.rs (target/debug/deps/sp_arithmetic-2923a84509ef0332)

running 367 tests
test biguint::tests::split_works ... ok
test biguint::tests::mul_always_appends_one_digit ... ok
test fixed_point::test_fixed_i128::from_inner_works ... ok
test fixed_point::test_fixed_i128::has_max_encoded_len ... ok
test fixed_point::test_fixed_i128::checked_from_integer_works ... ok
test fixed_point::test_fixed_i128::from_rational_works ... ok
test fixed_point::test_fixed_i128::macro_preconditions ... ok
test biguint::tests::lpad_works ... ok
test biguint::tests::strip_works ... ok
test biguint::tests::equality_works ... ok
test fixed_point::test_fixed_i128::from_i129_works ... ok
test biguint::tests::can_try_build_numbers_from_types ... ok
test biguint::tests::sub_negative_works ... ok
test biguint::tests::zero_works ... ok
test biguint::tests::ordering_works ... ok
test biguint::tests::div_unit_works ... ok
test fixed_point::test_fixed_i128::checked_mul_works ... ok
test fixed_point::test_fixed_i128::op_checked_sub_underflow_works ... ok
test fixed_point::test_fixed_i128::round_works ... ok
test fixed_point::test_fixed_i128::op_neg_works ... ok
test fixed_point::test_fixed_i128::op_checked_div_overflow_works ... ok
test fixed_point::test_fixed_i128::op_checked_mul_overflow_works ... ok
test fixed_point::test_fixed_i128::is_positive_negative_works ... ok
test fixed_point::test_fixed_i128::op_checked_add_overflow_works ... ok
test fixed_point::test_fixed_i128::ceil_works ... ok
test fixed_point::test_fixed_i128::checked_div_int_works ... ok
test fixed_point::test_fixed_i128::checked_from_rational_works ... ok
test biguint::tests::div_conditions_work ... ok
test fixed_point::test_fixed_i128::const_checked_mul_works ... ok
test fixed_point::test_fixed_i128::op_sub_works ... ok
test fixed_point::test_fixed_i128::floor_works ... ok
test fixed_point::test_fixed_i128::saturating_mul_acc_int_works ... ok
test fixed_point::test_fixed_i128::op_add_works ... ok
test fixed_point::test_fixed_i128::perthing_into_works ... ok
test fixed_point::test_fixed_i128::saturating_from_rational_works ... ok
test fixed_point::test_fixed_i128::fmt_should_work ... ok
test fixed_point::test_fixed_i128::checked_div_works ... ok
test fixed_point::test_fixed_i128::op_div_works ... ok
test fixed_point::test_fixed_i128::frac_works ... ok
test fixed_point::test_fixed_i128::checked_mul_int_works ... ok
test fixed_point::test_fixed_i128::op_mul_works ... ok
test fixed_point::test_fixed_i128::saturating_from_integer_works ... ok
test fixed_point::test_fixed_i128::saturating_abs_works ... ok
test fixed_point::test_fixed_i128::saturating_div_int_works ... ok
test fixed_point::test_fixed_i128::to_bound_works ... ok
test fixed_point::test_fixed_i128::saturating_mul_int_works ... ok
test fixed_point::test_fixed_i64::ceil_works ... ok
test fixed_point::test_fixed_i128::trunc_works ... ok
test fixed_point::test_fixed_i64::checked_div_int_works ... ok
test fixed_point::test_fixed_i64::checked_from_rational_works ... ok
test fixed_point::test_fixed_i64::checked_mul_int_works ... ok
test fixed_point::test_fixed_i64::checked_mul_works ... ok
test fixed_point::test_fixed_i64::floor_works ... ok
test fixed_point::test_fixed_i64::const_checked_mul_works ... ok
test fixed_point::test_fixed_i64::frac_works ... ok
test fixed_point::test_fixed_i64::from_i129_works ... ok
test fixed_point::test_fixed_i64::fmt_should_work ... ok
test fixed_point::test_fixed_i64::checked_div_works ... ok
test fixed_point::test_fixed_i64::checked_from_integer_works ... ok
test fixed_point::test_fixed_i64::from_inner_works ... ok
test fixed_point::test_fixed_i64::from_rational_works ... ok
test fixed_point::test_fixed_i64::is_positive_negative_works ... ok
test fixed_point::test_fixed_i64::has_max_encoded_len ... ok
test fixed_point::test_fixed_i64::macro_preconditions ... ok
test fixed_point::test_fixed_i64::op_add_works ... ok
test fixed_point::test_fixed_i64::op_checked_add_overflow_works ... ok
test fixed_point::test_fixed_i64::op_checked_div_overflow_works ... ok
test fixed_point::test_fixed_i128::saturating_pow_should_work ... ok
test fixed_point::test_fixed_i64::op_checked_mul_overflow_works ... ok
test fixed_point::test_fixed_i64::op_checked_sub_underflow_works ... ok
test fixed_point::test_fixed_i64::op_div_works ... ok
test fixed_point::test_fixed_i64::op_mul_works ... ok
test fixed_point::test_fixed_i64::op_neg_works ... ok
test fixed_point::test_fixed_i128::saturating_div_int_panics_when_divisor_is_zero - should panic ... ok
test fixed_point::test_fixed_i128::saturating_from_rational_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_i64::op_sub_works ... ok
test fixed_point::test_fixed_i64::perthing_into_works ... ok
test fixed_point::test_fixed_i64::round_works ... ok
test fixed_point::test_fixed_i64::saturating_abs_works ... ok
test fixed_point::test_fixed_i128::op_div_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_i64::saturating_div_int_works ... ok
test fixed_point::test_fixed_i64::op_div_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_i64::saturating_div_int_panics_when_divisor_is_zero - should panic ... ok
test fixed_point::test_fixed_i64::saturating_from_integer_works ... ok
test fixed_point::test_fixed_i64::saturating_from_rational_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_i64::saturating_mul_acc_int_works ... ok
test fixed_point::test_fixed_i64::saturating_from_rational_works ... ok
test fixed_point::test_fixed_i64::saturating_mul_int_works ... ok
test fixed_point::test_fixed_i64::to_bound_works ... ok
test fixed_point::test_fixed_i64::trunc_works ... ok
test fixed_point::test_fixed_u128::ceil_works ... ok
test fixed_point::test_fixed_u128::checked_div_int_works ... ok
test fixed_point::test_fixed_u128::checked_div_works ... ok
test fixed_point::test_fixed_u128::checked_from_integer_works ... ok
test fixed_point::test_fixed_i64::saturating_pow_should_work ... ok
test fixed_point::test_fixed_u128::checked_from_rational_works ... ok
test fixed_point::test_fixed_u128::checked_mul_int_works ... ok
test fixed_point::test_fixed_u128::checked_mul_works ... ok
test fixed_point::test_fixed_u128::floor_works ... ok
test fixed_point::test_fixed_u128::const_checked_mul_works ... ok
test fixed_point::test_fixed_u128::frac_works ... ok
test fixed_point::test_fixed_u128::fmt_should_work ... ok
test fixed_point::test_fixed_u128::from_i129_works ... ok
test fixed_point::test_fixed_u128::from_inner_works ... ok
test fixed_point::test_fixed_u128::from_rational_works ... ok
test fixed_point::test_fixed_u128::has_max_encoded_len ... ok
test fixed_point::test_fixed_u128::is_positive_negative_works ... ok
test fixed_point::test_fixed_u128::macro_preconditions ... ok
test fixed_point::test_fixed_u128::op_add_works ... ok
test fixed_point::test_fixed_u128::op_checked_add_overflow_works ... ok
test fixed_point::test_fixed_u128::op_checked_div_overflow_works ... ok
test fixed_point::test_fixed_u128::op_checked_mul_overflow_works ... ok
test fixed_point::test_fixed_u128::op_checked_sub_underflow_works ... ok
test fixed_point::test_fixed_u128::op_div_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_u128::op_div_works ... ok
test fixed_point::test_fixed_u128::op_mul_works ... ok
test fixed_point::test_fixed_u128::op_neg_works ... ok
test fixed_point::test_fixed_u128::op_sub_works ... ok
test fixed_point::test_fixed_u128::perthing_into_works ... ok
test fixed_point::test_fixed_u128::round_works ... ok
test fixed_point::test_fixed_u128::saturating_abs_works ... ok
test fixed_point::test_fixed_u128::saturating_div_int_panics_when_divisor_is_zero - should panic ... ok
test fixed_point::test_fixed_u128::saturating_div_int_works ... ok
test fixed_point::test_fixed_u128::saturating_from_integer_works ... ok
test fixed_point::test_fixed_u128::saturating_from_rational_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_u128::saturating_from_rational_works ... ok
test fixed_point::test_fixed_u128::saturating_mul_acc_int_works ... ok
test fixed_point::test_fixed_u128::saturating_mul_int_works ... ok
test fixed_point::test_fixed_u128::to_bound_works ... ok
test fixed_point::test_fixed_u128::trunc_works ... ok
test fixed_point::test_fixed_u64::ceil_works ... ok
test fixed_point::test_fixed_u64::checked_div_int_works ... ok
test fixed_point::test_fixed_u64::checked_from_integer_works ... ok
test fixed_point::test_fixed_u64::checked_div_works ... ok
test fixed_point::test_fixed_u64::checked_from_rational_works ... ok
test fixed_point::test_fixed_u128::saturating_pow_should_work ... ok
test fixed_point::test_fixed_u64::checked_mul_works ... ok
test fixed_point::test_fixed_u64::checked_mul_int_works ... ok
test fixed_point::test_fixed_u64::const_checked_mul_works ... ok
test fixed_point::test_fixed_u64::floor_works ... ok
test fixed_point::test_fixed_u64::fmt_should_work ... ok
test fixed_point::test_fixed_u64::frac_works ... ok
test fixed_point::test_fixed_u64::from_i129_works ... ok
test fixed_point::test_fixed_u64::from_inner_works ... ok
test fixed_point::test_fixed_u64::from_rational_works ... ok
test fixed_point::test_fixed_u64::has_max_encoded_len ... ok
test fixed_point::test_fixed_u64::is_positive_negative_works ... ok
test fixed_point::test_fixed_u64::macro_preconditions ... ok
test fixed_point::test_fixed_u64::op_add_works ... ok
test fixed_point::test_fixed_u64::op_checked_add_overflow_works ... ok
test fixed_point::test_fixed_u64::op_checked_div_overflow_works ... ok
test fixed_point::test_fixed_u64::op_checked_mul_overflow_works ... ok
test fixed_point::test_fixed_u64::op_checked_sub_underflow_works ... ok
test fixed_point::test_fixed_u64::op_div_works ... ok
test fixed_point::test_fixed_u64::op_div_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_u64::op_mul_works ... ok
test fixed_point::test_fixed_u64::op_neg_works ... ok
test fixed_point::test_fixed_u64::op_sub_works ... ok
test fixed_point::test_fixed_u64::perthing_into_works ... ok
test fixed_point::test_fixed_u64::round_works ... ok
test fixed_point::test_fixed_u64::saturating_abs_works ... ok
test fixed_point::test_fixed_u64::saturating_div_int_panics_when_divisor_is_zero - should panic ... ok
test fixed_point::test_fixed_u64::saturating_div_int_works ... ok
test fixed_point::test_fixed_u64::saturating_from_integer_works ... ok
test fixed_point::test_fixed_i64::op_sqrt_works ... ok
test fixed_point::test_fixed_i128::op_sqrt_works ... ok
test fixed_point::test_fixed_u64::saturating_from_rational_panics_on_zero_divisor - should panic ... ok
test fixed_point::test_fixed_u64::saturating_from_rational_works ... ok
test fixed_point::test_fixed_u64::saturating_mul_acc_int_works ... ok
test fixed_point::test_fixed_u64::saturating_mul_int_works ... ok
test fixed_point::test_fixed_u64::to_bound_works ... ok
test fixed_point::test_fixed_u64::trunc_works ... ok
test helpers_128bit::tests::rational_multiply_basic_rounding_works ... ok
test helpers_128bit::tests::rational_multiply_big_number_works ... ok
test fixed_point::test_fixed_u64::saturating_pow_should_work ... ok
test normalize_tests::always_inc_min ... ok
test normalize_tests::can_work_for_peru16 ... ok
test normalize_tests::does_not_fail_on_subtraction_overflow ... ok
test normalize_tests::normalize_works_all_ge ... ok
test normalize_tests::normalize_works_all_le ... ok
test normalize_tests::normalize_works_some_ge ... ok
test normalize_tests::works_for_vec ... ok
test normalize_tests::works_for_per_thing ... ok
test normalize_tests::work_for_all_types ... ok
test normalize_tests::fails_on_if_input_sum_large ... ok
test per_things::test_per_cent::compact_decoding_saturate_when_beyond_accuracy ... ok
test per_things::test_per_cent::compact_encoding ... ok
test per_things::test_per_cent::from_parts_cannot_overflow ... ok
test per_things::test_per_cent::has_max_encoded_len ... ok
test per_things::test_per_cent::const_fns_work ... ok
test per_things::test_per_cent::per_thing_api_works ... ok
test per_things::test_per_cent::macro_expanded_correctly ... ok
test per_things::test_per_cent::per_thing_from_rationale_approx_works ... ok
test per_things::test_per_cent::fail_on_invalid_encoded_value ... ok
test per_things::test_per_cent::per_thing_mul_rounds_to_nearest_number ... ok
test per_things::test_per_cent::has_compact ... ok
test per_things::from_rational_with_rounding_works_in_extreme_case ... ok
test per_things::test_per_cent::per_thing_mul_works ... ok
test per_things::test_per_cent::per_thing_saturating_op_works ... ok
test per_things::test_per_cent::per_thing_multiplication_with_large_number ... ok
test per_things::test_per_cent::per_thing_square_works ... ok
test per_things::test_per_cent::percent_trait_impl_works ... ok
test per_things::test_per_cent::per_things_div_works ... ok
test per_things::test_per_cent::rational_mul_correction_works ... ok
test per_things::test_per_cent::per_things_mul_operates_in_output_type ... ok
test per_things::test_per_cent::saturating_pow_works ... ok
test per_things::test_per_cent::saturating_reciprocal_mul_works ... ok
test per_things::test_per_cent::saturating_truncating_mul_works ... ok
test per_things::test_per_cent::test_add_basic ... ok
test per_things::test_per_cent::test_basic_checked_add ... ok
test per_things::test_per_cent::test_basic_checked_mul ... ok
test per_things::test_per_cent::test_basic_checked_sub ... ok
test per_things::test_per_cent::test_basic_saturating_add ... ok
test per_things::test_per_cent::test_basic_saturating_sub ... ok
test per_things::test_per_cent::test_basic_sub ... ok
test per_things::test_perbill::compact_decoding_saturate_when_beyond_accuracy ... ok
test per_things::test_perbill::compact_encoding ... ok
test per_things::test_perbill::const_fns_work ... ok
test per_things::test_perbill::fail_on_invalid_encoded_value ... ok
test per_things::test_perbill::from_parts_cannot_overflow ... ok
test per_things::test_perbill::has_compact ... ok
test per_things::test_perbill::has_max_encoded_len ... ok
test per_things::test_perbill::macro_expanded_correctly ... ok
test per_things::test_perbill::per_thing_api_works ... ok
test per_things::test_perbill::per_thing_from_rationale_approx_works ... ok
test per_things::test_perbill::per_thing_mul_rounds_to_nearest_number ... ok
test per_things::test_perbill::per_thing_saturating_op_works ... ok
test per_things::test_perbill::per_thing_mul_works ... ok
test per_things::test_perbill::per_thing_multiplication_with_large_number ... ok
test per_things::test_perbill::per_thing_square_works ... ok
test per_things::test_perbill::per_things_div_works ... ok
test per_things::test_perbill::per_things_mul_operates_in_output_type ... ok
test per_things::test_perbill::percent_trait_impl_works ... ok
test per_things::test_perbill::rational_mul_correction_works ... ok
test per_things::test_perbill::saturating_pow_works ... ok
test per_things::test_perbill::saturating_reciprocal_mul_works ... ok
test per_things::test_perbill::saturating_truncating_mul_works ... ok
test per_things::test_perbill::test_add_basic ... ok
test per_things::test_perbill::test_basic_checked_add ... ok
test per_things::test_perbill::test_basic_checked_mul ... ok
test per_things::test_perbill::test_basic_checked_sub ... ok
test per_things::test_perbill::test_basic_saturating_add ... ok
test per_things::test_perbill::test_basic_saturating_sub ... ok
test per_things::test_perbill::test_basic_sub ... ok
test per_things::test_perbill_extra::const_fns_work ... ok
test per_things::test_perbill_extra::from_perthousand_works ... ok
test per_things::test_permill::compact_decoding_saturate_when_beyond_accuracy ... ok
test per_things::test_permill::compact_encoding ... ok
test per_things::test_permill::const_fns_work ... ok
test per_things::test_permill::fail_on_invalid_encoded_value ... ok
test per_things::test_permill::from_parts_cannot_overflow ... ok
test per_things::test_permill::has_compact ... ok
test per_things::test_permill::has_max_encoded_len ... ok
test fixed_point::test_fixed_u64::op_sqrt_works ... ok
test per_things::test_permill::macro_expanded_correctly ... ok
test per_things::test_permill::per_thing_api_works ... ok
test per_things::test_permill::per_thing_mul_rounds_to_nearest_number ... ok
test per_things::test_permill::per_thing_from_rationale_approx_works ... ok
test per_things::test_permill::per_thing_mul_works ... ok
test per_things::test_permill::per_thing_multiplication_with_large_number ... ok
test per_things::test_permill::per_thing_saturating_op_works ... ok
test per_things::test_permill::per_thing_square_works ... ok
test per_things::test_permill::per_things_div_works ... ok
test per_things::test_permill::per_things_mul_operates_in_output_type ... ok
test per_things::test_permill::percent_trait_impl_works ... ok
test per_things::test_permill::rational_mul_correction_works ... ok
test per_things::test_permill::saturating_pow_works ... ok
test per_things::test_permill::saturating_reciprocal_mul_works ... ok
test per_things::test_permill::saturating_truncating_mul_works ... ok
test per_things::test_permill::test_add_basic ... ok
test per_things::test_permill::test_basic_checked_add ... ok
test per_things::test_permill::test_basic_checked_mul ... ok
test per_things::test_permill::test_basic_checked_sub ... ok
test per_things::test_permill::test_basic_saturating_add ... ok
test per_things::test_permill::test_basic_saturating_sub ... ok
test per_things::test_permill::test_basic_sub ... ok
test per_things::test_permill_extra::const_fns_work ... ok
test per_things::test_permill_extra::from_perthousand_works ... ok
test per_things::test_perquintill::compact_decoding_saturate_when_beyond_accuracy ... ok
test per_things::test_perquintill::compact_encoding ... ok
test per_things::test_perquintill::const_fns_work ... ok
test per_things::test_perquintill::fail_on_invalid_encoded_value ... ok
test per_things::test_perquintill::from_parts_cannot_overflow ... ok
test fixed_point::test_fixed_u128::op_sqrt_works ... ok
test per_things::test_perquintill::has_compact ... ok
test per_things::test_perquintill::has_max_encoded_len ... ok
test per_things::test_perquintill::macro_expanded_correctly ... ok
test per_things::test_perquintill::per_thing_api_works ... ok
test per_things::test_perquintill::per_thing_from_rationale_approx_works ... ok
test per_things::test_perquintill::per_thing_mul_rounds_to_nearest_number ... ok
test per_things::test_perquintill::per_thing_mul_works ... ok
test per_things::test_perquintill::per_thing_multiplication_with_large_number ... ok
test per_things::test_perquintill::per_thing_saturating_op_works ... ok
test per_things::test_perquintill::per_thing_square_works ... ok
test per_things::test_perquintill::per_things_div_works ... ok
test per_things::test_perquintill::per_things_mul_operates_in_output_type ... ok
test per_things::test_perquintill::percent_trait_impl_works ... ok
test per_things::test_perquintill::rational_mul_correction_works ... ok
test per_things::test_perquintill::saturating_pow_works ... ok
test per_things::test_perquintill::saturating_reciprocal_mul_works ... ok
test per_things::test_perquintill::saturating_truncating_mul_works ... ok
test per_things::test_perquintill::test_add_basic ... ok
test per_things::test_perquintill::test_basic_checked_add ... ok
test per_things::test_perquintill::test_basic_checked_mul ... ok
test per_things::test_perquintill::test_basic_checked_sub ... ok
test per_things::test_perquintill::test_basic_saturating_add ... ok
test per_things::test_perquintill::test_basic_saturating_sub ... ok
test per_things::test_perquintill::test_basic_sub ... ok
test per_things::test_perquintill_extra::const_fns_work ... ok
test per_things::test_perquintill_extra::from_perthousand_works ... ok
test per_things::test_peru16::compact_decoding_saturate_when_beyond_accuracy ... ok
test per_things::test_peru16::compact_encoding ... ok
test per_things::test_peru16::const_fns_work ... ok
test per_things::test_peru16::fail_on_invalid_encoded_value ... ok
test per_things::test_peru16::from_parts_cannot_overflow ... ok
test per_things::test_peru16::has_compact ... ok
test per_things::test_peru16::has_max_encoded_len ... ok
test per_things::test_peru16::macro_expanded_correctly ... ok
test per_things::test_peru16::per_thing_api_works ... ok
test per_things::test_peru16::per_thing_from_rationale_approx_works ... ok
test per_things::test_peru16::per_thing_mul_rounds_to_nearest_number ... ok
test per_things::test_peru16::per_thing_multiplication_with_large_number ... ok
test per_things::test_peru16::per_thing_mul_works ... ok
test per_things::test_peru16::per_thing_saturating_op_works ... ok
test per_things::test_peru16::per_thing_square_works ... ok
test per_things::test_peru16::per_things_div_works ... ok
test per_things::test_peru16::per_things_mul_operates_in_output_type ... ok
test per_things::test_peru16::percent_trait_impl_works ... ok
test per_things::test_peru16::rational_mul_correction_works ... ok
test per_things::test_peru16::saturating_reciprocal_mul_works ... ok
test per_things::test_peru16::saturating_pow_works ... ok
test per_things::test_peru16::saturating_truncating_mul_works ... ok
test per_things::test_peru16::test_add_basic ... ok
test per_things::test_peru16::test_basic_checked_add ... ok
test per_things::test_peru16::test_basic_checked_mul ... ok
test per_things::test_peru16::test_basic_checked_sub ... ok
test per_things::test_peru16::test_basic_saturating_add ... ok
test per_things::test_peru16::test_basic_saturating_sub ... ok
test per_things::test_peru16::test_basic_sub ... ok
test per_things::test_peru16_extra::const_fns_work ... ok
test per_things::test_peru16_extra::from_perthousand_works ... ok
test rational::tests::gdc_works ... ok
test rational::tests::multiply_by_rational_with_rounding_fuzzed_equation ... ignored
test rational::tests::multiply_by_rational_with_rounding_a_b_are_interchangeable ... ok
test rational::tests::to_denom_works ... ok
test rational::tests::multiply_by_rational_with_rounding_works ... ok
test rational::tests::truth_value_function_works ... ok
test threshold_compare_tests::peru16_rational_does_not_overflow ... ok
test threshold_compare_tests::saturating_mul_works ... ok
test threshold_compare_tests::epsilon_ord_works ... ok
test rational::tests::ordering_and_eq_works ... ok
test threshold_compare_tests::saturating_pow_works ... ok
test threshold_compare_tests::epsilon_ord_works_with_small_epc ... ok
test rational::tests::add_works ... ok
test rational::tests::lcm_works ... ok
test rational::tests::sub_works ... ok
test traits::tests::ensure_add_works ... ok
test traits::tests::ensure_div_assign_works ... ok
test traits::tests::ensure_div_works ... ok
test traits::tests::ensure_sub_assign_works ... ok
test traits::tests::ensure_mul_assign_works ... ok
test traits::tests::ensure_pow_works ... ok
test traits::tests::ensure_sub_works ... ok
test traits::tests::ensure_add_assign_works ... ok
test traits::tests::ensure_mul_works ... ok
test helpers_128bit::tests::sqrt_works ... ok
test helpers_128bit::tests::op_checked_rounded_div_works ... ok

test result: ok. 366 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 1.29s

     Running unittests src/biguint.rs (target/debug/deps/biguint-92f4f41a59d8339f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/fixed_point.rs (target/debug/deps/fixed_point-5d90c68ec33368cb)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/multiply_by_rational_with_rounding.rs (target/debug/deps/multiply_by_rational_with_rounding-1593a4bc911d701e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/normalize.rs (target/debug/deps/normalize-8c6299ac419396f3)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/per_thing_rational.rs (target/debug/deps/per_thing_rational-fd77569eeecf31c2)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_authority_discovery-a74d91331116db0c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_block_builder-ef2908a85adad196)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_blockchain-7cd1488a71018d09)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus-78c96bfde2ddce33)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_aura-763fc7e6f6e7862f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_babe-e783b496da465443)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_beefy-bf61cacf08f04d6d)

running 15 tests
test commitment::tests::commitment_ordering ... ok
test mmr::tests::should_construct_version_correctly ... ok
test mmr::tests::should_panic_if_minor_too_large - should panic ... ok
test mmr::tests::should_panic_if_major_too_large - should panic ... ok
test mmr::tests::extract_mmr_root_digest ... ok
test commitment::tests::commitment_encode_decode ... ok
test payload::tests::payload_methods_work_as_expected ... ok
test tests::beefy_verify_works ... ok
test tests::validator_set ... ok
test commitment::tests::versioned_commitment_encode_decode ... ok
test witness::tests::should_encode_and_decode_witness ... ok
test commitment::tests::signed_commitment_count_signatures ... ok
test commitment::tests::large_signed_commitment_encode_decode ... ok
test commitment::tests::signed_commitment_encode_decode ... ok
test witness::tests::should_convert_signed_commitment_to_witness ... ok

test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.12s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_grandpa-c71bd28dcc16219f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_pow-a9c57e81143ee32a)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_slots-ecd7695b45f6b98e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_consensus_vrf-3c2fc86cb7ba55b7)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_core-89215ef0056bfade)

running 71 tests
test defer::test::defer_guard_works ... ok
test defer::test::defer_guard_order_works ... ok
test defer::test::defer_guard_syntax_works ... ok
test defer::test::defer_guard_defer_panics_unwind_works ... ok
test defer::test::defer_guard_panic_unwind_works ... ok
test ecdsa::test::signature_serialization_doesnt_panic ... ok
test ed25519::test::generated_pair_should_work ... ok
test ed25519::test::signature_serialization_doesnt_panic ... ok
test ed25519::test::seed_and_derive_should_work ... ok
test crypto::tests::accountid_32_from_str_works ... ok
test ed25519::test::ss58check_roundtrip_works ... ok
test ed25519::test::seeded_pair_should_work ... ok
test hashing::test::blake2b ... ok
test hash::tests::test_invalid ... ok
test hashing::test::keccak ... ok
test ed25519::test::test_vector_should_work ... ok
test hashing::test::twox ... ok
test ecdsa::test::seed_and_derive_should_work ... ok
test hashing::test::twox_concats ... ok
test offchain::tests::capabilities ... ok
test offchain::tests::timestamp_ops ... ok
test ecdsa::test::ss58check_full_roundtrip_works ... ok
test ecdsa::test::ss58check_format_check_works ... ok
test ecdsa::test::ss58check_roundtrip_works ... ok
test hashing::test::sha2 ... ok
test sr25519::compatibility_test::derive_hard_public_should_fail ... ok
test sr25519::compatibility_test::derive_hard_should_work ... ok
test sr25519::compatibility_test::derive_soft_public_should_work ... ok
test hash::tests::test_h160 ... ok
test hash::tests::test_h256 ... ok
test sr25519::compatibility_test::generated_pair_should_work ... ok
test sr25519::compatibility_test::derive_soft_should_work ... ok
test sr25519::compatibility_test::messed_message_should_not_work ... ok
test sr25519::compatibility_test::signature_serialization_doesnt_panic ... ok
test ed25519::test::signature_serialization_works ... ok
test sr25519::compatibility_test::seeded_pair_should_work ... ok
test sr25519::compatibility_test::messed_signature_should_not_work ... ok
test uint::tests::test_large_values ... ok
test ecdsa::test::ss58check_custom_format_works ... ok
test ecdsa::test::signature_serialization_works ... ok
test uint::tests::test_u256_codec ... ok
test sr25519::compatibility_test::verify_from_old_wasm_works ... ok
test sr25519::compatibility_test::signature_serialization_works ... ok
test sr25519::compatibility_test::sr_test_vector_should_work ... ok
test sr25519::compatibility_test::verify_known_old_message_should_work ... ok
test sr25519::compatibility_test::ss58check_roundtrip_works ... ok
test uint::tests::test_u256 ... ok
test ecdsa::test::test_vector_should_work ... ok
test ecdsa::test::generated_pair_should_work ... ok
test ecdsa::test::seeded_pair_should_work ... ok
test sr25519::compatibility_test::default_address_should_be_used ... ok
test crypto::tests::interpret_std_seed_should_work ... ok
test ed25519::test::test_vector_by_string_should_work ... ok
test crypto::tests::password_override_should_work ... ok
test crypto::tests::interpret_std_secret_string_should_work ... ok
test ecdsa::test::test_vector_by_string_should_work ... ok
test ecdsa::test::verify_prehashed_works ... ok
test ecdsa::test::sign_prehashed_works ... ok
test sr25519::compatibility_test::derive_hard_known_pair_should_work ... ok
test sr25519::compatibility_test::derive_soft_known_pair_should_work ... ok
test ecdsa::test::recover_prehashed_works ... ok
test ed25519::test::generate_with_phrase_recovery_possible ... ok
test ed25519::test::password_does_something ... ok
test ed25519::test::generate_with_password_phrase_recovery_possible ... ok
test sr25519::compatibility_test::default_phrase_should_correspond_to_default_address ... ok
test ecdsa::test::generate_with_phrase_recovery_possible ... ok
test ecdsa::test::password_does_something ... ok
test ed25519::test::default_phrase_should_be_used ... ok
test ecdsa::test::generate_with_password_phrase_recovery_possible ... ok
test ecdsa::test::default_phrase_should_be_used ... ok
test sr25519::compatibility_test::default_phrase_should_be_used ... ok

test result: ok. 71 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.15s

     Running unittests src/lib.rs (target/debug/deps/sp_core_hashing-a0dfa8470e15248b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_core_hashing_proc_macro-6acf14f3d92c1665)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_database-8f453b6af9cd468c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_debug_derive-ca5e70bf9d86f85d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/tests.rs (target/debug/deps/tests-06b0573d30c24b9c)

running 1 test
test should_display_proper_debug ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_externalities-a8042d110abcd42c)

running 1 test
test extensions::tests::register_and_retrieve_extension ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_inherents-7abf6c370e9f82ef)

running 5 tests
test tests::create_inherent_data ... ok
test tests::check_inherents_result_removes_other_errors_on_fatal_error ... ok
test tests::adding_same_inherent_returns_an_error ... ok
test tests::check_inherents_result_encodes_and_decodes ... ok
test tests::inherent_data_encodes_and_decodes ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_io-4ca678d6dc72cae5)

running 8 tests
test tests::clear_prefix_works ... ok
test tests::storage_works ... ok
test tests::dalek_should_not_panic_on_invalid_signature ... ok
test tests::read_storage_works ... ok
test tests::use_dalek_ext_works ... ok
test tests::batch_verify_start_finish_works ... ok
test tests::long_sr25519_batching ... ok
test tests::batching_works ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.33s

     Running unittests src/lib.rs (target/debug/deps/sp_keyring-e226d4f0a05421e7)

running 2 tests
test ed25519::tests::should_work ... ok
test sr25519::tests::should_work ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.22s

     Running unittests src/lib.rs (target/debug/deps/sp_keystore-4fbf77a3d17b1b73)

running 5 tests
test vrf::tests::transcript_creation_matches ... ok
test testing::tests::store_key_and_extract ... ok
test testing::tests::store_unknown_and_extract_it ... ok
test testing::tests::vrf_sign ... ok
test testing::tests::ecdsa_sign_prehashed_works ... ok

test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.08s

     Running unittests src/lib.rs (target/debug/deps/sp_maybe_compressed_blob-cd2aa10032bea1b7)

running 4 tests
test tests::decompresses_only_when_magic ... ok
test tests::refuse_to_encode_over_limit ... ok
test tests::compress_and_decompress ... ok
test tests::possible_bomb_fails ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_mmr_primitives-a071c1a5f1e6191a)

running 13 tests
test utils::tests::should_calculate_depth_correctly ... ok
test utils::tests::should_calculate_the_size_correctly ... ok
test utils::tests::should_calculate_number_of_peaks_correctly ... ok
test tests::encode_opaque_leaf_should_be_scale_compatible ... ok
test tests::should_return_the_hash_correctly ... ok
test tests::should_encode_decode_correctly_if_no_compact ... ok
test tests::opaque_leaves_should_be_full_leaf_compatible ... ok
test tests::should_encode_decode_proof ... ok
test tests::compact_should_work ... ok
test tests::compact_should_encode_decode_correctly ... ok
test utils::tests::should_calculate_node_index_from_leaf_index ... ok
test utils::tests::should_calculate_right_branch_correctly ... ok
test utils::tests::should_calculate_rightmost_leaf_node_index_from_pos ... ok

test result: ok. 13 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.08s

     Running unittests src/lib.rs (target/debug/deps/sp_npos_elections-d557c74ef6baa5d7)

running 56 tests
test node::tests::basic_create_works ... ok
test node::tests::set_parent_works ... ok
test pjr::tests::slack_works ... ok
test pjr::tests::pre_score_works ... ok
test reduce::tests::merge_with_len_one ... ok
test reduce::tests::merging_works ... ok
test node::tests::node_cmp_stack_overflows_on_non_unique_elements ... ok
test helpers::tests::into_staked_works ... ok
test tests::assignment_convert_normalize::assignment_convert_works ... ok
test node::tests::get_root_singular ... ok
test node::tests::get_root_on_cycle_2 ... ok
test node::tests::get_root_on_cycle ... ok
test tests::assignment_convert_normalize::assignment_convert_will_not_normalize ... ok
test node::tests::get_root_works ... ok
test tests::assignment_convert_normalize::assignment_can_normalize ... ok
test tests::assignment_convert_normalize::staked_assignment_can_normalize ... ok
test tests::phragmen_accuracy_on_large_scale_only_candidates ... ok
test tests::phragmen_accuracy_on_small_scale_no_self_vote ... ok
test tests::float_phragmen_poc_works ... ok
test tests::phragmen_accuracy_on_small_scale_self_vote ... ok
test tests::elect_has_no_entry_barrier ... ok
test phragmms::tests::basic_election_manual_works ... ok
test tests::duplicate_target_is_ignored ... ok
test phragmms::tests::basic_election_works ... ok
test tests::duplicate_target_is_ignored_when_winner ... ok
test reduce::tests::basic_reduce_works ... ok
test tests::phragmen_accuracy_on_large_scale_voters_and_candidates ... ok
test pjr::tests::can_convert_data_from_external_api ... ok
test reduce::tests::bound_should_be_kept ... ok
test reduce::tests::basic_reduce_4_cycle_works ... ok
test tests::phragmen_core_poc_works ... ok
test reduce::tests::reduce_3_common_votes_same_weight ... ok
test tests::phragmen_core_test_without_edges ... ok
test tests::balancing_core_works ... ok
test phragmms::tests::linear_voting_example_works ... ok
test reduce::tests::should_deal_with_duplicates_target ... ok
test tests::phragmen_large_scale_test_2 ... ok
test reduce::tests::basic_reduce_all_cycles_works ... ok
test pjr::tests::find_upper_bound_for_threshold_scenario_3 ... ok
test reduce::tests::should_deal_with_self_vote ... ok
test tests::phragmen_linear_equalize ... ok
test tests::phragmen_large_scale_test ... ok
test pjr::tests::find_upper_bound_for_threshold_scenario_1 ... ok
test tests::phragmen_poc_works_with_balancing ... ok
test tests::phragmen_poc_works ... ok
test tests::score::score_comparison_with_epsilon ... ok
test tests::voter_normalize_ops_works ... ok
test tests::score::score_comparison_large_value ... ok
test tests::phragmen_poc_3_works ... ok
test tests::phragmen_poc_2_works ... ok
test tests::score::ord_works ... ok
test tests::score::score_comparison_is_lexicographical_no_epsilon ... ok
test pjr::tests::find_upper_bound_for_threshold_scenario_2 ... ok
test tests::phragmen_self_votes_should_be_kept ... ok
test reduce::tests::reduce_panics_on_duplicate_voter - should panic ... ok
test phragmms::tests::large_balance_wont_overflow ... ok

test result: ok. 56 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/phragmen_balancing.rs (target/debug/deps/phragmen_balancing-028c50d9b035b950)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/phragmen_pjr.rs (target/debug/deps/phragmen_pjr-627042f147185f2a)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/phragmms_balancing.rs (target/debug/deps/phragmms_balancing-27ee77bf95c0dd6f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/reduce.rs (target/debug/deps/reduce-3874df77c676c4ca)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_offchain-b827d9a86deb59ea)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_panic_handler-2008dafb8737c829)

running 3 tests
test tests::control_characters_are_always_stripped_out_from_the_panic_messages ... ok

====================

Version: 1.2.3

   0: sp_panic_handler::panic_hook
             at src/lib.rs:166:18
   1: sp_panic_handler::set::{{closure}}
             at src/lib.rs:62:12
   2: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2032:9
      std::panicking::rust_panic_with_hook
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:692:13
   3: std::panicking::begin_panic_handler::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:577:13
   4: std::sys_common::backtrace::__rust_end_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys_common/backtrace.rs:137:18
   5: rust_begin_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:575:5
   6: core::panicking::panic_fmt
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panicking.rs:64:14
   7: core::panicking::panic
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panicking.rs:111:5
   8: sp_panic_handler::tests::does_not_abort::{{closure}}
             at src/lib.rs:195:33
   9: std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
  10: __rust_try
  11: std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
  12: std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
  13: sp_panic_handler::tests::does_not_abort
             at src/lib.rs:195:3
  14: sp_panic_handler::tests::does_not_abort::{{closure}}
             at src/lib.rs:192:22
  15: core::ops::function::FnOnce::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  16: core::ops::function::FnOnce::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
      test::__rust_begin_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:657:18
  17: test::run_test::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:648:30
      core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  18: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panic/unwind_safe.rs:271:9
      std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
      std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
      std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
      test::run_test_in_process
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:680:27
      test::run_test::run_test_inner::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:574:39
  19: test::run_test::run_test_inner::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:601:37
      std::sys_common::backtrace::__rust_begin_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys_common/backtrace.rs:121:18
  20: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/thread/mod.rs:550:17
      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panic/unwind_safe.rs:271:9
      std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
      std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
      std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
      std::thread::Builder::spawn_unchecked_::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/thread/mod.rs:549:30
      core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  21: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      std::sys::unix::thread::Thread::new::thread_start
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys/unix/thread.rs:108:17
  22: start_thread
             at ./nptl/pthread_create.c:442:8
  23: clone3
             at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81


Thread 'tests::does_not_abort' panicked at 'explicit panic', primitives/panic-handler/src/lib.rs:195

This is a bug. Please report it at:

	test

test tests::does_not_abort ... ok

====================

Version: 1.2.3

   0: sp_panic_handler::panic_hook
             at src/lib.rs:166:18
   1: sp_panic_handler::set::{{closure}}
             at src/lib.rs:62:12
   2: <alloc::boxed::Box<F,A> as core::ops::function::Fn<Args>>::call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2032:9
      std::panicking::rust_panic_with_hook
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:692:13
   3: std::panicking::begin_panic_handler::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:577:13
   4: std::sys_common::backtrace::__rust_end_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys_common/backtrace.rs:137:18
   5: rust_begin_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:575:5
   6: core::panicking::panic_fmt
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panicking.rs:64:14
   7: core::panicking::panic
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panicking.rs:111:5
   8: sp_panic_handler::tests::does_not_abort_after_never_abort::{{closure}}
             at src/lib.rs:203:31
   9: std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
  10: __rust_try
  11: std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
  12: std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
  13: sp_panic_handler::tests::does_not_abort_after_never_abort
             at src/lib.rs:203:3
  14: sp_panic_handler::tests::does_not_abort_after_never_abort::{{closure}}
             at src/lib.rs:199:40
  15: core::ops::function::FnOnce::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  16: core::ops::function::FnOnce::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
      test::__rust_begin_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:657:18
  17: test::run_test::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:648:30
      core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  18: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panic/unwind_safe.rs:271:9
      std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
      std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
      std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
      test::run_test_in_process
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:680:27
      test::run_test::run_test_inner::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:574:39
  19: test::run_test::run_test_inner::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/test/src/lib.rs:601:37
      std::sys_common::backtrace::__rust_begin_short_backtrace
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys_common/backtrace.rs:121:18
  20: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/thread/mod.rs:550:17
      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/panic/unwind_safe.rs:271:9
      std::panicking::try::do_call
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:483:40
      std::panicking::try
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panicking.rs:447:19
      std::panic::catch_unwind
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/panic.rs:137:14
      std::thread::Builder::spawn_unchecked_::{{closure}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/thread/mod.rs:549:30
      core::ops::function::FnOnce::call_once{{vtable.shim}}
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/core/src/ops/function.rs:507:5
  21: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/alloc/src/boxed.rs:2000:9
      std::sys::unix::thread::Thread::new::thread_start
             at /rustc/fc594f15669680fa70d255faec3ca3fb507c3405/library/std/src/sys/unix/thread.rs:108:17
  22: start_thread
             at ./nptl/pthread_create.c:442:8
  23: clone3
             at ./misc/../sysdeps/unix/sysv/linux/x86_64/clone3.S:81


Thread 'tests::does_not_abort_after_never_abort' panicked at 'explicit panic', primitives/panic-handler/src/lib.rs:203

This is a bug. Please report it at:

	test

test tests::does_not_abort_after_never_abort ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.95s

     Running unittests src/lib.rs (target/debug/deps/sp_rpc-dcbf78485a63a51b)

running 2 tests
test number::tests::should_serialize_and_deserialize ... ok
test list::tests::should_serialize_and_deserialize ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime-a0a5e25b7f269021)

running 55 tests
test generic::era::tests::current_less_than_phase ... ok
test generic::era::tests::era_initialization_works ... ok
test generic::era::tests::long_period_mortal_codec_works ... ok
test generic::era::tests::immortal_works ... ok
test generic::digest::tests::should_serialize_digest ... ok
test generic::digest::tests::digest_item_type_info ... ok
test generic::era::tests::mortal_birth_death_works ... ok
test generic::era::tests::mortal_codec_works ... ok
test generic::era::tests::quantized_clamped_era_initialization_works ... ok
test generic::header::tests::should_deserialize_number ... ok
test generic::header::tests::should_serialize_numbers ... ok
test generic::unchecked_extrinsic::tests::badly_signed_check_should_fail ... ok
test generic::tests::non_system_digest_item_encoding ... ok
test generic::tests::system_digest_item_encoding ... ok
test generic::header::tests::ensure_format_is_unchanged ... ok
test generic::unchecked_extrinsic::tests::encoding_matches_vec ... ok
test generic::unchecked_extrinsic::tests::conversion_to_opaque ... ok
test generic::unchecked_extrinsic::tests::large_bad_prefix_should_work ... ok
test generic::unchecked_extrinsic::tests::invalid_length_prefix_is_detected ... ok
test generic::unchecked_extrinsic::tests::signed_check_should_work ... ok
test generic::unchecked_extrinsic::tests::large_signed_codec_should_work ... ok
test generic::unchecked_extrinsic::tests::signed_codec_should_work ... ok
test generic::unchecked_extrinsic::tests::unsigned_check_should_work ... ok
test generic::unchecked_extrinsic::tests::unsigned_codec_should_work ... ok
test traits::tests::bad_try_from_account_should_fail ... ok
test tests::dispatch_error_equality ... ok
test traits::tests::app_verify_works ... ok
test traits::tests::into_account_truncating_should_work ... ok
test traits::tests::into_account_truncating_with_fill_should_work ... ok
test tests::opaque_extrinsic_serialization ... ok
test tests::dispatch_error_encoding ... ok
test traits::tests::trailing_zero_should_work ... ok
test traits::tests::try_from_account_should_work ... ok
test traits::tests::try_from_account_with_fill_should_work ... ok
test traits::tests::try_into_account_should_work ... ok
test traits::tests::try_into_sub_account_should_work ... ok
test transaction_validity::tests::builder_should_prefix_the_tags ... ok
test transaction_validity::tests::should_encode_and_decode ... ok
test tests::multi_signature_ecdsa_verify_works ... ok
test traits::tests::ecdsa_verify_works ... ok
test curve::test_calculate_for_fraction_times_denominator ... ok
test tests::batching_still_finishes_when_not_called_directly - should panic ... ok
test tests::batching_does_not_panic_while_thread_is_already_panicking - should panic ... ok
test offchain::storage_lock::tests::storage_lock_and_forget ... ok
test offchain::storage::tests::should_mutate ... ok
test offchain::storage::tests::should_set_and_get ... ok
test offchain::storage_lock::tests::storage_lock_and_let_expire_and_lock_again ... ok
test offchain::http::tests::should_send_a_basic_request_and_get_response ... ok
test offchain::storage_lock::tests::storage_lock_write_unlock_lock_read_unlock ... ok
test offchain::storage_lock::tests::extend_active_lock ... ok
test offchain::http::tests::should_send_a_post_request ... ok
test offchain::http::tests::should_send_huge_response ... ok
test tests::execute_and_generate_proof_works ... ok
test curve::test_multiply_by_rational_saturating ... ok
test runtime_logger::tests::ensure_runtime_logger_respects_host_max_log_level ... ok

test result: ok. 55 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.34s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime_interface-bcc8e787dd6bbdf1)

running 1 test
test util::tests::ptr_len_packing_unpacking ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/ui.rs (target/debug/deps/ui-21473965d00df1d4)

running 1 test
test ui ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime_interface_proc_macro-11ba777ee1ca9566)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime_interface_test-9079524fd0926d01)

running 19 tests
test host_function_not_found ... ok
test test_versionining_register_only ... ok
test test_overwrite_native_function_implementation ... ok
test test_get_and_return_array ... ok
test test_u128_i128_as_parameter_and_return_value ... ok
test test_return_data ... ok
test test_return_option_data ... ok
test test_return_input_public_key ... ok
test test_array_as_mutable_reference ... ok
test test_return_value_into_mutable_reference ... ok
test test_return_input_as_tuple ... ok
test test_tracing ... ok
test test_set_storage ... ok
test test_invalid_utf8_data_should_return_an_error - should panic ... ok
test test_versionining_with_new_host_works ... ok
test test_returning_option_bytes_from_a_host_function_is_efficient ... ok
test test_vec_return_value_memory_is_freed ... ok
test test_encoded_return_value_memory_is_freed ... ok
test test_array_return_value_memory_is_freed ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.55s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime_interface_test_wasm-aa18609269ad3a1a)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_runtime_interface_test_wasm_deprecated-6197fae0b0887ae2)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_serializer-ed81a0996e610367)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_session-cf675bdfb9085c19)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_staking-085093f5b4cbae2c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_state_machine-8df190bca3b10de7)

running 81 tests
test overlayed_changes::changeset::test::no_open_tx_rollback_errors ... ok
test overlayed_changes::changeset::test::no_open_tx_commit_errors ... ok
test overlayed_changes::changeset::test::enter_exit_runtime_fails_when_already_in_requested_mode ... ok
test overlayed_changes::changeset::test::runtime_cannot_close_client_tx ... ok
test overlayed_changes::changeset::test::unbalanced_transactions_errors ... ok
test testing::tests::check_send ... ok
test ext::tests::storage_append_works ... ok
test overlayed_changes::offchain::test::test_drain ... ok
test overlayed_changes::offchain::test::test_accumulated_set_remove_set ... ok
test basic::tests::set_and_retrieve_code ... ok
test basic::tests::basic_externalities_is_empty ... ok
test overlayed_changes::changeset::test::no_transaction_works ... ok
test overlayed_changes::changeset::test::exit_runtime_closes_runtime_tx ... ok
test overlayed_changes::tests::overlayed_storage_works ... ok
test overlayed_changes::tests::next_storage_key_change_works ... ok
test overlayed_changes::changeset::test::clear_works ... ok
test overlayed_changes::tests::next_child_storage_key_change_works ... ok
test basic::tests::children_works ... ok
test overlayed_changes::changeset::test::modify_works ... ok
test overlayed_changes::changeset::test::transaction_works ... ok
test overlayed_changes::changeset::test::transaction_commit_then_rollback_works ... ok
test overlayed_changes::tests::extrinsic_changes_are_collected ... ok
test overlayed_changes::tests::offchain_overlayed_storage_transactions_works ... ok
test overlayed_changes::changeset::test::next_change_works ... ok
test basic::tests::kill_child_storage_returns_num_elements_removed ... ok
test basic::tests::commit_should_work ... ok
test tests::append_storage_works ... ok
test overlayed_changes::changeset::test::drain_with_open_transaction_panics - should panic ... ok
test in_memory_backend::tests::in_memory_with_child_trie_only ... ok
test in_memory_backend::tests::insert_multiple_times_child_data_works ... ok
test ext::tests::clear_prefix_cannot_delete_a_child_root ... ok
test tests::remove_with_append_then_rollback_appended_then_append_again ... ok
test tests::limited_child_kill_off_by_one_works_without_limit ... ok
test ext::tests::next_storage_key_works_with_a_lot_empty_values_in_overlay ... ok
test tests::set_storage_empty_allowed ... ok
test tests::set_child_storage_works ... ok
test tests::limited_child_kill_off_by_one_works ... ok
test tests::prove_read_with_size_limit_proof_size ... ok
test ext::tests::next_child_storage_key_works ... ok
test testing::tests::set_and_retrieve_code ... ok
test ext::tests::next_storage_key_works ... ok
test tests::limited_child_kill_works ... ok
test trie_backend::tests::pairs_are_empty_on_empty_storage ... ok
test trie_backend::tests::proof_is_invalid_when_does_not_contains_root ... ok
test tests::clear_prefix_in_ext_works ... ok
test ext::tests::child_storage_works ... ok
test testing::tests::commit_should_work ... ok
test tests::execute_works ... ok
test overlayed_changes::tests::overlayed_storage_root_works ... ok
test tests::dual_execution_strategy_detects_consensus_failure ... ok
test tests::execute_works_with_native_else_wasm ... ok
test testing::tests::as_backend_generates_same_backend_as_commit_all ... ok
test testing::tests::commit_all_and_kill_child_storage ... ok
test tests::inner_state_versioning_switch_proofs ... ok
test tests::child_storage_uuid ... ok
test tests::prove_range_with_child_works ... ok
test trie_backend_essence::test::next_storage_key_and_next_child_storage_key_work ... ok
test trie_backend::tests::new_data_is_added_to_the_cache ... ok
test tests::prove_execution_and_proof_check_works ... ok
test tests::compact_multiple_child_trie ... ok
test tests::prove_read_and_proof_check_works ... ok
test tests::prove_read_with_size_limit_works ... ok
test trie_backend::tests::child_proof_recording_with_edge_cases_works ... ok
test trie_backend::tests::read_from_child_storage_returns_some ... ok
test trie_backend::tests::proof_is_non_empty_after_value_is_read ... ok
test trie_backend::tests::pairs_are_not_empty_on_non_empty_storage ... ok
test trie_backend::tests::storage_root_is_non_default ... ok
test trie_backend::tests::read_from_storage_returns_some ... ok
test trie_backend::tests::recording_same_key_access_in_different_tries ... ok
test trie_backend::tests::read_from_storage_returns_none ... ok
test trie_backend::tests::proof_is_empty_until_value_is_read ... ok
test trie_backend::tests::proof_recorded_and_checked_top ... ok
test trie_backend::tests::storage_proof_encoded_size_estimation_works ... ok
test trie_backend::tests::storage_iteration_works ... ok
test trie_backend::tests::keys_with_empty_prefix_returns_all_keys ... ok
test trie_backend::tests::storage_iter_does_not_return_out_of_prefix_keys ... ok
test trie_backend::tests::storage_root_transaction_is_non_empty ... ok
test trie_backend::tests::proof_recorded_and_checked_with_child ... ok
test trie_backend::tests::passes_through_backend_calls ... ok
test trie_backend::tests::proof_record_works_with_iter ... ok
test tests::child_read_compact_stress_test ... ok

test result: ok. 81 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.53s

     Running unittests src/lib.rs (target/debug/deps/sp_std-453944406aa5ae60)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_storage-a5d981cadb40ed58)

running 1 test
test tests::test_prefix_default_child_info ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_test_primitives-8d305ce380d6a900)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_timestamp-2994bccf4db828e0)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_tracing-78741b3c6b8aac38)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_transaction_pool-a6d7150597c6a062)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_transaction_storage_proof-fc35e6a5282c50c4)

running 1 test
test registration::build_proof_check ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_trie-626311d596b5f528)

running 28 tests
test tests::codec_trie_empty ... ok
test tests::node_with_no_children_fail_decoding ... ok
test tests::codec_trie_single_tuple ... ok
test tests::codec_trie_two_tuples_disjoint_keys ... ok
test cache::shared_cache::tests::shared_value_cache_works ... ok
test tests::default_trie_root ... ok
test tests::empty_is_equivalent ... ok
test recorder::tests::recorder_works ... ok
test tests::proof_inclusion_works ... ok
test tests::leaf_is_equivalent ... ok
test tests::proof_non_inclusion_works ... ok
test tests::iterator_works ... ok
test tests::branch_is_equivalent ... ok
test cache::tests::basic_cache_works ... ok
test tests::extension_and_branch_is_equivalent ... ok
test tests::extension_and_branch_with_value_is_equivalent ... ok
test tests::single_long_leaf_is_equivalent ... ok
test tests::two_long_leaves_is_equivalent ... ok
test cache::tests::trie_db_mut_cache_works ... ok
test cache::tests::cache_lru_works ... ok
test tests::bigger_extension_and_branch_with_value_is_equivalent ... ok
test cache::tests::trie_db_cache_and_recorder_work_together ... ok
test tests::generate_storage_root_with_proof_works_independently_from_the_delta_order ... ok
test cache::tests::trie_db_mut_cache_and_recorder_work_together ... ok
test cache::tests::cache_respects_bounds ... ok
test tests::big_key ... ok
test tests::standard_is_equivalent ... ok
test tests::random_should_work ... ok

test result: ok. 28 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 38.89s

     Running unittests src/lib.rs (target/debug/deps/sp_version-9c9890b64b8fe330)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_version_proc_macro-74b805b27eae5144)

running 1 test
test decl_runtime_version::tests::version_can_be_deserialized ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_wasm_interface-08c957728334a3c1)

running 2 tests
test tests::pointer_offset_works ... ok
test tests::return_value_encoded_max_size ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/sp_weights-fdb00b96538eaff6)

running 19 tests
test tests::constant_fee_works ... ok
test tests::identity_fee_works ... ok
test tests::polynomial_does_not_overflow ... ok
test tests::polynomial_works ... ok
test tests::polynomial_does_not_underflow ... ok
test weight_meter::tests::consumed_ratio_works ... ok
test weight_meter::tests::weight_meter_can_accrue_works ... ok
test weight_meter::tests::weight_meter_check_accrue_works ... ok
test weight_meter::tests::weight_meter_check_and_can_accrue_works ... ok
test weight_meter::tests::weight_meter_remaining_works ... ok
test weight_v2::tests::checked_accrue_works ... ok
test weight_v2::tests::checked_div_per_component_works ... ok
test weight_v2::tests::checked_reduce_works ... ok
test weight_v2::tests::from_all_works ... ok
test weight_v2::tests::from_parts_works ... ok
test weight_v2::tests::from_u64_pair_works ... ok
test weight_v2::tests::from_u64_works ... ok
test weight_v2::tests::is_zero_works ... ok
test weight_v2::tests::saturating_reduce_works ... ok

test result: ok. 19 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/subkey-2a4b00cddfc5786c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/subkey-7be8acf9b5acf77e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_build_script_utils-4aa67463a5ce0fad)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_frame_cli-deee42ba0659ca6b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_frame_rpc_support-a69b3832e4addf3e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_frame_rpc_system-e890323abfa2f239)

running 4 tests
test tests::dry_run_should_deny_unsafe ... ok
test tests::dry_run_should_indicate_error ... ok
test tests::dry_run_should_work ... ok
test tests::should_return_next_nonce_for_some_account ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.33s

     Running unittests src/lib.rs (target/debug/deps/substrate_prometheus_endpoint-140a462da3c3df4a)

running 1 test
test tests::prometheus_works ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.01s

     Running unittests src/lib.rs (target/debug/deps/substrate_rpc_client-66b4feab45e94b63)

running 2 tests
test tests::finalized_headers_works_when_every_block_comes_from_subscription ... ok
test tests::finalized_headers_come_from_subscription_and_provider_if_in_need ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_state_trie_migration_rpc-41f0d9e0082fc17d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_client-55d72af231f5432a)

running 1 test
test tests::parses_error_properly ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_runtime-2c4d75a81e39cbe3)

running 4 tests
test __construct_runtime_integrity_test::runtime_integrity_tests ... ok
test tests::witness_backend_works ... ok
test tests::test_storage ... ok
test tests::heap_pages_is_respected ... ok

test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.38s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_runtime_client-b3e7f21fc6c0f872)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_runtime_transaction_pool-e45df66c91be87a8)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_utils-c9c5a4e624b53e68)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/basic.rs (target/debug/deps/basic-c715c9b940acd5e7)

running 4 tests
test timeout ... ignored
test basic_test ... ok
test basic_test_with_args ... ok
test panicking_test - should panic ... ok

test result: ok. 3 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/ui.rs (target/debug/deps/ui-035f3b5a48094e90)

running 1 test
   Compiling libc v0.2.140
   Compiling proc-macro2 v1.0.51
   Compiling unicode-ident v1.0.6
   Compiling quote v1.0.23
   Compiling syn v1.0.109
    Checking cfg-if v1.0.0
   Compiling autocfg v1.1.0
   Compiling version_check v0.9.4
   Compiling memchr v2.5.0
   Compiling serde_derive v1.0.152
   Compiling typenum v1.16.0
   Compiling thiserror v1.0.38
    Checking once_cell v1.17.1
   Compiling log v0.4.17
   Compiling serde v1.0.152
    Checking smallvec v1.10.0
    Checking pin-project-lite v0.2.9
    Checking bytes v1.4.0
   Compiling anyhow v1.0.69
   Compiling futures-core v0.3.26
    Checking scopeguard v1.1.0
    Checking futures-sink v0.3.26
    Checking futures-io v0.3.26
   Compiling futures-channel v0.3.26
   Compiling futures-task v0.3.26
   Compiling futures-util v0.3.26
    Checking arrayvec v0.7.2
    Checking pin-utils v0.1.0
    Checking subtle v2.4.1
    Checking byteorder v1.4.3
   Compiling parking_lot_core v0.9.7
   Compiling regex-syntax v0.6.28
   Compiling lazy_static v1.4.0
    Checking ppv-lite86 v0.2.17
   Compiling unicode-xid v0.2.4
    Checking cpufeatures v0.2.5
    Checking tinyvec_macros v0.1.1
    Checking unicode-bidi v0.3.10
    Checking percent-encoding v2.2.0
   Compiling getrandom v0.1.16
    Checking bitflags v1.3.2
    Checking tinyvec v1.6.0
    Checking opaque-debug v0.3.0
    Checking static_assertions v1.1.0
    Checking arrayref v0.3.6
    Checking either v1.8.1
    Checking keccak v0.1.3
    Checking constant_time_eq v0.2.4
   Compiling pkg-config v0.3.26
    Checking instant v0.1.12
    Checking itoa v1.0.5
    Checking tracing-core v0.1.30
   Compiling crc32fast v1.3.2
    Checking form_urlencoded v1.1.0
   Compiling paste v1.0.11
    Checking byte-slice-cast v1.2.2
   Compiling io-lifetimes v1.0.5
   Compiling rustix v0.36.8
   Compiling crossbeam-utils v0.8.15
    Checking blake2b_simd v1.0.1
    Checking base64 v0.13.1
    Checking linux-raw-sys v0.1.4
    Checking fallible-iterator v0.2.0
   Compiling target-lexicon v0.12.6
    Checking stable_deref_trait v1.2.0
    Checking aho-corasick v0.7.20
   Compiling cranelift-isle v0.93.1
   Compiling generic-array v0.14.6
   Compiling ahash v0.7.6
   Compiling serde_json v1.0.93
   Compiling slab v0.4.8
   Compiling lock_api v0.4.9
   Compiling indexmap v1.9.2
   Compiling num-traits v0.2.15
   Compiling num-integer v0.1.45
   Compiling crunchy v0.2.2
    Checking ryu v1.0.12
    Checking unicode-normalization v0.1.22
   Compiling cranelift-codegen-shared v0.93.1
    Checking sp-std v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/std)
   Compiling memoffset v0.8.0
    Checking fxhash v0.2.1
   Compiling parking_lot_core v0.8.6
    Checking hex v0.4.3
    Checking slice-group-by v0.3.0
   Compiling crossbeam-epoch v0.9.14
    Checking signature v1.6.4
   Compiling heck v0.4.1
   Compiling zstd-safe v5.0.2+zstd.1.5.2
    Checking bumpalo v3.12.0
   Compiling cranelift-codegen-meta v0.93.1
    Checking ed25519 v1.5.3
   Compiling num-bigint v0.4.3
   Compiling memoffset v0.6.5
    Checking itertools v0.10.5
    Checking termcolor v1.2.0
    Checking uint v0.9.5
    Checking generic-array v0.12.4
   Compiling num-rational v0.4.1
    Checking humantime v2.1.0
   Compiling cpp_demangle v0.3.5
    Checking regalloc2 v0.5.1
   Compiling libm v0.2.6
    Checking rustc-demangle v0.1.21
   Compiling rayon-core v1.10.2
    Checking crossbeam-channel v0.5.7
    Checking getrandom v0.2.8
    Checking num_cpus v1.15.0
    Checking errno v0.2.8
    Checking rand_core v0.6.4
    Checking dirs-sys-next v0.1.2
    Checking time v0.1.45
    Checking wasmtime-asm-macros v6.0.1
    Checking iana-time-zone v0.1.53
    Checking rustc-hash v1.1.0
    Checking parity-wasm v0.45.0
   Compiling wasmtime-cache v6.0.1
    Checking parking_lot v0.11.2
   Compiling ref-cast v1.0.14
    Checking parking_lot v0.12.1
    Checking rand_core v0.5.1
    Checking byte-tools v0.3.1
    Checking directories-next v2.0.0
    Checking digest v0.9.0
    Checking block-buffer v0.10.4
    Checking crypto-common v0.1.6
    Checking rand_chacha v0.3.1
    Checking block-buffer v0.9.0
    Checking crossbeam-deque v0.8.3
    Checking digest v0.8.1
    Checking region v3.0.0
    Checking wasmtime-jit-icache-coherence v6.0.1
    Checking idna v0.3.0
    Checking memory_units v0.4.0
    Checking hashbrown v0.12.3
    Checking fnv v1.0.7
    Checking digest v0.10.6
   Compiling wasmtime v6.0.1
    Checking rustc-hex v2.1.0
    Checking rand_chacha v0.2.2
    Checking rand v0.8.5
    Checking sha2 v0.9.9
    Checking block-padding v0.1.5
    Checking downcast-rs v1.2.0
    Checking crypto-mac v0.8.0
    Checking crypto-mac v0.11.1
    Checking tracing-log v0.1.3
    Checking sharded-slab v0.1.4
    Checking thread_local v1.1.7
    Checking block-buffer v0.7.3
    Checking fake-simd v0.1.2
    Checking sha2 v0.10.6
    Checking rand v0.7.3
    Checking sha3 v0.10.6
    Checking ansi_term v0.12.1
    Checking opaque-debug v0.2.3
    Checking hash-db v0.16.0
    Checking hmac v0.8.1
    Checking chrono v0.4.23
   Compiling tokio v1.25.0
    Checking environmental v1.1.4
    Checking arrayvec v0.5.2
    Checking sha2 v0.8.2
    Checking hmac-drbg v0.3.0
    Checking pbkdf2 v0.8.0
    Checking rayon v1.6.1
    Checking hmac v0.11.0
    Checking wasmi-validation v0.5.0
    Checking hmac v0.12.1
    Checking blake2 v0.10.6
    Checking pbkdf2 v0.11.0
    Checking url v2.3.1
    Checking fixed-hash v0.8.0
    Checking libsecp256k1-core v0.3.0
    Checking socket2 v0.4.7
    Checking mio v0.8.6
    Checking num-format v0.4.4
    Checking regex v1.7.1
    Checking regex-automata v0.1.10
    Checking dyn-clone v1.0.11
    Checking hash256-std-hasher v0.15.2
    Checking array-bytes v4.2.0
    Checking base58 v0.2.0
   Compiling prettyplease v0.1.23
   Compiling fastrand v1.9.0
   Compiling fixedbitset v0.4.2
    Checking twox-hash v1.6.3
   Compiling multimap v0.8.3
    Checking nohash-hasher v0.2.0
   Compiling ahash v0.8.3
    Checking adler v1.0.2
    Checking gimli v0.27.2
   Compiling proc-macro-error-attr v1.0.4
    Checking object v0.30.3
   Compiling async-trait v0.1.64
    Checking memory-db v0.32.0
    Checking trie-root v0.18.0
    Checking matchers v0.0.1
    Checking integer-sqrt v0.1.5
   Compiling proc-macro-error v1.0.4
    Checking futures-timer v3.0.2
   Compiling jobserver v0.1.26
    Checking is-terminal v0.4.4
    Checking memfd v0.6.2
   Compiling which v4.4.0
    Checking miniz_oxide v0.6.2
    Checking data-encoding v2.3.3
    Checking http v0.2.9
    Checking const-oid v0.9.2
    Checking core2 v0.4.0
    Checking blake2s_simd v1.0.1
   Compiling httparse v1.8.0
    Checking base-x v0.2.11
    Checking sp-core-hashing v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/core/hashing)
    Checking env_logger v0.10.0
    Checking base64ct v1.6.0
    Checking wasmi_core v0.2.1
    Checking base16ct v0.1.1
    Checking hashbrown v0.13.2
   Compiling expander v1.0.0
   Compiling cc v1.0.79
    Checking void v1.0.2
   Compiling libsecp256k1-gen-genmult v0.3.0
   Compiling libsecp256k1-gen-ecmult v0.3.0
    Checking bs58 v0.4.0
    Checking asn1_der v0.7.5
    Checking file-per-thread-logger v0.1.6
   Compiling fs-err v2.9.0
    Checking tower-service v0.3.2
    Checking untrusted v0.7.1
    Checking wasmi v0.13.2
    Checking spin v0.5.2
    Checking lru v0.8.1
    Checking try-lock v0.2.4
   Compiling prometheus v0.13.3
   Compiling wasm-bindgen-shared v0.2.84
    Checking httpdate v1.0.2
    Checking sha-1 v0.9.8
   Compiling libsecp256k1 v0.7.1
    Checking concurrent-queue v2.1.0
    Checking kvdb v0.13.0
    Checking linked-hash-map v0.5.6
    Checking event-listener v2.5.3
   Compiling semver v1.0.16
    Checking want v0.3.0
    Checking trie-db v0.27.1
    Checking schnellru v0.2.1
    Checking http-body v0.4.5
    Checking wasm-instrument v0.3.0
    Checking ipnet v2.7.1
   Compiling rustls v0.20.8
    Checking matches v0.1.10
    Checking async-channel v1.8.0
   Compiling wasm-bindgen v0.2.84
   Compiling sc-executor-wasmtime v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/executor/wasmtime)
    Checking sp-database v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/database)
   Compiling petgraph v0.6.3
    Checking nix v0.24.3
    Checking match_cfg v0.1.0
    Checking quick-error v1.2.3
    Checking lru-cache v0.1.2
    Checking pin-project-lite v0.1.12
    Checking idna v0.2.3
    Checking parity-send-wrapper v0.1.0
    Checking predicates-core v1.0.5
    Checking float-cmp v0.9.0
    Checking difflib v0.4.0
    Checking normalize-line-endings v0.3.0
    Checking termtree v0.4.0
    Checking fragile v2.0.0
    Checking downcast v0.11.0
    Checking hostname v0.3.1
   Compiling glob v0.3.1
    Checking linked_hash_set v0.1.4
    Checking quicksink v0.1.2
    Checking ip_network v0.4.1
   Compiling minimal-lexical v0.2.1
    Checking bstr v1.3.0
    Checking predicates-tree v1.0.7
   Compiling libloading v0.7.4
    Checking tower-layer v0.3.2
   Compiling bindgen v0.64.0
    Checking predicates v2.1.5
    Checking resolv-conf v0.7.0
   Compiling peeking_take_while v0.1.2
   Compiling lazycell v1.3.0
   Compiling shlex v1.1.0
    Checking memmap2 v0.5.10
   Compiling cfg_aliases v0.1.1
   Compiling io-lifetimes v0.7.5
   Compiling snap v1.1.0
   Compiling rustix v0.35.13
    Checking http-range-header v0.3.0
    Checking base64 v0.21.0
    Checking fs2 v0.4.3
    Checking siphasher v0.3.10
    Checking os_str_bytes v6.4.1
    Checking openssl-probe v0.1.5
    Checking linux-raw-sys v0.0.46
    Checking kvdb-memorydb v0.13.0
   Compiling rustc_version v0.4.0
    Checking atty v0.2.14
   Compiling static_init_macro v1.0.2
   Compiling static_init v1.0.3
    Checking strsim v0.10.0
   Compiling sc-sysinfo v6.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/sysinfo)
    Checking rand_pcg v0.3.1
    Checking threadpool v1.8.1
    Checking dirs-sys v0.3.7
    Checking globset v0.4.10
    Checking rustls-pemfile v1.0.2
    Checking clap_lex v0.3.2
    Checking addr2line v0.19.0
   Compiling nom v7.1.3
    Checking directories v4.0.1
   Compiling clang-sys v1.6.0
   Compiling zstd-sys v2.0.7+zstd.1.5.4
   Compiling wasmtime-runtime v6.0.1
   Compiling psm v0.1.21
   Compiling secp256k1-sys v0.6.1
   Compiling backtrace v0.3.67
   Compiling blake3 v1.3.3
   Compiling ring v0.16.20
   Compiling libz-sys v1.1.8
   Compiling tikv-jemalloc-sys v0.5.3+5.3.0-patched
   Compiling lz4-sys v1.9.4
    Checking tempfile v3.4.0
   Compiling snow v0.9.1
    Checking rustls-native-certs v0.6.2
   Compiling cranelift-codegen v0.93.1
    Checking flate2 v1.0.25
    Checking sp-panic-handler v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/panic-handler)
    Checking lz4 v1.24.0
    Checking parity-db v0.4.6
    Checking fs4 v0.6.3
    Checking zstd v0.11.2+zstd.1.5.2
   Compiling synstructure v0.12.6
   Compiling wasm-bindgen-backend v0.2.84
   Compiling thiserror-impl v1.0.38
   Compiling futures-macro v0.3.26
   Compiling tracing-attributes v0.1.23
   Compiling impl-trait-for-tuples v0.2.2
   Compiling derive_more v0.99.17
   Compiling ref-cast-impl v1.0.14
   Compiling sp-debug-derive v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/debug-derive)
   Compiling tokio-macros v1.8.2
   Compiling dyn-clonable-impl v0.9.0
   Compiling prost-derive v0.11.8
   Compiling data-encoding-macro-internal v0.1.10
   Compiling pin-project-internal v1.0.12
   Compiling sp-core-hashing-proc-macro v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/core/hashing/proc-macro)
   Compiling libp2p-swarm-derive v0.31.0
   Compiling enum-as-inner v0.5.1
   Compiling mockall_derive v0.11.3
    Checking secp256k1 v0.24.3
   Compiling cexpr v0.6.0
   Compiling Inflector v0.11.4
   Compiling clap_derive v4.1.8
   Compiling zeroize_derive v1.3.3
    Checking dyn-clonable v0.9.0
    Checking data-encoding-macro v0.1.12
    Checking multibase v0.9.1
   Compiling wasm-bindgen-macro-support v0.2.84
    Checking pin-project v1.0.12
    Checking webpki v0.22.0
    Checking sct v0.7.0
    Checking zeroize v1.5.7
    Checking tracing v0.1.37
   Compiling prost v0.11.8
    Checking clap v4.1.8
    Checking netlink-packet-utils v0.5.2
    Checking sp-maybe-compressed-blob v4.1.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/maybe-compressed-blob)
    Checking webpki-roots v0.22.6
    Checking curve25519-dalek v3.2.0
    Checking curve25519-dalek v2.1.3
    Checking merlin v2.0.1
    Checking tiny-bip39 v1.0.0
    Checking secrecy v0.8.0
    Checking der v0.6.1
    Checking mockall v0.11.3
    Checking netlink-packet-core v0.4.2
    Checking tower v0.4.13
    Checking tracing-futures v0.2.5
   Compiling prost-types v0.11.8
   Compiling wasm-bindgen-macro v0.2.84
    Checking netlink-packet-route v0.12.0
    Checking schnorrkel v0.9.1
    Checking ed25519-zebra v3.1.0
    Checking x25519-dalek v1.1.1
    Checking spki v0.6.0
    Checking tokio-util v0.7.7
    Checking pkcs8 v0.9.0
    Checking substrate-bip39 v0.4.4
    Checking futures-executor v0.3.26
    Checking asynchronous-codec v0.6.1
    Checking trust-dns-proto v0.22.0
    Checking tower-http v0.3.5
    Checking sec1 v0.3.0
    Checking futures-rustls v0.22.2
    Checking tokio-rustls v0.23.4
    Checking futures v0.3.26
    Checking unsigned-varint v0.7.1
    Checking tokio-stream v0.1.12
    Checking rw-stream-sink v0.3.0
    Checking soketto v0.7.1
    Checking netlink-sys v0.8.4
    Checking yamux v0.10.2
    Checking wasm-timer v0.2.5
    Checking exit-future v0.2.0
    Checking multistream-select v0.12.1
    Checking prost-codec v0.3.0
    Checking js-sys v0.3.61
   Compiling prost-build v0.11.8
    Checking netlink-proto v0.10.0
    Checking cranelift-entity v0.93.1
    Checking ed25519-dalek v1.0.1
    Checking bincode v1.3.3
    Checking impl-serde v0.4.0
    Checking toml v0.5.11
    Checking tracing-serde v0.1.3
    Checking beef v0.5.2
    Checking rtnetlink v0.10.1
    Checking cranelift-bforest v0.93.1
    Checking gimli v0.26.2
    Checking wasmparser v0.100.0
    Checking object v0.29.0
    Checking h2 v0.3.16
    Checking tracing-subscriber v0.2.25
    Checking jsonrpsee-types v0.16.2
    Checking trust-dns-resolver v0.22.0
    Checking if-watch v3.0.0
   Compiling libp2p-core v0.38.0
   Compiling libp2p-kad v0.42.1
   Compiling libp2p-noise v0.41.0
   Compiling libp2p-identify v0.41.1
   Compiling sc-network-light v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/light)
   Compiling sc-network-bitswap v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/bitswap)
   Compiling sc-network-sync v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/sync)
   Compiling librocksdb-sys v0.8.3+7.4.4
   Compiling ss58-registry v1.39.0
   Compiling proc-macro-crate v1.1.3
    Checking wasm-bindgen-futures v0.4.34
   Compiling parity-scale-codec-derive v3.1.4
   Compiling scale-info-derive v2.3.1
   Compiling sp-runtime-interface-proc-macro v6.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/runtime-interface/proc-macro)
   Compiling multihash-derive v0.8.1
   Compiling sp-api-proc-macro v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/api/proc-macro)
   Compiling jsonrpsee-proc-macros v0.16.2
   Compiling sc-chain-spec-derive v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/chain-spec/derive)
   Compiling sc-tracing-proc-macro v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/tracing/proc-macro)
   Compiling substrate-test-utils-derive v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/test-utils/derive)
    Checking wasmtime-types v6.0.1
    Checking addr2line v0.17.0
    Checking substrate-test-utils v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/test-utils)
    Checking multihash v0.16.3
    Checking wasmtime-environ v6.0.1
    Checking wasmtime-jit-debug v6.0.1
    Checking parity-scale-codec v3.4.0
    Checking multiaddr v0.16.0
    Checking cid v0.8.6
    Checking hyper v0.14.24
    Checking scale-info v2.3.1
    Checking sp-storage v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/storage)
    Checking impl-codec v0.6.0
    Checking sp-tracing v6.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/tracing)
    Checking fork-tree v3.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/utils/fork-tree)
   Compiling sp-version-proc-macro v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/version/proc-macro)
    Checking sp-externalities v0.13.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/externalities)
    Checking primitive-types v0.12.1
    Checking bounded-collections v0.1.5
    Checking sp-arithmetic v6.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/arithmetic)
    Checking finality-grandpa v0.16.2
    Checking libp2p-swarm v0.41.1
    Checking libp2p-yamux v0.42.0
    Checking libp2p-wasm-ext v0.38.0
    Checking libp2p-tcp v0.38.0
    Checking libp2p-websocket v0.40.0
    Checking libp2p-dns v0.38.0
    Checking libp2p-mplex v0.38.0
    Checking wasmtime-jit v6.0.1
    Checking sc-utils v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/utils)
    Checking libp2p-mdns v0.42.0
    Checking libp2p-ping v0.41.0
    Checking libp2p-request-response v0.23.0
    Checking substrate-prometheus-endpoint v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/utils/prometheus)
    Checking jsonrpsee-core v0.16.2
    Checking hyper-rustls v0.23.2
    Checking libp2p v0.50.0
    Checking sc-peerset v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/peerset)
    Checking sc-telemetry v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/telemetry)
    Checking cranelift-frontend v0.93.1
    Checking cranelift-native v0.93.1
    Checking jsonrpsee-server v0.16.2
    Checking cranelift-wasm v0.93.1
    Checking jsonrpsee v0.16.2
    Checking wasmtime-cranelift v6.0.1
    Checking sc-rpc-server v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc-servers)
    Checking sp-wasm-interface v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/wasm-interface)
    Checking sp-runtime-interface v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/runtime-interface)
    Checking sp-core v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/core)
    Checking sp-trie v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/trie)
    Checking sp-keystore v0.13.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/keystore)
    Checking sp-weights v4.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/weights)
    Checking sc-allocator v4.1.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/allocator)
    Checking sp-rpc v6.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/rpc)
    Checking sc-state-db v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/state-db)
    Checking sc-executor-common v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/executor/common)
    Checking sc-executor-wasmi v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/executor/wasmi)
    Checking sp-state-machine v0.13.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/state-machine)
    Checking sp-io v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/io)
    Checking sp-application-crypto v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/application-crypto)
    Checking sp-runtime v7.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/runtime)
    Checking sc-keystore v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/keystore)
    Checking sp-version v5.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/primitives/version)
    Checking sp-inherents v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/inherents)
    Checking sp-staking v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/staking)
    Checking sp-api v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/api)
    Checking sc-executor v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/executor)
    Checking sp-consensus-grandpa v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/consensus/grandpa)
    Checking sp-offchain v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/offchain)
    Checking sp-transaction-pool v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/transaction-pool)
    Checking sp-session v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/session)
    Checking sp-consensus v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/consensus/common)
    Checking sp-block-builder v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/block-builder)
    Checking sp-blockchain v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/blockchain)
    Checking sp-transaction-storage-proof v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/primitives/transaction-storage-proof)
    Checking sc-transaction-pool-api v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/transaction-pool/api)
    Checking sc-client-api v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/api)
test substrate_test_utils_derive_trybuild has been running for over 60 seconds
    Checking sc-consensus v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/consensus/common)
    Checking sc-block-builder v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/block-builder)
    Checking sc-tracing v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/tracing)
    Checking sc-transaction-pool v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/transaction-pool)
    Checking sc-network-common v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/common)
warning: unused import: `Encode`
  --> /home/miszka/parity/09-test-runtime/substrate-2/client/transaction-pool/src/graph/pool.rs:20:13
   |
20 | use codec::{Encode};
   |             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `sc-transaction-pool` (lib) generated 1 warning
    Checking sc-network v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network)
    Checking sc-chain-spec v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/chain-spec)
    Checking sc-informant v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/informant)
    Checking sc-network-transactions v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/network/transactions)
    Checking sc-offchain v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/offchain)
    Checking sc-rpc-api v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc-api)
    Checking sc-rpc-spec-v2 v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc-spec-v2)
    Checking sc-rpc v4.0.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/rpc)
    Checking rocksdb v0.19.0
    Checking kvdb-rocksdb v0.17.0
    Checking sc-client-db v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/db)
    Checking sc-storage-monitor v0.1.0 (/home/miszka/parity/09-test-runtime/substrate-2/client/storage-monitor)
    Checking sc-service v0.10.0-dev (/home/miszka/parity/09-test-runtime/substrate-2/client/service)
    Checking substrate-test-utils-tests v0.0.0 (/home/miszka/parity/09-test-runtime/substrate-2/target/tests/trybuild/substrate-test-utils)
    Finished dev [unoptimized + debuginfo] target(s) in 1m 33s


test [0m[1mtests/ui/too-many-func-parameters.rs[0m ... [0m[32mok
[0m

test substrate_test_utils_derive_trybuild ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 94.35s

     Running unittests src/lib.rs (target/debug/deps/substrate_test_utils_derive-096329b95e60f47c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/substrate_test_utils_test_crate-dea2a396e33cdd1f)

running 1 test
test basic_test ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/substrate_wasm_builder-2ec48993571f7981)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/try_runtime_cli-162a6adbc41861ac)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests binary-merkle-tree

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests fork-tree

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-benchmarking

running 23 tests
test src/lib.rs - v2 (line 155) ... ignored
test src/lib.rs - v2 (line 205) ... ignored
test src/lib.rs - v2 (line 223) ... ignored
test src/lib.rs - v2 (line 276) ... ignored
test src/lib.rs - v2 (line 71) ... ignored
test src/v1.rs - v1::add_benchmark (line 1790) ... ignored
test src/v1.rs - v1::add_benchmark (line 1816) ... ignored
test src/v1.rs - v1::add_benchmark (line 1823) ... ignored
test src/v1.rs - v1::add_benchmark (line 1836) ... ignored
test src/v1.rs - v1::add_benchmark (line 1844) ... ignored
test src/v1.rs - v1::benchmarks (line 141) ... ignored
test src/v1.rs - v1::benchmarks (line 160) ... ignored
test src/v1.rs - v1::benchmarks (line 43) ... ignored
test src/v1.rs - v1::benchmarks (line 75) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1328) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1334) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1354) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1364) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1407) ... ignored
test src/v1.rs - v1::impl_benchmark_test_suite (line 1421) ... ignored
test src/v1.rs - v1::list_benchmark (line 1946) ... ignored
test src/v1.rs - v1::list_benchmark (line 1953) ... ignored
test src/v1.rs - v1::add_benchmark (line 1800) ... ok

test result: ok. 1 passed; 0 failed; 22 ignored; 0 measured; 0 filtered out; finished in 2.74s

   Doc-tests frame-benchmarking-cli

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-benchmarking-pallet-pov

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-election-provider-solution-type

running 3 tests
test src/lib.rs - generate_solution_type (line 79) ... ignored
test src/lib.rs - generate_solution_type (line 65) ... ok
test src/lib.rs - generate_solution_type (line 110) ... ok

test result: ok. 2 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.74s

   Doc-tests frame-election-provider-support

running 2 tests
test src/lib.rs - (line 29) ... ignored
test src/lib.rs - (line 81) ... ok

test result: ok. 1 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.56s

   Doc-tests frame-executive

running 2 tests
test src/lib.rs - (line 54) ... ok
test src/lib.rs - (line 85) ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.60s

   Doc-tests frame-remote-externalities

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-support

running 76 tests
test src/dispatch.rs - dispatch::WithPostDispatchInfo::with_weight (line 317) ... ignored
test src/lib.rs - pallet (line 1499) ... ignored
test src/lib.rs - pallet (line 1509) ... ignored
test src/lib.rs - pallet (line 1605) ... ignored
test src/lib.rs - pallet (line 1614) ... ignored
test src/lib.rs - pallet (line 1653) ... ignored
test src/lib.rs - pallet (line 1680) ... ignored
test src/lib.rs - pallet (line 1696) ... ignored
test src/lib.rs - pallet (line 1718) ... ignored
test src/lib.rs - pallet (line 1739) ... ignored
test src/lib.rs - pallet (line 1759) ... ignored
test src/lib.rs - pallet (line 1777) ... ignored
test src/lib.rs - pallet (line 1789) ... ignored
test src/lib.rs - pallet (line 1801) ... ignored
test src/lib.rs - pallet (line 1862) ... ignored
test src/lib.rs - pallet (line 1889) ... ignored
test src/lib.rs - pallet (line 1929) ... ignored
test src/lib.rs - pallet (line 1965) ... ignored
test src/lib.rs - pallet (line 1974) ... ignored
test src/lib.rs - pallet (line 2015) ... ignored
test src/lib.rs - pallet (line 2040) ... ignored
test src/lib.rs - pallet (line 2049) ... ignored
test src/lib.rs - pallet (line 2080) ... ignored
test src/lib.rs - pallet (line 2143) ... ignored
test src/lib.rs - pallet (line 2152) ... ignored
test src/lib.rs - pallet (line 2171) ... ignored
test src/lib.rs - pallet (line 2188) ... ignored
test src/lib.rs - pallet (line 2200) ... ignored
test src/lib.rs - pallet (line 2223) ... ignored
test src/lib.rs - pallet (line 2243) ... ignored
test src/lib.rs - pallet (line 2267) ... ignored
test src/lib.rs - pallet (line 2641) ... ignored
test src/lib.rs - pallet (line 2663) ... ignored
test src/lib.rs - pallet (line 2672) ... ignored
test src/lib.rs - pallet (line 2697) ... ignored
test src/lib.rs - pallet (line 2733) ... ignored
test src/lib.rs - pallet (line 2798) ... ignored
test src/lib.rs - parameter_types (line 273) - compile fail ... ok
test src/instances.rs - instances (line 26) ... ok
test src/lib.rs - DebugNoBound (line 602) ... ok
test src/lib.rs - PartialEqNoBound (line 584) ... ok
test src/lib.rs - EqNoBound (line 566) ... ok
test src/lib.rs - storage_alias (line 144) ... ok
test src/lib.rs - require_transactional (line 652) ... ok
test src/lib.rs - CloneNoBound (line 548) ... ok
test src/lib.rs - crate_to_crate_version (line 686) ... ok
test src/lib.rs - DefaultNoBound (line 621) ... ok
test src/lib.rs - parameter_types (line 238) ... ok
test src/event.rs - event::decl_event (line 41) ... ok
test src/dispatch.rs - dispatch::decl_module (line 695) ... ok
test src/event.rs - event::decl_event (line 83) ... ok
test src/traits/dispatch.rs - traits::dispatch::EnsureOriginEqualOrHigherPrivilege (line 72) ... ok
test src/event.rs - event::decl_event (line 28) ... ok
test src/error.rs - error::decl_error (line 35) ... ok
test src/dispatch.rs - dispatch::decl_module (line 844) ... ok
test src/dispatch.rs - dispatch::decl_module (line 816) ... ok
test src/dispatch.rs - dispatch::decl_module (line 760) ... ok
test src/traits/misc.rs - traits::misc::DefensiveMax::defensive_max (line 523) ... ok
test src/dispatch.rs - dispatch::decl_module (line 781) ... ok
test src/lib.rs - pallet (line 2295) ... ok
test src/lib.rs - pallet (line 2489) ... ok
test src/dispatch.rs - dispatch::decl_module (line 730) ... ok
test src/traits/misc.rs - traits::misc::DefensiveMax::defensive_strict_max (line 542) ... ok
test src/dispatch.rs - dispatch::decl_module (line 652) ... ok
test src/traits/misc.rs - traits::misc::DefensiveMin::defensive_strict_min (line 478) ... ok
test src/traits/misc.rs - traits::misc::DefensiveMin::defensive_min (line 459) ... ok
test src/traits/misc.rs - traits::misc::IsSubType (line 765) ... ok
test src/traits/misc.rs - traits::misc::defensive_assert (line 80) ... ok
test src/traits/preimages.rs - traits::preimages::Bounded<T>::transmute (line 51) ... ok
test src/lib.rs - runtime_print (line 516) ... ok
test src/traits/misc.rs - traits::misc::DefensiveTruncateFrom::defensive_truncate_from (line 420) ... ok
test src/dispatch_context.rs - dispatch_context (line 38) ... ok
test src/storage/migration.rs - storage::migration::move_storage_from_pallet (line 320) ... ok
test src/storage/migration.rs - storage::migration::move_pallet (line 357) ... ok
test src/storage/storage_noop_guard.rs - storage::storage_noop_guard::StorageNoopGuard (line 30) ... ok
test src/traits/tokens/misc.rs - traits::tokens::misc::WithdrawReasons::except (line 203) ... ok

test result: ok. 39 passed; 0 failed; 37 ignored; 0 measured; 0 filtered out; finished in 9.39s

   Doc-tests frame-support-procedural

running 40 tests
test src/construct_runtime/mod.rs - construct_runtime (line 110) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 120) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 130) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 34) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 44) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 72) ... ignored
test src/construct_runtime/mod.rs - construct_runtime (line 94) ... ignored
test src/lib.rs - call_index (line 969) ... ignored
test src/lib.rs - config (line 792) ... ignored
test src/lib.rs - constant (line 819) ... ignored
test src/lib.rs - construct_runtime (line 312) ... ignored
test src/lib.rs - disable_frame_system_supertrait_check (line 834) ... ignored
test src/lib.rs - error (line 1028) ... ignored
test src/lib.rs - event (line 1076) ... ignored
test src/lib.rs - extra_constants (line 1001) ... ignored
test src/lib.rs - generate_storage_info (line 871) ... ignored
test src/lib.rs - generate_store (line 850) ... ignored
test src/lib.rs - genesis_build (line 1305) ... ignored
test src/lib.rs - genesis_build (line 1317) ... ignored
test src/lib.rs - genesis_config (line 1288) ... ignored
test src/lib.rs - hooks (line 908) ... ignored
test src/lib.rs - hooks (line 920) ... ignored
test src/lib.rs - inherent (line 1348) ... ignored
test src/lib.rs - origin (line 1400) ... ignored
test src/lib.rs - pallet (line 417) ... ignored
test src/lib.rs - pallet (line 426) ... ignored
test src/lib.rs - pallet (line 491) ... ignored
test src/lib.rs - pallet (line 513) ... ignored
test src/lib.rs - storage (line 1128) ... ignored
test src/lib.rs - storage (line 1137) ... ignored
test src/lib.rs - storage (line 1170) ... ignored
test src/lib.rs - storage_prefix (line 1197) ... ignored
test src/lib.rs - storage_prefix (line 1206) ... ignored
test src/lib.rs - storage_version (line 890) ... ignored
test src/lib.rs - type_value (line 1255) ... ignored
test src/lib.rs - type_value (line 1264) ... ignored
test src/lib.rs - validate_unsigned (line 1372) ... ignored
test src/lib.rs - whitelist_storage (line 1234) ... ignored
test src/pallet/expand/documentation.rs - pallet::expand::documentation::expand_documentation (line 150) ... ignored
test src/tt_macro.rs - tt_macro::create_tt_return_macro (line 57) ... ignored

test result: ok. 0 passed; 0 failed; 40 ignored; 0 measured; 0 filtered out; finished in 0.01s

   Doc-tests frame-support-procedural-tools

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-support-procedural-tools-derive

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-support-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-support-test-compile-pass

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-support-test-pallet

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-system

running 1 test
test src/offchain.rs - offchain::AppCrypto (line 376) ... ignored

test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-system-benchmarking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-system-rpc-runtime-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests frame-try-runtime

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests generate-bags

running 1 test
test src/lib.rs - (line 28) ... ignored

test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests kitchensink-runtime

running 2 tests
test src/lib.rs - benches::add_benchmarks (line 1887) ... ignored
test src/lib.rs - benches::list_benchmarks (line 1887) ... ignored

test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests mmr-gadget

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests mmr-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-cli

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-executor

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-inspect

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-primitives

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-template-runtime

running 2 tests
test src/lib.rs - benches::add_benchmarks (line 337) ... ignored
test src/lib.rs - benches::list_benchmarks (line 337) ... ignored

test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests node-testing

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-alliance

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-asset-tx-payment

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-assets

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-atomic-swap

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-aura

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-authority-discovery

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-authorship

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-babe

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-bags-list

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-bags-list-remote-tests

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-balances

running 2 tests
test src/lib.rs - (line 119) ... ok
test src/lib.rs - (line 105) ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.58s

   Doc-tests pallet-beefy

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-beefy-mmr

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-bounties

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-child-bounties

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-collective

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-contracts

running 1 test
test src/schedule.rs - schedule::Schedule (line 39) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.58s

   Doc-tests pallet-contracts-primitives

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-contracts-proc-macro

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-conviction-voting

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-core-fellowship

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-democracy

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-election-provider-multi-phase

running 2 tests
test src/lib.rs - (line 31) ... ignored
test src/lib.rs - (line 78) ... ignored

test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-election-provider-support-benchmarking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-elections-phragmen

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-example-basic

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-example-offchain-worker

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-fast-unstake

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-glutton

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-grandpa

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-identity

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-im-online

running 1 test
test src/lib.rs - (line 45) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.65s

   Doc-tests pallet-indices

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-insecure-randomness-collective-flip

running 1 test
test src/lib.rs - (line 44) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.64s

   Doc-tests pallet-lottery

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-membership

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-message-queue

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-mmr

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-multisig

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nfts

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nfts-runtime-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nicks

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nis

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-node-authorization

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nomination-pools

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nomination-pools-benchmarking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nomination-pools-runtime-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-nomination-pools-test-staking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-offences

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-offences-benchmarking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-preimage

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-proxy

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-ranked-collective

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-recovery

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-referenda

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-remark

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-root-offences

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-root-testing

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-salary

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-scheduler

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-scored-pool

running 1 test
test src/lib.rs - (line 56) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.68s

   Doc-tests pallet-session

running 1 test
test src/lib.rs - (line 94) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.56s

   Doc-tests pallet-session-benchmarking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-society

running 2 tests
test src/lib.rs - (line 153) ... ignored
test src/lib.rs - (line 95) ... ignored

test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-staking

running 1 test
test src/lib.rs - (line 159) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.65s

   Doc-tests pallet-staking-reward-curve

running 1 test
test src/lib.rs - build (line 58) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.57s

   Doc-tests pallet-staking-reward-fn

running 1 test
test src/lib.rs - compute_inflation (line 30) ... ignored

test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-staking-runtime-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-state-trie-migration

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-sudo

running 1 test
test src/lib.rs - (line 54) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.68s

   Doc-tests pallet-template

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-timestamp

running 1 test
test src/lib.rs - (line 66) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.67s

   Doc-tests pallet-tips

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-transaction-payment

running 4 tests
test src/lib.rs - (line 33) ... ignored
test src/lib.rs - pallet::Config::OperationalFeeMultiplier (line 321) ... ignored
test src/types.rs - types::FeeDetails<Balance>::final_fee (line 82) ... ignored
test src/types.rs - types::InclusionFee<Balance>::inclusion_fee (line 54) ... ignored

test result: ok. 0 passed; 0 failed; 4 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-transaction-payment-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-transaction-payment-rpc-runtime-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-transaction-storage

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-treasury

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-uniques

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-utility

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-vesting

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests pallet-whitelist

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-allocator

running 3 tests
test src/freeing_bump.rs - freeing_bump (line 22) ... ignored
test src/freeing_bump.rs - freeing_bump::Header (line 214) ... ignored
test src/freeing_bump.rs - freeing_bump::Header (line 220) ... ignored

test result: ok. 0 passed; 0 failed; 3 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-authority-discovery

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-basic-authorship

running 1 test
test src/lib.rs - (line 23) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 14.95s

   Doc-tests sc-block-builder

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-chain-spec

running 3 tests
test src/lib.rs - (line 85) ... ok
test src/lib.rs - (line 32) ... ok
test src/lib.rs - (line 51) ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.78s

   Doc-tests sc-chain-spec-derive

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-cli

running 2 tests
test src/config.rs - config::CliConfiguration::init (line 605) ... ok
test src/lib.rs - SubstrateCli::create_runner_with_logger_hook (line 215) ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.71s

   Doc-tests sc-client-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-client-db

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus

running 2 tests
test src/shared_data.rs - shared_data::SharedData (line 134) ... ok
test src/import_queue/buffered_link.rs - import_queue::buffered_link (line 25) ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 3.70s

   Doc-tests sc-consensus-aura

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-babe

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-babe-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-beefy

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-beefy-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-epochs

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-grandpa

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-grandpa-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-manual-seal

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-pow

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-consensus-slots

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-executor

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-executor-common

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-executor-wasmi

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-executor-wasmtime

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-informant

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-keystore

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network

running 3 tests
test src/service/traits.rs - service::traits::NetworkNotification::notification_sender (line 466) ... ignored
test src/config.rs - config::MultiaddrWithPeerId (line 116) ... ok
test src/config.rs - config::parse_str_addr (line 85) ... ok

test result: ok. 2 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 5.98s

   Doc-tests sc-network-bitswap

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-common

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-gossip

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-light

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-sync

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-network-transactions

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-offchain

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-peerset

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-proposer-metrics

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-rpc-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-rpc-server

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-rpc-spec-v2

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-runtime-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-service

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-service-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-state-db

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-storage-monitor

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-sync-state-rpc

running 1 test
test src/lib.rs - (line 27) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.65s

   Doc-tests sc-sysinfo

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-telemetry

running 1 test
test src/lib.rs - telemetry (line 501) - compile ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.06s

   Doc-tests sc-tracing

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-tracing-proc-macro

running 2 tests
test src/lib.rs - prefix_logs_with (line 41) ... ignored
test src/lib.rs - prefix_logs_with (line 75) ... ignored

test result: ok. 0 passed; 0 failed; 2 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-transaction-pool

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-transaction-pool-api

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sc-utils

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-api

running 8 tests
test src/lib.rs - impl_runtime_apis (line 332) ... ignored
test src/lib.rs - mock_impl_runtime_apis (line 357) ... ok
test src/lib.rs - decl_runtime_apis (line 128) ... ok
test src/lib.rs - decl_runtime_apis (line 215) ... ok
test src/lib.rs - decl_runtime_apis (line 162) ... ok
test src/lib.rs - mock_impl_runtime_apis (line 411) ... ok
test src/lib.rs - impl_runtime_apis (line 259) ... ok
test src/lib.rs - decl_runtime_apis (line 194) ... ok

test result: ok. 7 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.89s

   Doc-tests sp-api-proc-macro

running 2 tests
test src/decl_runtime_apis.rs - decl_runtime_apis::generate_versioned_api_traits (line 118) ... ignored
test src/decl_runtime_apis.rs - decl_runtime_apis::generate_versioned_api_traits (line 137) ... ok

test result: ok. 1 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.09s

   Doc-tests sp-application-crypto

running 3 tests
test src/lib.rs - wrap (line 540) ... ok
test src/lib.rs - with_pair (line 590) ... ok
test src/lib.rs - app_crypto (line 57) ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.67s

   Doc-tests sp-application-crypto-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-arithmetic

running 37 tests
test src/traits.rs - traits::ensure (line 375) ... ok
test src/traits.rs - traits::ensure (line 363) ... ok
test src/traits.rs - traits::ensure::EnsureFixedPointNumber::ensure_div_int (line 847) ... ok
test src/per_things.rs - per_things::Perquintill::saturating_div (line 1900) ... ok
test src/traits.rs - traits::ensure::EnsureMul::ensure_mul (line 497) ... ok
test src/per_things.rs - per_things::Perbill::saturating_div (line 1890) ... ok
test src/traits.rs - traits::ensure::EnsureDiv::ensure_div (line 538) ... ok
test src/per_things.rs - per_things::PerThing::from_rational_with_rounding (line 353) ... ok
test src/traits.rs - traits::ensure::EnsureAddAssign::ensure_add_assign (line 599) ... ok
test src/per_things.rs - per_things::PerU16::saturating_div (line 1870) ... ok
test src/traits.rs - traits::ensure::EnsureAddAssign::ensure_add_assign (line 609) ... ok
test src/per_things.rs - per_things::PerThing::saturating_reciprocal_mul (line 246) ... ok
test src/per_things.rs - per_things::Percent::saturating_div (line 1869) ... ok
test src/per_things.rs - per_things::Permill::saturating_div (line 1880) ... ok
test src/per_things.rs - per_things::PerThing::saturating_reciprocal_mul_floor (line 263) ... ok
test src/per_things.rs - per_things::PerThing::mul_floor (line 200) ... ok
test src/per_things.rs - per_things::PerThing::mul_ceil (line 223) ... ok
test src/traits.rs - traits::ensure::EnsureDivAssign::ensure_div_assign (line 728) ... ok
test src/traits.rs - traits::ensure::EnsureMulAssign::ensure_mul_assign (line 695) ... ok
test src/traits.rs - traits::ensure::EnsureDivAssign::ensure_div_assign (line 738) ... ok
test src/traits.rs - traits::ensure::EnsureFrom::ensure_from (line 876) ... ok
test src/traits.rs - traits::ensure::EnsureAdd::ensure_add (line 413) ... ok
test src/traits.rs - traits::ensure::EnsureInto::ensure_into (line 904) ... ok
test src/traits.rs - traits::ensure::EnsureFixedPointNumber::ensure_mul_int (line 820) ... ok
test src/per_things.rs - per_things::PerThing::saturating_reciprocal_mul_ceil (line 283) ... ok
test src/per_things.rs - per_things::PerThing::from_rational_with_rounding (line 388) ... ok
test src/per_things.rs - per_things::PerThing::from_rational (line 325) ... ok
test src/traits.rs - traits::ensure::EnsureDiv::ensure_div (line 529) ... ok
test src/traits.rs - traits::ensure::EnsureAdd::ensure_add (line 404) ... ok
test src/traits.rs - traits::ensure::EnsureMul::ensure_mul (line 488) ... ok
test src/traits.rs - traits::ensure::EnsureMulAssign::ensure_mul_assign (line 685) ... ok
test src/traits.rs - traits::ensure::EnsureFixedPointNumber::ensure_from_rational (line 789) ... ok
test src/traits.rs - traits::ensure::EnsureSub::ensure_sub (line 446) ... ok
test src/traits.rs - traits::ensure::EnsureSub::ensure_sub (line 455) ... ok
test src/traits.rs - traits::ensure::EnsureSubAssign::ensure_sub_assign (line 642) ... ok
test src/traits.rs - traits::ensure::EnsureSubAssign::ensure_sub_assign (line 652) ... ok
test src/traits.rs - traits::ensure::ensure_pow (line 564) ... ok

test result: ok. 37 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.09s

   Doc-tests sp-authority-discovery

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-block-builder

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-blockchain

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-aura

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-babe

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-beefy

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-grandpa

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-pow

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-slots

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-consensus-vrf

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-core

running 6 tests
test src/testing.rs - testing::wasm_export_functions (line 40) ... ok
test src/lib.rs - impl_maybe_marker (line 359) ... ok
test src/defer.rs - defer::defer (line 41) ... ok
test src/crypto.rs - crypto::SecretUri (line 799) ... ok
test src/crypto.rs - crypto::SecretUri (line 787) ... ok
test src/crypto.rs - crypto::SecretUri (line 775) ... ok

test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.88s

   Doc-tests sp-core-hashing

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-core-hashing-proc-macro

running 1 test
test src/lib.rs - (line 31) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.16s

   Doc-tests sp-database

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-debug-derive

running 1 test
test src/lib.rs - (line 28) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.11s

   Doc-tests sp-externalities

running 1 test
test src/extensions.rs - extensions::decl_extension (line 51) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

   Doc-tests sp-inherents

running 2 tests
test src/lib.rs - (line 47) ... ok
test src/lib.rs - (line 100) ... ok

test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.60s

   Doc-tests sp-io

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-keyring

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-keystore

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-maybe-compressed-blob

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-mmr-primitives

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-npos-elections

running 1 test
test src/lib.rs - (line 45) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.66s

   Doc-tests sp-offchain

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-panic-handler

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-runtime

running 7 tests
test src/traits.rs - traits::BlockNumberProvider::current_block_number (line 1931) ... ignored
test src/offchain/http.rs - offchain::http (line 28) - compile ... ok
test src/lib.rs - assert_eq_error_rate (line 807) ... ok
test src/traits.rs - traits::impl_opaque_keys (line 1742) ... ok
test src/traits.rs - traits::morph_types (line 344) ... ok
test src/offchain/storage_lock.rs - offchain::storage_lock (line 37) ... ok
test src/lib.rs - assert_eq_error_rate (line 815) ... ok

test result: ok. 6 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.78s

   Doc-tests sp-runtime-interface

running 11 tests
test src/lib.rs - runtime_interface (line 253) ... ok
test src/lib.rs - runtime_interface (line 189) ... ok
test src/pass_by.rs - pass_by::Enum (line 368) ... ok
test src/pass_by.rs - pass_by::PassByInner (line 70) ... ok
test src/pass_by.rs - pass_by::Codec (line 208) ... ok
test src/pass_by.rs - pass_by::PassByEnum (line 95) ... ok
test src/pass_by.rs - pass_by::PassByInner (line 76) ... ok
test src/pass_by.rs - pass_by::Inner (line 298) ... ok
test src/pass_by.rs - pass_by::PassByCodec (line 48) ... ok
test src/lib.rs - runtime_interface (line 133) ... ok
test src/lib.rs - (line 67) ... ok

test result: ok. 11 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.98s

   Doc-tests sp-runtime-interface-proc-macro

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-runtime-interface-test

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-runtime-interface-test-wasm

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-runtime-interface-test-wasm-deprecated

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-serializer

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-session

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-staking

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-state-machine

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-std

running 1 test
test src/lib.rs - if_std (line 46) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.10s

   Doc-tests sp-storage

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-test-primitives

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-timestamp

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-tracing

running 3 tests
test src/lib.rs - enter_span (line 225) ... ok
test src/lib.rs - types (line 76) ... ok
test src/lib.rs - within_span (line 144) ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.55s

   Doc-tests sp-transaction-pool

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-transaction-storage-proof

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-trie

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-version

running 1 test
test src/lib.rs - runtime_version (line 70) ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.54s

   Doc-tests sp-version-proc-macro

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-wasm-interface

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests sp-weights

running 5 tests
test src/lib.rs - FeePolynomial (line 163) ... ignored
test src/lib.rs - WeightToFeeCoefficient (line 103) ... ignored
test src/lib.rs - WeightToFeeCoefficient<Balance>::saturating_eval (line 128) ... ignored
test src/lib.rs - ConstantMultiplier (line 250) ... ok
test src/weight_meter.rs - weight_meter::WeightMeter (line 30) ... ok

test result: ok. 2 passed; 0 failed; 3 ignored; 0 measured; 0 filtered out; finished in 2.43s

   Doc-tests subkey

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-build-script-utils

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-frame-cli

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-frame-rpc-support

running 1 test
test src/lib.rs - StorageQuery (line 33) - compile ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.25s

   Doc-tests substrate-frame-rpc-system

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-prometheus-endpoint

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-rpc-client

running 1 test
test src/lib.rs - (line 25) - compile ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.11s

   Doc-tests substrate-state-trie-migration-rpc

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-test-client

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-test-runtime

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-test-runtime-client

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-test-runtime-transaction-pool

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-test-utils

running 3 tests
test src/lib.rs - test (line 30) ... ok
test src/lib.rs - assert_eq_uvec (line 44) ... ok
test src/lib.rs - assert_eq_uvec (line 52) ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.36s

   Doc-tests substrate-test-utils-derive

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

   Doc-tests substrate-wasm-builder

running 2 tests
test src/lib.rs - (line 50) ... ignored
test src/lib.rs - (line 32) - compile ... ok

test result: ok. 1 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.04s

   Doc-tests try-runtime-cli

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: 1 target failed:
    `-p sc-rpc-spec-v2 --lib`
